

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Oct 13 21:44:57 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1
    16                           	psect	text9,global,reloc=2,class=CODE,delta=1
    17                           	psect	text10,global,reloc=2,class=CODE,delta=1
    18                           	psect	text11,global,reloc=2,class=CODE,delta=1
    19                           	psect	text12,global,reloc=2,class=CODE,delta=1
    20                           	psect	text13,global,reloc=2,class=CODE,delta=1
    21                           	psect	text14,global,reloc=2,class=CODE,delta=1
    22                           	psect	text15,global,reloc=2,class=CODE,delta=1
    23                           	psect	text16,global,reloc=2,class=CODE,delta=1
    24                           	psect	text17,global,reloc=2,class=CODE,delta=1
    25                           	psect	text18,global,reloc=2,class=CODE,delta=1
    26                           	psect	text19,global,reloc=2,class=CODE,delta=1
    27                           	psect	text20,global,reloc=2,class=CODE,delta=1
    28                           	psect	text21,global,reloc=2,class=CODE,delta=1
    29                           	psect	text22,global,reloc=2,class=CODE,delta=1
    30                           	psect	text23,global,reloc=2,class=CODE,delta=1
    31                           	psect	text24,global,reloc=2,class=CODE,delta=1
    32                           	psect	text25,global,reloc=2,class=CODE,delta=1
    33                           	psect	text26,global,reloc=2,class=CODE,delta=1
    34                           	psect	text27,global,reloc=2,class=CODE,delta=1
    35                           	psect	text28,global,reloc=2,class=CODE,delta=1
    36                           	psect	text29,global,reloc=2,class=CODE,delta=1
    37                           	psect	text30,global,reloc=2,class=CODE,delta=1
    38                           	psect	text31,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    41  0000                     _ANCON0	set	3912
    42  0000                     _ANCON1	set	3913
    43  0000                     _RTCCFGbits	set	3903
    44  0000                     _ADCON0	set	4034
    45  0000                     _ADCON0bits	set	4034
    46  0000                     _ADCON1	set	4033
    47  0000                     _ADRESH	set	4036
    48  0000                     _LATBbits	set	3978
    49  0000                     _LATCbits	set	3979
    50  0000                     _OSCCONbits	set	4051
    51  0000                     _OSCTUNEbits	set	3995
    52  0000                     _PORTBbits	set	3969
    53  0000                     _T1CONbits	set	4045
    54  0000                     _TRISA	set	3986
    55  0000                     _TRISB	set	3987
    56  0000                     _TRISC	set	3988
    57                           
    58 ;;
    59 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
    60 ;;
    61 ;; *************** function _main *****************
    62 ;; Defined at:
    63 ;;		line 83 in file "main.c"
    64 ;; Parameters:    Size  Location     Type
    65 ;;		None
    66 ;; Auto vars:     Size  Location     Type
    67 ;;  valor           2   66[COMRAM] int 
    68 ;;  temperatura     2   64[COMRAM] int 
    69 ;;  i               2   62[COMRAM] int 
    70 ;; Return value:  Size  Location     Type
    71 ;;                  2   51[None  ] int 
    72 ;; Registers used:
    73 ;;		wreg, status,2, status,0, prodl, prodh, cstack
    74 ;; Tracked objects:
    75 ;;		On entry : 0/0
    76 ;;		On exit  : 0/0
    77 ;;		Unchanged: 0/0
    78 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
    79 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    80 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    81 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    82 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    83 ;;Total ram usage:        7 bytes
    84 ;; Hardware stack levels required when called:    5
    85 ;; This function calls:
    86 ;;		_imprimir_temperatura
    87 ;;		_leer_temperatura
    88 ;;		_setup
    89 ;; This function is called by:
    90 ;;		Startup code after reset
    91 ;; This function uses a non-reentrant model
    92 ;;
    93                           
    94                           	psect	text0
    95  00FAD4                     __ptext0:
    96                           	opt stack 0
    97  00FAD4                     _main:
    98                           	opt stack 26
    99                           
   100                           ;main.c: 85: setup();
   101                           
   102                           ;incstack = 0
   103  00FAD4  EC38  F07C         	call	_setup	;wreg free
   104                           
   105                           ;main.c: 86: int temperatura = 0;
   106  00FAD8  0E00               	movlw	0
   107  00FADA  6E42               	movwf	main@temperatura+1,c
   108  00FADC  0E00               	movlw	0
   109  00FADE  6E41               	movwf	main@temperatura,c
   110                           
   111                           ;main.c: 87: int valor = 99;
   112  00FAE0  0E00               	movlw	0
   113  00FAE2  6E44               	movwf	main@valor+1,c
   114  00FAE4  0E63               	movlw	99
   115  00FAE6  6E43               	movwf	main@valor,c
   116  00FAE8  D000               	goto	l1496
   117  00FAEA                     l1496:
   118                           
   119                           ;main.c: 92: temperatura = leer_temperatura();
   120  00FAEA  EC1C  F07C         	call	_leer_temperatura	;wreg free
   121  00FAEE  C039  F041         	movff	?_leer_temperatura,main@temperatura
   122  00FAF2  C03A  F042         	movff	?_leer_temperatura+1,main@temperatura+1
   123                           
   124                           ;main.c: 93: if (temperatura < valor){
   125  00FAF6  5043               	movf	main@valor,w,c
   126  00FAF8  5C41               	subwf	main@temperatura,w,c
   127  00FAFA  5042               	movf	main@temperatura+1,w,c
   128  00FAFC  0A80               	xorlw	128
   129  00FAFE  6E3E               	movwf	??_main& (0+255),c
   130  00FB00  5044               	movf	main@valor+1,w,c
   131  00FB02  0A80               	xorlw	128
   132  00FB04  583E               	subwfb	??_main& (0+255),w,c
   133  00FB06  B0D8               	btfsc	status,0,c
   134  00FB08  D004               	goto	l1502
   135                           
   136                           ;main.c: 94: valor--;
   137  00FB0A  0643               	decf	main@valor,f,c
   138  00FB0C  A0D8               	btfss	status,0,c
   139  00FB0E  0644               	decf	main@valor+1,f,c
   140                           
   141                           ;main.c: 95: }else{
   142  00FB10  D012               	goto	l1506
   143  00FB12                     l1502:
   144                           
   145                           ;main.c: 96: if (temperatura > valor){
   146  00FB12  5041               	movf	main@temperatura,w,c
   147  00FB14  5C43               	subwf	main@valor,w,c
   148  00FB16  5044               	movf	main@valor+1,w,c
   149  00FB18  0A80               	xorlw	128
   150  00FB1A  6E3E               	movwf	??_main& (0+255),c
   151  00FB1C  5042               	movf	main@temperatura+1,w,c
   152  00FB1E  0A80               	xorlw	128
   153  00FB20  583E               	subwfb	??_main& (0+255),w,c
   154  00FB22  B0D8               	btfsc	status,0,c
   155  00FB24  D003               	goto	l55
   156                           
   157                           ;main.c: 97: valor++;
   158  00FB26  4A43               	infsnz	main@valor,f,c
   159  00FB28  2A44               	incf	main@valor+1,f,c
   160                           
   161                           ;main.c: 98: }
   162  00FB2A  D005               	goto	l1506
   163  00FB2C                     l55:
   164                           
   165                           ;main.c: 99: else
   166                           ;main.c: 100: valor = temperatura;
   167  00FB2C  C041  F043         	movff	main@temperatura,main@valor
   168  00FB30  C042  F044         	movff	main@temperatura+1,main@valor+1
   169  00FB34  D000               	goto	l1506
   170  00FB36                     l1506:
   171                           
   172                           ;main.c: 101: }
   173                           ;main.c: 103: i = 0;
   174  00FB36  0E00               	movlw	0
   175  00FB38  6E40               	movwf	main@i+1,c
   176  00FB3A  0E00               	movlw	0
   177  00FB3C  6E3F               	movwf	main@i,c
   178                           
   179                           ;main.c: 104: while (i < 8){
   180  00FB3E  D009               	goto	l1512
   181  00FB40                     l1508:
   182                           
   183                           ;main.c: 105: imprimir_temperatura(valor);
   184  00FB40  C043  F009         	movff	main@valor,imprimir_temperatura@temp
   185  00FB44  C044  F00A         	movff	main@valor+1,imprimir_temperatura@temp+1
   186  00FB48  ECA2  F07C         	call	_imprimir_temperatura	;wreg free
   187                           
   188                           ;main.c: 106: i++;
   189  00FB4C  4A3F               	infsnz	main@i,f,c
   190  00FB4E  2A40               	incf	main@i+1,f,c
   191  00FB50  D000               	goto	l1512
   192  00FB52                     l1512:
   193  00FB52  BE40               	btfsc	main@i+1,7,c
   194  00FB54  D7F5               	goto	l1508
   195  00FB56  5040               	movf	main@i+1,w,c
   196  00FB58  E1C8               	bnz	l1496
   197  00FB5A  0E08               	movlw	8
   198  00FB5C  5C3F               	subwf	main@i,w,c
   199  00FB5E  B0D8               	btfsc	status,0,c
   200  00FB60  D7C4               	goto	l1496
   201  00FB62  D7EE               	goto	l1508
   202  00FB64  D7C2               	goto	l1496
   203                           
   204                           ;main.c: 107: }
   205                           ;main.c: 108: }
   206                           ;main.c: 110: return 0;
   207                           ;	Return value of _main is never used
   208  00FB66  EF00  F000         	goto	start
   209  00FB6A                     __end_of_main:
   210                           	opt stack 0
   211                           status	equ	0xFD8
   212                           
   213                           	psect	cinit
   214  00F718                     __pcinit:
   215                           	opt stack 0
   216  00F718                     start_initialization:
   217                           	opt stack 0
   218  00F718                     __initialization:
   219                           	opt stack 0
   220  00F718                     end_of_initialization:
   221                           	opt stack 0
   222  00F718                     __end_of__initialization:
   223                           	opt stack 0
   224  00F718  0E00               	movlw	low (__Lmediumconst shr (0+16))
   225  00F71A  6EF8               	movwf	tblptru,c
   226  00F71C  0100               	movlb	0
   227  00F71E  EF6A  F07D         	goto	_main	;jump to C main() function
   228                           tblptru	equ	0xFF8
   229                           status	equ	0xFD8
   230                           
   231                           	psect	cstackCOMRAM
   232  000001                     __pcstackCOMRAM:
   233                           	opt stack 0
   234  000001                     ??_tiempo_encendido_segmento:
   235  000001                     ?___wmul:
   236                           	opt stack 0
   237  000001                     ?___awdiv:
   238                           	opt stack 0
   239  000001                     ?___ftpack:
   240                           	opt stack 0
   241  000001                     ___wmul@multiplier:
   242                           	opt stack 0
   243  000001                     ___awdiv@dividend:
   244                           	opt stack 0
   245  000001                     ___ftpack@arg:
   246                           	opt stack 0
   247                           
   248                           ; 3 bytes @ 0x0
   249  000001                     	ds	1
   250  000002                     construir_numero@number:
   251                           	opt stack 0
   252                           
   253                           ; 2 bytes @ 0x1
   254  000002                     	ds	1
   255  000003                     ___wmul@multiplicand:
   256                           	opt stack 0
   257  000003                     ___awdiv@divisor:
   258                           	opt stack 0
   259                           
   260                           ; 2 bytes @ 0x2
   261  000003                     	ds	1
   262  000004                     ??_construir_numero:
   263  000004                     ___ftpack@exp:
   264                           	opt stack 0
   265                           
   266                           ; 1 bytes @ 0x3
   267  000004                     	ds	1
   268  000005                     ___awdiv@counter:
   269                           	opt stack 0
   270  000005                     ___ftpack@sign:
   271                           	opt stack 0
   272  000005                     ___wmul@product:
   273                           	opt stack 0
   274                           
   275                           ; 2 bytes @ 0x4
   276  000005                     	ds	1
   277  000006                     ??___ftpack:
   278  000006                     ___awdiv@sign:
   279                           	opt stack 0
   280                           
   281                           ; 1 bytes @ 0x5
   282  000006                     	ds	1
   283  000007                     ___awdiv@quotient:
   284                           	opt stack 0
   285                           
   286                           ; 2 bytes @ 0x6
   287  000007                     	ds	2
   288  000009                     ?___awtoft:
   289                           	opt stack 0
   290  000009                     imprimir_temperatura@temp:
   291                           	opt stack 0
   292  000009                     ___awtoft@c:
   293                           	opt stack 0
   294                           
   295                           ; 2 bytes @ 0x8
   296  000009                     	ds	2
   297  00000B                     imprimir_temperatura@unidad:
   298                           	opt stack 0
   299                           
   300                           ; 2 bytes @ 0xA
   301  00000B                     	ds	1
   302  00000C                     ___awtoft@sign:
   303                           	opt stack 0
   304                           
   305                           ; 1 bytes @ 0xB
   306  00000C                     	ds	1
   307  00000D                     ?___ftmul:
   308                           	opt stack 0
   309  00000D                     imprimir_temperatura@decena:
   310                           	opt stack 0
   311  00000D                     ___ftmul@f1:
   312                           	opt stack 0
   313                           
   314                           ; 3 bytes @ 0xC
   315  00000D                     	ds	3
   316  000010                     ___ftmul@f2:
   317                           	opt stack 0
   318                           
   319                           ; 3 bytes @ 0xF
   320  000010                     	ds	3
   321  000013                     ??___ftmul:
   322                           
   323                           ; 0 bytes @ 0x12
   324  000013                     	ds	3
   325  000016                     ___ftmul@exp:
   326                           	opt stack 0
   327                           
   328                           ; 1 bytes @ 0x15
   329  000016                     	ds	1
   330  000017                     ___ftmul@f3_as_product:
   331                           	opt stack 0
   332                           
   333                           ; 3 bytes @ 0x16
   334  000017                     	ds	3
   335  00001A                     ___ftmul@cntr:
   336                           	opt stack 0
   337                           
   338                           ; 1 bytes @ 0x19
   339  00001A                     	ds	1
   340  00001B                     ___ftmul@sign:
   341                           	opt stack 0
   342                           
   343                           ; 1 bytes @ 0x1A
   344  00001B                     	ds	1
   345  00001C                     ?___ftadd:
   346                           	opt stack 0
   347  00001C                     ___ftadd@f1:
   348                           	opt stack 0
   349                           
   350                           ; 3 bytes @ 0x1B
   351  00001C                     	ds	3
   352  00001F                     ___ftadd@f2:
   353                           	opt stack 0
   354                           
   355                           ; 3 bytes @ 0x1E
   356  00001F                     	ds	3
   357  000022                     ??___ftadd:
   358                           
   359                           ; 0 bytes @ 0x21
   360  000022                     	ds	3
   361  000025                     ___ftadd@sign:
   362                           	opt stack 0
   363                           
   364                           ; 1 bytes @ 0x24
   365  000025                     	ds	1
   366  000026                     ___ftadd@exp2:
   367                           	opt stack 0
   368                           
   369                           ; 1 bytes @ 0x25
   370  000026                     	ds	1
   371  000027                     ___ftadd@exp1:
   372                           	opt stack 0
   373                           
   374                           ; 1 bytes @ 0x26
   375  000027                     	ds	1
   376  000028                     ?___fttol:
   377                           	opt stack 0
   378  000028                     ___fttol@f1:
   379                           	opt stack 0
   380                           
   381                           ; 3 bytes @ 0x27
   382  000028                     	ds	4
   383  00002C                     ??___fttol:
   384                           
   385                           ; 0 bytes @ 0x2B
   386  00002C                     	ds	5
   387  000031                     ___fttol@sign1:
   388                           	opt stack 0
   389                           
   390                           ; 1 bytes @ 0x30
   391  000031                     	ds	1
   392  000032                     ___fttol@lval:
   393                           	opt stack 0
   394                           
   395                           ; 4 bytes @ 0x31
   396  000032                     	ds	4
   397  000036                     ___fttol@exp1:
   398                           	opt stack 0
   399                           
   400                           ; 1 bytes @ 0x35
   401  000036                     	ds	1
   402  000037                     ?_calcular_temperatura:
   403                           	opt stack 0
   404  000037                     calcular_temperatura@voltage:
   405                           	opt stack 0
   406                           
   407                           ; 2 bytes @ 0x36
   408  000037                     	ds	2
   409  000039                     ?_leer_temperatura:
   410                           	opt stack 0
   411                           
   412                           ; 2 bytes @ 0x38
   413  000039                     	ds	2
   414  00003B                     ??_leer_temperatura:
   415                           
   416                           ; 0 bytes @ 0x3A
   417  00003B                     	ds	1
   418  00003C                     leer_temperatura@voltage:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0x3B
   422  00003C                     	ds	2
   423  00003E                     ??_main:
   424                           
   425                           ; 0 bytes @ 0x3D
   426  00003E                     	ds	1
   427  00003F                     main@i:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x3E
   431  00003F                     	ds	2
   432  000041                     main@temperatura:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x40
   436  000041                     	ds	2
   437  000043                     main@valor:
   438                           	opt stack 0
   439                           
   440                           ; 2 bytes @ 0x42
   441  000043                     	ds	2
   442                           tblptru	equ	0xFF8
   443                           status	equ	0xFD8
   444                           
   445 ;; *************** function _setup *****************
   446 ;; Defined at:
   447 ;;		line 26 in file "main.c"
   448 ;; Parameters:    Size  Location     Type
   449 ;;		None
   450 ;; Auto vars:     Size  Location     Type
   451 ;;		None
   452 ;; Return value:  Size  Location     Type
   453 ;;		None               void
   454 ;; Registers used:
   455 ;;		wreg, status,2
   456 ;; Tracked objects:
   457 ;;		On entry : 0/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   465 ;;Total ram usage:        0 bytes
   466 ;; Hardware stack levels used:    1
   467 ;; This function calls:
   468 ;;		Nothing
   469 ;; This function is called by:
   470 ;;		_main
   471 ;; This function uses a non-reentrant model
   472 ;;
   473                           
   474                           	psect	text1
   475  00F870                     __ptext1:
   476                           	opt stack 0
   477  00F870                     _setup:
   478                           	opt stack 30
   479                           
   480                           ;main.c: 28: OSCTUNEbits.INTSRC=1;
   481                           
   482                           ;incstack = 0
   483  00F870  8E9B               	bsf	3995,7,c	;volatile
   484                           
   485                           ;main.c: 29: OSCTUNEbits.PLLEN=0;
   486  00F872  9C9B               	bcf	3995,6,c	;volatile
   487                           
   488                           ;main.c: 30: OSCCONbits.IRCF0=1;
   489  00F874  88D3               	bsf	4051,4,c	;volatile
   490                           
   491                           ;main.c: 31: OSCCONbits.IRCF1=1;
   492  00F876  8AD3               	bsf	4051,5,c	;volatile
   493                           
   494                           ;main.c: 32: OSCCONbits.IRCF2=1;
   495  00F878  8CD3               	bsf	4051,6,c	;volatile
   496                           
   497                           ;main.c: 33: OSCCONbits.SCS0=0;
   498  00F87A  90D3               	bcf	4051,0,c	;volatile
   499                           
   500                           ;main.c: 34: OSCCONbits.SCS1=0;
   501  00F87C  92D3               	bcf	4051,1,c	;volatile
   502                           
   503                           ;main.c: 35: TRISA = 0b11111000;
   504  00F87E  0EF8               	movlw	248
   505  00F880  6E92               	movwf	3986,c	;volatile
   506                           
   507                           ;main.c: 36: TRISB = 0;
   508  00F882  0E00               	movlw	0
   509  00F884  6E93               	movwf	3987,c	;volatile
   510                           
   511                           ;main.c: 37: TRISC = 0b00000111;
   512  00F886  0E07               	movlw	7
   513  00F888  6E94               	movwf	3988,c	;volatile
   514                           
   515                           ;main.c: 41: ANCON0=0b11111110;
   516  00F88A  0EFE               	movlw	254
   517  00F88C  010F               	movlb	15	; () banked
   518  00F88E  6F48               	movwf	72,b	;volatile
   519                           
   520                           ; BSR set to: 15
   521                           ;main.c: 43: ANCON1=0b11111111;
   522  00F890  010F               	movlb	15	; () banked
   523  00F892  6949               	setf	73,b	;volatile
   524                           
   525                           ;main.c: 44: ADCON0=0b01000000;
   526  00F894  0E40               	movlw	64
   527  00F896  6EC2               	movwf	4034,c	;volatile
   528                           
   529                           ;main.c: 45: ADCON1=0b00111000;
   530  00F898  0E38               	movlw	56
   531  00F89A  6EC1               	movwf	4033,c	;volatile
   532                           
   533                           ; BSR set to: 15
   534                           ;main.c: 46: RTCCFGbits.RTCEN=1;
   535  00F89C  010F               	movlb	15	; () banked
   536  00F89E  8F3F               	bsf	63,7,b	;volatile
   537                           
   538                           ; BSR set to: 15
   539                           ;main.c: 47: RTCCFGbits.RTCWREN=1;
   540  00F8A0  010F               	movlb	15	; () banked
   541  00F8A2  8B3F               	bsf	63,5,b	;volatile
   542                           
   543                           ; BSR set to: 15
   544                           ;main.c: 48: T1CONbits.T1OSCEN=1;
   545  00F8A4  86CD               	bsf	4045,3,c	;volatile
   546                           
   547                           ; BSR set to: 15
   548  00F8A6  0012               	return		;funcret
   549  00F8A8                     __end_of_setup:
   550                           	opt stack 0
   551                           tblptru	equ	0xFF8
   552                           status	equ	0xFD8
   553                           
   554 ;; *************** function _leer_temperatura *****************
   555 ;; Defined at:
   556 ;;		line 71 in file "main.c"
   557 ;; Parameters:    Size  Location     Type
   558 ;;		None
   559 ;; Auto vars:     Size  Location     Type
   560 ;;  voltage         2   59[COMRAM] int 
   561 ;; Return value:  Size  Location     Type
   562 ;;                  2   56[COMRAM] int 
   563 ;; Registers used:
   564 ;;		wreg, status,2, status,0, cstack
   565 ;; Tracked objects:
   566 ;;		On entry : 0/0
   567 ;;		On exit  : 0/0
   568 ;;		Unchanged: 0/0
   569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   570 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   571 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   572 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   573 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   574 ;;Total ram usage:        5 bytes
   575 ;; Hardware stack levels used:    1
   576 ;; Hardware stack levels required when called:    3
   577 ;; This function calls:
   578 ;;		_calcular_temperatura
   579 ;; This function is called by:
   580 ;;		_main
   581 ;; This function uses a non-reentrant model
   582 ;;
   583                           
   584                           	psect	text2
   585  00F838                     __ptext2:
   586                           	opt stack 0
   587  00F838                     _leer_temperatura:
   588                           	opt stack 27
   589                           
   590                           ;main.c: 72: ADCON0bits.ADON = 1;
   591                           
   592                           ; BSR set to: 15
   593                           ;incstack = 0
   594  00F838  80C2               	bsf	4034,0,c	;volatile
   595                           
   596                           ;main.c: 73: ADCON0bits.GO = 1;
   597  00F83A  82C2               	bsf	4034,1,c	;volatile
   598                           
   599                           ;main.c: 74: int voltage;
   600                           ;main.c: 76: while (ADCON0bits.GO);
   601  00F83C  D000               	goto	l46
   602  00F83E                     l46:
   603  00F83E  B2C2               	btfsc	4034,1,c	;volatile
   604  00F840  D7FE               	goto	l46
   605                           
   606                           ;main.c: 77: _delay((unsigned long)((1)*(8000000/4000.0)));
   607  00F842  0E03               	movlw	3
   608  00F844  6E3B               	movwf	??_leer_temperatura& (0+255),c
   609  00F846  0E98               	movlw	152
   610  00F848                     u1097:
   611  00F848  2EE8               	decfsz	wreg,f,c
   612  00F84A  D7FE               	goto	u1097
   613  00F84C  2E3B               	decfsz	??_leer_temperatura& (0+255),f,c
   614  00F84E  D7FC               	goto	u1097
   615                           
   616                           ;main.c: 78: voltage = ADRESH;
   617  00F850  CFC4 F03C          	movff	4036,leer_temperatura@voltage	;volatile
   618  00F854  6A3D               	clrf	leer_temperatura@voltage+1,c
   619                           
   620                           ;main.c: 79: ADCON0bits.ADON = 0;
   621  00F856  90C2               	bcf	4034,0,c	;volatile
   622                           
   623                           ;main.c: 80: return calcular_temperatura(voltage);
   624  00F858  C03C  F037         	movff	leer_temperatura@voltage,calcular_temperatura@voltage
   625  00F85C  C03D  F038         	movff	leer_temperatura@voltage+1,calcular_temperatura@voltage+1
   626  00F860  EC72  F07C         	call	_calcular_temperatura	;wreg free
   627  00F864  C037  F039         	movff	?_calcular_temperatura,?_leer_temperatura
   628  00F868  C038  F03A         	movff	?_calcular_temperatura+1,?_leer_temperatura+1
   629  00F86C  0012               	return	
   630  00F86E  0012               	return		;funcret
   631  00F870                     __end_of_leer_temperatura:
   632                           	opt stack 0
   633                           tblptru	equ	0xFF8
   634                           wreg	equ	0xFE8
   635                           status	equ	0xFD8
   636                           
   637 ;; *************** function _calcular_temperatura *****************
   638 ;; Defined at:
   639 ;;		line 66 in file "main.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;  voltage         2   54[COMRAM] int 
   642 ;; Auto vars:     Size  Location     Type
   643 ;;		None
   644 ;; Return value:  Size  Location     Type
   645 ;;                  2   54[COMRAM] int 
   646 ;; Registers used:
   647 ;;		wreg, status,2, status,0, cstack
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   653 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   656 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   657 ;;Total ram usage:        2 bytes
   658 ;; Hardware stack levels used:    1
   659 ;; Hardware stack levels required when called:    2
   660 ;; This function calls:
   661 ;;		___awtoft
   662 ;;		___ftadd
   663 ;;		___ftmul
   664 ;;		___fttol
   665 ;; This function is called by:
   666 ;;		_leer_temperatura
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670                           	psect	text3
   671  00F8E4                     __ptext3:
   672                           	opt stack 0
   673  00F8E4                     _calcular_temperatura:
   674                           	opt stack 27
   675                           
   676                           ;main.c: 68: return (int)(0.588 * voltage - 50);
   677                           
   678                           ;incstack = 0
   679  00F8E4  0E00               	movlw	0
   680  00F8E6  6E1F               	movwf	___ftadd@f2,c
   681  00F8E8  0E48               	movlw	72
   682  00F8EA  6E20               	movwf	___ftadd@f2+1,c
   683  00F8EC  0EC2               	movlw	194
   684  00F8EE  6E21               	movwf	___ftadd@f2+2,c
   685  00F8F0  0E87               	movlw	135
   686  00F8F2  6E10               	movwf	___ftmul@f2,c
   687  00F8F4  0E16               	movlw	22
   688  00F8F6  6E11               	movwf	___ftmul@f2+1,c
   689  00F8F8  0E3F               	movlw	63
   690  00F8FA  6E12               	movwf	___ftmul@f2+2,c
   691  00F8FC  C037  F009         	movff	calcular_temperatura@voltage,___awtoft@c
   692  00F900  C038  F00A         	movff	calcular_temperatura@voltage+1,___awtoft@c+1
   693  00F904  EC54  F07C         	call	___awtoft	;wreg free
   694  00F908  C009  F00D         	movff	?___awtoft,___ftmul@f1
   695  00F90C  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
   696  00F910  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
   697  00F914  EC18  F07E         	call	___ftmul	;wreg free
   698  00F918  C00D  F01C         	movff	?___ftmul,___ftadd@f1
   699  00F91C  C00E  F01D         	movff	?___ftmul+1,___ftadd@f1+1
   700  00F920  C00F  F01E         	movff	?___ftmul+2,___ftadd@f1+2
   701  00F924  EC1A  F07F         	call	___ftadd	;wreg free
   702  00F928  C01C  F028         	movff	?___ftadd,___fttol@f1
   703  00F92C  C01D  F029         	movff	?___ftadd+1,___fttol@f1+1
   704  00F930  C01E  F02A         	movff	?___ftadd+2,___fttol@f1+2
   705  00F934  EC99  F07E         	call	___fttol	;wreg free
   706  00F938  C028  F037         	movff	?___fttol,?_calcular_temperatura
   707  00F93C  C029  F038         	movff	?___fttol+1,?_calcular_temperatura+1
   708  00F940  0012               	return	
   709  00F942  0012               	return		;funcret
   710  00F944                     __end_of_calcular_temperatura:
   711                           	opt stack 0
   712                           tblptru	equ	0xFF8
   713                           wreg	equ	0xFE8
   714                           status	equ	0xFD8
   715                           
   716 ;; *************** function ___fttol *****************
   717 ;; Defined at:
   718 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;  f1              3   39[COMRAM] float 
   721 ;; Auto vars:     Size  Location     Type
   722 ;;  lval            4   49[COMRAM] unsigned long 
   723 ;;  exp1            1   53[COMRAM] unsigned char 
   724 ;;  sign1           1   48[COMRAM] unsigned char 
   725 ;; Return value:  Size  Location     Type
   726 ;;                  4   39[COMRAM] long 
   727 ;; Registers used:
   728 ;;		wreg, status,2, status,0
   729 ;; Tracked objects:
   730 ;;		On entry : 0/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   734 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   735 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   736 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   737 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   738 ;;Total ram usage:       15 bytes
   739 ;; Hardware stack levels used:    1
   740 ;; This function calls:
   741 ;;		Nothing
   742 ;; This function is called by:
   743 ;;		_calcular_temperatura
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           	psect	text4
   748  00FD32                     __ptext4:
   749                           	opt stack 0
   750  00FD32                     ___fttol:
   751                           	opt stack 28
   752                           
   753                           ;incstack = 0
   754  00FD32  C02A  F02C         	movff	___fttol@f1+2,??___fttol
   755  00FD36  6A2D               	clrf	(??___fttol+1)& (0+255),c
   756  00FD38  6A2E               	clrf	(??___fttol+2)& (0+255),c
   757  00FD3A  3429               	rlcf	___fttol@f1+1,w,c
   758  00FD3C  362C               	rlcf	??___fttol& (0+255),f,c
   759  00FD3E  E301               	bnc	u911
   760  00FD40  802D               	bsf	(??___fttol+1)& (0+255),0,c
   761  00FD42                     u911:
   762  00FD42  502C               	movf	??___fttol,w,c
   763  00FD44  6E36               	movwf	___fttol@exp1,c
   764  00FD46  5036               	movf	___fttol@exp1,w,c
   765  00FD48  A4D8               	btfss	status,2,c
   766  00FD4A  D009               	goto	l1338
   767  00FD4C  0E00               	movlw	0
   768  00FD4E  6E28               	movwf	?___fttol,c
   769  00FD50  0E00               	movlw	0
   770  00FD52  6E29               	movwf	?___fttol+1,c
   771  00FD54  0E00               	movlw	0
   772  00FD56  6E2A               	movwf	?___fttol+2,c
   773  00FD58  0E00               	movlw	0
   774  00FD5A  6E2B               	movwf	?___fttol+3,c
   775  00FD5C  0012               	return	
   776  00FD5E                     l1338:
   777  00FD5E  0E17               	movlw	23
   778  00FD60  6E2C               	movwf	??___fttol& (0+255),c
   779  00FD62  C028  F02D         	movff	___fttol@f1,??___fttol+1
   780  00FD66  C029  F02E         	movff	___fttol@f1+1,??___fttol+2
   781  00FD6A  C02A  F02F         	movff	___fttol@f1+2,??___fttol+3
   782  00FD6E  282C               	incf	??___fttol,w,c
   783  00FD70  6E30               	movwf	(??___fttol+4)& (0+255),c
   784  00FD72  D004               	goto	u930
   785  00FD74                     u935:
   786  00FD74  90D8               	bcf	status,0,c
   787  00FD76  322F               	rrcf	??___fttol+3,f,c
   788  00FD78  322E               	rrcf	??___fttol+2,f,c
   789  00FD7A  322D               	rrcf	??___fttol+1,f,c
   790  00FD7C                     u930:
   791  00FD7C  2E30               	decfsz	(??___fttol+4)& (0+255),f,c
   792  00FD7E  D7FA               	goto	u935
   793  00FD80  502D               	movf	??___fttol+1,w,c
   794  00FD82  6E31               	movwf	___fttol@sign1,c
   795  00FD84  8E29               	bsf	___fttol@f1+1,7,c
   796  00FD86  0EFF               	movlw	255
   797  00FD88  1628               	andwf	___fttol@f1,f,c
   798  00FD8A  0EFF               	movlw	255
   799  00FD8C  1629               	andwf	___fttol@f1+1,f,c
   800  00FD8E  0E00               	movlw	0
   801  00FD90  162A               	andwf	___fttol@f1+2,f,c
   802  00FD92  5028               	movf	___fttol@f1,w,c
   803  00FD94  6E32               	movwf	___fttol@lval,c
   804  00FD96  5029               	movf	___fttol@f1+1,w,c
   805  00FD98  6E33               	movwf	___fttol@lval+1,c
   806  00FD9A  502A               	movf	___fttol@f1+2,w,c
   807  00FD9C  6E34               	movwf	___fttol@lval+2,c
   808  00FD9E  6A35               	clrf	___fttol@lval+3,c
   809  00FDA0  0E8E               	movlw	142
   810  00FDA2  5E36               	subwf	___fttol@exp1,f,c
   811  00FDA4  AE36               	btfss	___fttol@exp1,7,c
   812  00FDA6  D017               	goto	l1360
   813  00FDA8  5036               	movf	___fttol@exp1,w,c
   814  00FDAA  0A80               	xorlw	128
   815  00FDAC  0F8F               	addlw	143
   816  00FDAE  B0D8               	btfsc	status,0,c
   817  00FDB0  D00A               	goto	l1356
   818  00FDB2  0E00               	movlw	0
   819  00FDB4  6E28               	movwf	?___fttol,c
   820  00FDB6  0E00               	movlw	0
   821  00FDB8  6E29               	movwf	?___fttol+1,c
   822  00FDBA  0E00               	movlw	0
   823  00FDBC  6E2A               	movwf	?___fttol+2,c
   824  00FDBE  0E00               	movlw	0
   825  00FDC0  6E2B               	movwf	?___fttol+3,c
   826  00FDC2  0012               	return	
   827  00FDC4  D000               	goto	l1356
   828  00FDC6                     l1356:
   829  00FDC6  90D8               	bcf	status,0,c
   830  00FDC8  3235               	rrcf	___fttol@lval+3,f,c
   831  00FDCA  3234               	rrcf	___fttol@lval+2,f,c
   832  00FDCC  3233               	rrcf	___fttol@lval+1,f,c
   833  00FDCE  3232               	rrcf	___fttol@lval,f,c
   834  00FDD0  3E36               	incfsz	___fttol@exp1,f,c
   835  00FDD2  D7F9               	goto	l1356
   836  00FDD4  D019               	goto	l1370
   837  00FDD6                     l1360:
   838  00FDD6  0E17               	movlw	23
   839  00FDD8  6436               	cpfsgt	___fttol@exp1,c
   840  00FDDA  D011               	goto	l1368
   841  00FDDC  0E00               	movlw	0
   842  00FDDE  6E28               	movwf	?___fttol,c
   843  00FDE0  0E00               	movlw	0
   844  00FDE2  6E29               	movwf	?___fttol+1,c
   845  00FDE4  0E00               	movlw	0
   846  00FDE6  6E2A               	movwf	?___fttol+2,c
   847  00FDE8  0E00               	movlw	0
   848  00FDEA  6E2B               	movwf	?___fttol+3,c
   849  00FDEC  0012               	return	
   850  00FDEE  D007               	goto	l1368
   851  00FDF0                     l1366:
   852  00FDF0  90D8               	bcf	status,0,c
   853  00FDF2  3632               	rlcf	___fttol@lval,f,c
   854  00FDF4  3633               	rlcf	___fttol@lval+1,f,c
   855  00FDF6  3634               	rlcf	___fttol@lval+2,f,c
   856  00FDF8  3635               	rlcf	___fttol@lval+3,f,c
   857  00FDFA  0636               	decf	___fttol@exp1,f,c
   858  00FDFC  D000               	goto	l1368
   859  00FDFE                     l1368:
   860  00FDFE  5036               	movf	___fttol@exp1,w,c
   861  00FE00  B4D8               	btfsc	status,2,c
   862  00FE02  D002               	goto	l1370
   863  00FE04  D7F5               	goto	l1366
   864  00FE06  D000               	goto	l1370
   865  00FE08                     l1370:
   866  00FE08  5031               	movf	___fttol@sign1,w,c
   867  00FE0A  B4D8               	btfsc	status,2,c
   868  00FE0C  D009               	goto	l1374
   869  00FE0E  1E35               	comf	___fttol@lval+3,f,c
   870  00FE10  1E34               	comf	___fttol@lval+2,f,c
   871  00FE12  1E33               	comf	___fttol@lval+1,f,c
   872  00FE14  6C32               	negf	___fttol@lval,c
   873  00FE16  0E00               	movlw	0
   874  00FE18  2233               	addwfc	___fttol@lval+1,f,c
   875  00FE1A  2234               	addwfc	___fttol@lval+2,f,c
   876  00FE1C  2235               	addwfc	___fttol@lval+3,f,c
   877  00FE1E  D000               	goto	l1374
   878  00FE20                     l1374:
   879  00FE20  C032  F028         	movff	___fttol@lval,?___fttol
   880  00FE24  C033  F029         	movff	___fttol@lval+1,?___fttol+1
   881  00FE28  C034  F02A         	movff	___fttol@lval+2,?___fttol+2
   882  00FE2C  C035  F02B         	movff	___fttol@lval+3,?___fttol+3
   883  00FE30  0012               	return	
   884  00FE32  0012               	return		;funcret
   885  00FE34                     __end_of___fttol:
   886                           	opt stack 0
   887                           tblptru	equ	0xFF8
   888                           wreg	equ	0xFE8
   889                           status	equ	0xFD8
   890                           
   891 ;; *************** function ___ftmul *****************
   892 ;; Defined at:
   893 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;  f1              3   12[COMRAM] float 
   896 ;;  f2              3   15[COMRAM] float 
   897 ;; Auto vars:     Size  Location     Type
   898 ;;  f3_as_produc    3   22[COMRAM] unsigned um
   899 ;;  sign            1   26[COMRAM] unsigned char 
   900 ;;  cntr            1   25[COMRAM] unsigned char 
   901 ;;  exp             1   21[COMRAM] unsigned char 
   902 ;; Return value:  Size  Location     Type
   903 ;;                  3   12[COMRAM] float 
   904 ;; Registers used:
   905 ;;		wreg, status,2, status,0, cstack
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   911 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   912 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   913 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   914 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   915 ;;Total ram usage:       15 bytes
   916 ;; Hardware stack levels used:    1
   917 ;; Hardware stack levels required when called:    1
   918 ;; This function calls:
   919 ;;		___ftpack
   920 ;; This function is called by:
   921 ;;		_calcular_temperatura
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           	psect	text5
   926  00FC30                     __ptext5:
   927                           	opt stack 0
   928  00FC30                     ___ftmul:
   929                           	opt stack 27
   930                           
   931                           ;incstack = 0
   932  00FC30  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
   933  00FC34  6A14               	clrf	(??___ftmul+1)& (0+255),c
   934  00FC36  6A15               	clrf	(??___ftmul+2)& (0+255),c
   935  00FC38  340E               	rlcf	___ftmul@f1+1,w,c
   936  00FC3A  3613               	rlcf	??___ftmul& (0+255),f,c
   937  00FC3C  E301               	bnc	u841
   938  00FC3E  8014               	bsf	(??___ftmul+1)& (0+255),0,c
   939  00FC40                     u841:
   940  00FC40  5013               	movf	??___ftmul,w,c
   941  00FC42  6E16               	movwf	___ftmul@exp,c
   942  00FC44  5016               	movf	___ftmul@exp,w,c
   943  00FC46  A4D8               	btfss	status,2,c
   944  00FC48  D007               	goto	l1278
   945  00FC4A  0E00               	movlw	0
   946  00FC4C  6E0D               	movwf	?___ftmul,c
   947  00FC4E  0E00               	movlw	0
   948  00FC50  6E0E               	movwf	?___ftmul+1,c
   949  00FC52  0E00               	movlw	0
   950  00FC54  6E0F               	movwf	?___ftmul+2,c
   951  00FC56  0012               	return	
   952  00FC58                     l1278:
   953  00FC58  C012  F013         	movff	___ftmul@f2+2,??___ftmul
   954  00FC5C  6A14               	clrf	(??___ftmul+1)& (0+255),c
   955  00FC5E  6A15               	clrf	(??___ftmul+2)& (0+255),c
   956  00FC60  3411               	rlcf	___ftmul@f2+1,w,c
   957  00FC62  3613               	rlcf	??___ftmul& (0+255),f,c
   958  00FC64  E301               	bnc	u861
   959  00FC66  8014               	bsf	(??___ftmul+1)& (0+255),0,c
   960  00FC68                     u861:
   961  00FC68  5013               	movf	??___ftmul,w,c
   962  00FC6A  6E1B               	movwf	___ftmul@sign,c
   963  00FC6C  501B               	movf	___ftmul@sign,w,c
   964  00FC6E  A4D8               	btfss	status,2,c
   965  00FC70  D007               	goto	l1284
   966  00FC72  0E00               	movlw	0
   967  00FC74  6E0D               	movwf	?___ftmul,c
   968  00FC76  0E00               	movlw	0
   969  00FC78  6E0E               	movwf	?___ftmul+1,c
   970  00FC7A  0E00               	movlw	0
   971  00FC7C  6E0F               	movwf	?___ftmul+2,c
   972  00FC7E  0012               	return	
   973  00FC80                     l1284:
   974  00FC80  501B               	movf	___ftmul@sign,w,c
   975  00FC82  0F7B               	addlw	123
   976  00FC84  2616               	addwf	___ftmul@exp,f,c
   977  00FC86  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
   978  00FC8A  5012               	movf	___ftmul@f2+2,w,c
   979  00FC8C  1A1B               	xorwf	___ftmul@sign,f,c
   980  00FC8E  0E80               	movlw	128
   981  00FC90  161B               	andwf	___ftmul@sign,f,c
   982  00FC92  8E0E               	bsf	___ftmul@f1+1,7,c
   983  00FC94  8E11               	bsf	___ftmul@f2+1,7,c
   984  00FC96  0EFF               	movlw	255
   985  00FC98  1610               	andwf	___ftmul@f2,f,c
   986  00FC9A  0EFF               	movlw	255
   987  00FC9C  1611               	andwf	___ftmul@f2+1,f,c
   988  00FC9E  0E00               	movlw	0
   989  00FCA0  1612               	andwf	___ftmul@f2+2,f,c
   990  00FCA2  0E00               	movlw	0
   991  00FCA4  6E17               	movwf	___ftmul@f3_as_product,c
   992  00FCA6  0E00               	movlw	0
   993  00FCA8  6E18               	movwf	___ftmul@f3_as_product+1,c
   994  00FCAA  0E00               	movlw	0
   995  00FCAC  6E19               	movwf	___ftmul@f3_as_product+2,c
   996  00FCAE  0E07               	movlw	7
   997  00FCB0  6E1A               	movwf	___ftmul@cntr,c
   998  00FCB2  D000               	goto	l1298
   999  00FCB4                     l1298:
  1000  00FCB4  A00D               	btfss	___ftmul@f1,0,c
  1001  00FCB6  D007               	goto	l1302
  1002  00FCB8  5010               	movf	___ftmul@f2,w,c
  1003  00FCBA  2617               	addwf	___ftmul@f3_as_product,f,c
  1004  00FCBC  5011               	movf	___ftmul@f2+1,w,c
  1005  00FCBE  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  1006  00FCC0  5012               	movf	___ftmul@f2+2,w,c
  1007  00FCC2  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  1008  00FCC4  D000               	goto	l1302
  1009  00FCC6                     l1302:
  1010  00FCC6  90D8               	bcf	status,0,c
  1011  00FCC8  320F               	rrcf	___ftmul@f1+2,f,c
  1012  00FCCA  320E               	rrcf	___ftmul@f1+1,f,c
  1013  00FCCC  320D               	rrcf	___ftmul@f1,f,c
  1014  00FCCE  90D8               	bcf	status,0,c
  1015  00FCD0  3610               	rlcf	___ftmul@f2,f,c
  1016  00FCD2  3611               	rlcf	___ftmul@f2+1,f,c
  1017  00FCD4  3612               	rlcf	___ftmul@f2+2,f,c
  1018  00FCD6  2E1A               	decfsz	___ftmul@cntr,f,c
  1019  00FCD8  D7ED               	goto	l1298
  1020  00FCDA  D000               	goto	l1306
  1021  00FCDC                     l1306:
  1022  00FCDC  0E09               	movlw	9
  1023  00FCDE  6E1A               	movwf	___ftmul@cntr,c
  1024  00FCE0  D000               	goto	l1308
  1025  00FCE2                     l1308:
  1026  00FCE2  A00D               	btfss	___ftmul@f1,0,c
  1027  00FCE4  D007               	goto	l1312
  1028  00FCE6  5010               	movf	___ftmul@f2,w,c
  1029  00FCE8  2617               	addwf	___ftmul@f3_as_product,f,c
  1030  00FCEA  5011               	movf	___ftmul@f2+1,w,c
  1031  00FCEC  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  1032  00FCEE  5012               	movf	___ftmul@f2+2,w,c
  1033  00FCF0  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  1034  00FCF2  D000               	goto	l1312
  1035  00FCF4                     l1312:
  1036  00FCF4  90D8               	bcf	status,0,c
  1037  00FCF6  320F               	rrcf	___ftmul@f1+2,f,c
  1038  00FCF8  320E               	rrcf	___ftmul@f1+1,f,c
  1039  00FCFA  320D               	rrcf	___ftmul@f1,f,c
  1040  00FCFC  90D8               	bcf	status,0,c
  1041  00FCFE  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  1042  00FD00  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  1043  00FD02  3217               	rrcf	___ftmul@f3_as_product,f,c
  1044  00FD04  2E1A               	decfsz	___ftmul@cntr,f,c
  1045  00FD06  D7ED               	goto	l1308
  1046  00FD08  D000               	goto	l1316
  1047  00FD0A                     l1316:
  1048  00FD0A  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  1049  00FD0E  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1050  00FD12  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1051  00FD16  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  1052  00FD1A  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  1053  00FD1E  ECB5  F07D         	call	___ftpack	;wreg free
  1054  00FD22  C001  F00D         	movff	?___ftpack,?___ftmul
  1055  00FD26  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  1056  00FD2A  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  1057  00FD2E  0012               	return	
  1058  00FD30  0012               	return		;funcret
  1059  00FD32                     __end_of___ftmul:
  1060                           	opt stack 0
  1061                           tblptru	equ	0xFF8
  1062                           wreg	equ	0xFE8
  1063                           status	equ	0xFD8
  1064                           
  1065 ;; *************** function ___ftadd *****************
  1066 ;; Defined at:
  1067 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;  f1              3   27[COMRAM] float 
  1070 ;;  f2              3   30[COMRAM] float 
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;  exp1            1   38[COMRAM] unsigned char 
  1073 ;;  exp2            1   37[COMRAM] unsigned char 
  1074 ;;  sign            1   36[COMRAM] unsigned char 
  1075 ;; Return value:  Size  Location     Type
  1076 ;;                  3   27[COMRAM] float 
  1077 ;; Registers used:
  1078 ;;		wreg, status,2, status,0, cstack
  1079 ;; Tracked objects:
  1080 ;;		On entry : 0/0
  1081 ;;		On exit  : 0/0
  1082 ;;		Unchanged: 0/0
  1083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1084 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1085 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1086 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1087 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1088 ;;Total ram usage:       12 bytes
  1089 ;; Hardware stack levels used:    1
  1090 ;; Hardware stack levels required when called:    1
  1091 ;; This function calls:
  1092 ;;		___ftpack
  1093 ;; This function is called by:
  1094 ;;		_calcular_temperatura
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           	psect	text6
  1099  00FE34                     __ptext6:
  1100                           	opt stack 0
  1101  00FE34                     ___ftadd:
  1102                           	opt stack 27
  1103                           
  1104                           ;incstack = 0
  1105  00FE34  C01E  F022         	movff	___ftadd@f1+2,??___ftadd
  1106  00FE38  6A23               	clrf	(??___ftadd+1)& (0+255),c
  1107  00FE3A  6A24               	clrf	(??___ftadd+2)& (0+255),c
  1108  00FE3C  341D               	rlcf	___ftadd@f1+1,w,c
  1109  00FE3E  3622               	rlcf	??___ftadd& (0+255),f,c
  1110  00FE40  E301               	bnc	u631
  1111  00FE42  8023               	bsf	(??___ftadd+1)& (0+255),0,c
  1112  00FE44                     u631:
  1113  00FE44  5022               	movf	??___ftadd,w,c
  1114  00FE46  6E27               	movwf	___ftadd@exp1,c
  1115  00FE48  C021  F022         	movff	___ftadd@f2+2,??___ftadd
  1116  00FE4C  6A23               	clrf	(??___ftadd+1)& (0+255),c
  1117  00FE4E  6A24               	clrf	(??___ftadd+2)& (0+255),c
  1118  00FE50  3420               	rlcf	___ftadd@f2+1,w,c
  1119  00FE52  3622               	rlcf	??___ftadd& (0+255),f,c
  1120  00FE54  E301               	bnc	u641
  1121  00FE56  8023               	bsf	(??___ftadd+1)& (0+255),0,c
  1122  00FE58                     u641:
  1123  00FE58  5022               	movf	??___ftadd,w,c
  1124  00FE5A  6E26               	movwf	___ftadd@exp2,c
  1125  00FE5C  5027               	movf	___ftadd@exp1,w,c
  1126  00FE5E  B4D8               	btfsc	status,2,c
  1127  00FE60  D00B               	goto	l489
  1128  00FE62  5026               	movf	___ftadd@exp2,w,c
  1129  00FE64  5C27               	subwf	___ftadd@exp1,w,c
  1130  00FE66  B0D8               	btfsc	status,0,c
  1131  00FE68  D00E               	goto	l1210
  1132  00FE6A  5027               	movf	___ftadd@exp1,w,c
  1133  00FE6C  0800               	sublw	0
  1134  00FE6E  2426               	addwf	___ftadd@exp2,w,c
  1135  00FE70  6E22               	movwf	??___ftadd& (0+255),c
  1136  00FE72  0E18               	movlw	24
  1137  00FE74  6422               	cpfsgt	??___ftadd,c
  1138  00FE76  D007               	goto	l1210
  1139  00FE78                     l489:
  1140  00FE78  C01F  F01C         	movff	___ftadd@f2,?___ftadd
  1141  00FE7C  C020  F01D         	movff	___ftadd@f2+1,?___ftadd+1
  1142  00FE80  C021  F01E         	movff	___ftadd@f2+2,?___ftadd+2
  1143  00FE84  0012               	return	
  1144  00FE86                     l1210:
  1145  00FE86  5026               	movf	___ftadd@exp2,w,c
  1146  00FE88  B4D8               	btfsc	status,2,c
  1147  00FE8A  D00B               	goto	l493
  1148  00FE8C  5027               	movf	___ftadd@exp1,w,c
  1149  00FE8E  5C26               	subwf	___ftadd@exp2,w,c
  1150  00FE90  B0D8               	btfsc	status,0,c
  1151  00FE92  D00E               	goto	l1216
  1152  00FE94  5026               	movf	___ftadd@exp2,w,c
  1153  00FE96  0800               	sublw	0
  1154  00FE98  2427               	addwf	___ftadd@exp1,w,c
  1155  00FE9A  6E22               	movwf	??___ftadd& (0+255),c
  1156  00FE9C  0E18               	movlw	24
  1157  00FE9E  6422               	cpfsgt	??___ftadd,c
  1158  00FEA0  D007               	goto	l1216
  1159  00FEA2                     l493:
  1160  00FEA2  C01C  F01C         	movff	___ftadd@f1,?___ftadd
  1161  00FEA6  C01D  F01D         	movff	___ftadd@f1+1,?___ftadd+1
  1162  00FEAA  C01E  F01E         	movff	___ftadd@f1+2,?___ftadd+2
  1163  00FEAE  0012               	return	
  1164  00FEB0                     l1216:
  1165  00FEB0  0E06               	movlw	6
  1166  00FEB2  6E25               	movwf	___ftadd@sign,c
  1167  00FEB4  AE1E               	btfss	___ftadd@f1+2,7,c
  1168  00FEB6  D002               	goto	l1222
  1169  00FEB8  8E25               	bsf	___ftadd@sign,7,c
  1170  00FEBA  D000               	goto	l1222
  1171  00FEBC                     l1222:
  1172  00FEBC  BE21               	btfsc	___ftadd@f2+2,7,c
  1173  00FEBE  8C25               	bsf	___ftadd@sign,6,c
  1174  00FEC0  8E1D               	bsf	___ftadd@f1+1,7,c
  1175  00FEC2  0EFF               	movlw	255
  1176  00FEC4  161C               	andwf	___ftadd@f1,f,c
  1177  00FEC6  0EFF               	movlw	255
  1178  00FEC8  161D               	andwf	___ftadd@f1+1,f,c
  1179  00FECA  0E00               	movlw	0
  1180  00FECC  161E               	andwf	___ftadd@f1+2,f,c
  1181  00FECE  8E20               	bsf	___ftadd@f2+1,7,c
  1182  00FED0  0EFF               	movlw	255
  1183  00FED2  161F               	andwf	___ftadd@f2,f,c
  1184  00FED4  0EFF               	movlw	255
  1185  00FED6  1620               	andwf	___ftadd@f2+1,f,c
  1186  00FED8  0E00               	movlw	0
  1187  00FEDA  1621               	andwf	___ftadd@f2+2,f,c
  1188  00FEDC  5026               	movf	___ftadd@exp2,w,c
  1189  00FEDE  5C27               	subwf	___ftadd@exp1,w,c
  1190  00FEE0  B0D8               	btfsc	status,0,c
  1191  00FEE2  D01E               	goto	l1242
  1192  00FEE4                     l1232:
  1193  00FEE4  90D8               	bcf	status,0,c
  1194  00FEE6  361F               	rlcf	___ftadd@f2,f,c
  1195  00FEE8  3620               	rlcf	___ftadd@f2+1,f,c
  1196  00FEEA  3621               	rlcf	___ftadd@f2+2,f,c
  1197  00FEEC  0626               	decf	___ftadd@exp2,f,c
  1198  00FEEE  5027               	movf	___ftadd@exp1,w,c
  1199  00FEF0  1826               	xorwf	___ftadd@exp2,w,c
  1200  00FEF2  B4D8               	btfsc	status,2,c
  1201  00FEF4  D00F               	goto	l1240
  1202  00FEF6  0625               	decf	___ftadd@sign,f,c
  1203  00FEF8  C025  F022         	movff	___ftadd@sign,??___ftadd
  1204  00FEFC  0E07               	movlw	7
  1205  00FEFE  1622               	andwf	??___ftadd,f,c
  1206  00FF00  B4D8               	btfsc	status,2,c
  1207  00FF02  D008               	goto	l1240
  1208  00FF04  D7EF               	goto	l1232
  1209  00FF06  D006               	goto	l1240
  1210  00FF08                     l1238:
  1211  00FF08  90D8               	bcf	status,0,c
  1212  00FF0A  321E               	rrcf	___ftadd@f1+2,f,c
  1213  00FF0C  321D               	rrcf	___ftadd@f1+1,f,c
  1214  00FF0E  321C               	rrcf	___ftadd@f1,f,c
  1215  00FF10  2A27               	incf	___ftadd@exp1,f,c
  1216  00FF12  D000               	goto	l1240
  1217  00FF14                     l1240:
  1218  00FF14  5026               	movf	___ftadd@exp2,w,c
  1219  00FF16  1827               	xorwf	___ftadd@exp1,w,c
  1220  00FF18  B4D8               	btfsc	status,2,c
  1221  00FF1A  D024               	goto	l504
  1222  00FF1C  D7F5               	goto	l1238
  1223  00FF1E  D022               	goto	l504
  1224  00FF20                     l1242:
  1225  00FF20  5027               	movf	___ftadd@exp1,w,c
  1226  00FF22  5C26               	subwf	___ftadd@exp2,w,c
  1227  00FF24  B0D8               	btfsc	status,0,c
  1228  00FF26  D01E               	goto	l504
  1229  00FF28                     l1244:
  1230  00FF28  90D8               	bcf	status,0,c
  1231  00FF2A  361C               	rlcf	___ftadd@f1,f,c
  1232  00FF2C  361D               	rlcf	___ftadd@f1+1,f,c
  1233  00FF2E  361E               	rlcf	___ftadd@f1+2,f,c
  1234  00FF30  0627               	decf	___ftadd@exp1,f,c
  1235  00FF32  5027               	movf	___ftadd@exp1,w,c
  1236  00FF34  1826               	xorwf	___ftadd@exp2,w,c
  1237  00FF36  B4D8               	btfsc	status,2,c
  1238  00FF38  D00F               	goto	l1252
  1239  00FF3A  0625               	decf	___ftadd@sign,f,c
  1240  00FF3C  C025  F022         	movff	___ftadd@sign,??___ftadd
  1241  00FF40  0E07               	movlw	7
  1242  00FF42  1622               	andwf	??___ftadd,f,c
  1243  00FF44  B4D8               	btfsc	status,2,c
  1244  00FF46  D008               	goto	l1252
  1245  00FF48  D7EF               	goto	l1244
  1246  00FF4A  D006               	goto	l1252
  1247  00FF4C                     l1250:
  1248  00FF4C  90D8               	bcf	status,0,c
  1249  00FF4E  3221               	rrcf	___ftadd@f2+2,f,c
  1250  00FF50  3220               	rrcf	___ftadd@f2+1,f,c
  1251  00FF52  321F               	rrcf	___ftadd@f2,f,c
  1252  00FF54  2A26               	incf	___ftadd@exp2,f,c
  1253  00FF56  D000               	goto	l1252
  1254  00FF58                     l1252:
  1255  00FF58  5026               	movf	___ftadd@exp2,w,c
  1256  00FF5A  1827               	xorwf	___ftadd@exp1,w,c
  1257  00FF5C  B4D8               	btfsc	status,2,c
  1258  00FF5E  D002               	goto	l504
  1259  00FF60  D7F5               	goto	l1250
  1260  00FF62  D000               	goto	l504
  1261  00FF64                     l504:
  1262  00FF64  AE25               	btfss	___ftadd@sign,7,c
  1263  00FF66  D00C               	goto	l513
  1264  00FF68  0EFF               	movlw	255
  1265  00FF6A  1A1C               	xorwf	___ftadd@f1,f,c
  1266  00FF6C  0EFF               	movlw	255
  1267  00FF6E  1A1D               	xorwf	___ftadd@f1+1,f,c
  1268  00FF70  0EFF               	movlw	255
  1269  00FF72  1A1E               	xorwf	___ftadd@f1+2,f,c
  1270  00FF74  0E01               	movlw	1
  1271  00FF76  261C               	addwf	___ftadd@f1,f,c
  1272  00FF78  0E00               	movlw	0
  1273  00FF7A  221D               	addwfc	___ftadd@f1+1,f,c
  1274  00FF7C  0E00               	movlw	0
  1275  00FF7E  221E               	addwfc	___ftadd@f1+2,f,c
  1276  00FF80                     l513:
  1277  00FF80  AC25               	btfss	___ftadd@sign,6,c
  1278  00FF82  D00D               	goto	l1258
  1279  00FF84  0EFF               	movlw	255
  1280  00FF86  1A1F               	xorwf	___ftadd@f2,f,c
  1281  00FF88  0EFF               	movlw	255
  1282  00FF8A  1A20               	xorwf	___ftadd@f2+1,f,c
  1283  00FF8C  0EFF               	movlw	255
  1284  00FF8E  1A21               	xorwf	___ftadd@f2+2,f,c
  1285  00FF90  0E01               	movlw	1
  1286  00FF92  261F               	addwf	___ftadd@f2,f,c
  1287  00FF94  0E00               	movlw	0
  1288  00FF96  2220               	addwfc	___ftadd@f2+1,f,c
  1289  00FF98  0E00               	movlw	0
  1290  00FF9A  2221               	addwfc	___ftadd@f2+2,f,c
  1291  00FF9C  D000               	goto	l1258
  1292  00FF9E                     l1258:
  1293  00FF9E  0E00               	movlw	0
  1294  00FFA0  6E25               	movwf	___ftadd@sign,c
  1295  00FFA2  501C               	movf	___ftadd@f1,w,c
  1296  00FFA4  261F               	addwf	___ftadd@f2,f,c
  1297  00FFA6  501D               	movf	___ftadd@f1+1,w,c
  1298  00FFA8  2220               	addwfc	___ftadd@f2+1,f,c
  1299  00FFAA  501E               	movf	___ftadd@f1+2,w,c
  1300  00FFAC  2221               	addwfc	___ftadd@f2+2,f,c
  1301  00FFAE  AE21               	btfss	___ftadd@f2+2,7,c
  1302  00FFB0  D00F               	goto	l1268
  1303  00FFB2  0EFF               	movlw	255
  1304  00FFB4  1A1F               	xorwf	___ftadd@f2,f,c
  1305  00FFB6  0EFF               	movlw	255
  1306  00FFB8  1A20               	xorwf	___ftadd@f2+1,f,c
  1307  00FFBA  0EFF               	movlw	255
  1308  00FFBC  1A21               	xorwf	___ftadd@f2+2,f,c
  1309  00FFBE  0E01               	movlw	1
  1310  00FFC0  261F               	addwf	___ftadd@f2,f,c
  1311  00FFC2  0E00               	movlw	0
  1312  00FFC4  2220               	addwfc	___ftadd@f2+1,f,c
  1313  00FFC6  0E00               	movlw	0
  1314  00FFC8  2221               	addwfc	___ftadd@f2+2,f,c
  1315  00FFCA  0E01               	movlw	1
  1316  00FFCC  6E25               	movwf	___ftadd@sign,c
  1317  00FFCE  D000               	goto	l1268
  1318  00FFD0                     l1268:
  1319  00FFD0  C01F  F001         	movff	___ftadd@f2,___ftpack@arg
  1320  00FFD4  C020  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  1321  00FFD8  C021  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  1322  00FFDC  C027  F004         	movff	___ftadd@exp1,___ftpack@exp
  1323  00FFE0  C025  F005         	movff	___ftadd@sign,___ftpack@sign
  1324  00FFE4  ECB5  F07D         	call	___ftpack	;wreg free
  1325  00FFE8  C001  F01C         	movff	?___ftpack,?___ftadd
  1326  00FFEC  C002  F01D         	movff	?___ftpack+1,?___ftadd+1
  1327  00FFF0  C003  F01E         	movff	?___ftpack+2,?___ftadd+2
  1328  00FFF4  0012               	return	
  1329  00FFF6  0012               	return		;funcret
  1330  00FFF8                     __end_of___ftadd:
  1331                           	opt stack 0
  1332                           tblptru	equ	0xFF8
  1333                           wreg	equ	0xFE8
  1334                           status	equ	0xFD8
  1335                           
  1336 ;; *************** function ___awtoft *****************
  1337 ;; Defined at:
  1338 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtoft.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;  c               2    8[COMRAM] int 
  1341 ;; Auto vars:     Size  Location     Type
  1342 ;;  sign            1   11[COMRAM] unsigned char 
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  3    8[COMRAM] float 
  1345 ;; Registers used:
  1346 ;;		wreg, status,2, status,0, cstack
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1352 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1353 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1355 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1356 ;;Total ram usage:        4 bytes
  1357 ;; Hardware stack levels used:    1
  1358 ;; Hardware stack levels required when called:    1
  1359 ;; This function calls:
  1360 ;;		___ftpack
  1361 ;; This function is called by:
  1362 ;;		_calcular_temperatura
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366                           	psect	text7
  1367  00F8A8                     __ptext7:
  1368                           	opt stack 0
  1369  00F8A8                     ___awtoft:
  1370                           	opt stack 27
  1371                           
  1372                           ;incstack = 0
  1373  00F8A8  0E00               	movlw	0
  1374  00F8AA  6E0C               	movwf	___awtoft@sign,c
  1375  00F8AC  AE0A               	btfss	___awtoft@c+1,7,c
  1376  00F8AE  D007               	goto	l1328
  1377  00F8B0  6C09               	negf	___awtoft@c,c
  1378  00F8B2  1E0A               	comf	___awtoft@c+1,f,c
  1379  00F8B4  B0D8               	btfsc	status,0,c
  1380  00F8B6  2A0A               	incf	___awtoft@c+1,f,c
  1381  00F8B8  0E01               	movlw	1
  1382  00F8BA  6E0C               	movwf	___awtoft@sign,c
  1383  00F8BC  D000               	goto	l1328
  1384  00F8BE                     l1328:
  1385  00F8BE  C009  F001         	movff	___awtoft@c,___ftpack@arg
  1386  00F8C2  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  1387  00F8C6  6A03               	clrf	___ftpack@arg+2,c
  1388  00F8C8  0E8E               	movlw	142
  1389  00F8CA  6E04               	movwf	___ftpack@exp,c
  1390  00F8CC  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  1391  00F8D0  ECB5  F07D         	call	___ftpack	;wreg free
  1392  00F8D4  C001  F009         	movff	?___ftpack,?___awtoft
  1393  00F8D8  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  1394  00F8DC  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  1395  00F8E0  0012               	return	
  1396  00F8E2  0012               	return		;funcret
  1397  00F8E4                     __end_of___awtoft:
  1398                           	opt stack 0
  1399                           tblptru	equ	0xFF8
  1400                           wreg	equ	0xFE8
  1401                           status	equ	0xFD8
  1402                           
  1403 ;; *************** function ___ftpack *****************
  1404 ;; Defined at:
  1405 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;  arg             3    0[COMRAM] unsigned um
  1408 ;;  exp             1    3[COMRAM] unsigned char 
  1409 ;;  sign            1    4[COMRAM] unsigned char 
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;		None
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  3    0[COMRAM] float 
  1414 ;; Registers used:
  1415 ;;		wreg, status,2, status,0
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1421 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1423 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1424 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1425 ;;Total ram usage:        8 bytes
  1426 ;; Hardware stack levels used:    1
  1427 ;; This function calls:
  1428 ;;		Nothing
  1429 ;; This function is called by:
  1430 ;;		___awtoft
  1431 ;;		___ftadd
  1432 ;;		___ftmul
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           	psect	text8
  1437  00FB6A                     __ptext8:
  1438                           	opt stack 0
  1439  00FB6A                     ___ftpack:
  1440                           	opt stack 27
  1441                           
  1442                           ;incstack = 0
  1443  00FB6A  5004               	movf	___ftpack@exp,w,c
  1444  00FB6C  B4D8               	btfsc	status,2,c
  1445  00FB6E  D005               	goto	l1170
  1446  00FB70  5001               	movf	___ftpack@arg,w,c
  1447  00FB72  1002               	iorwf	___ftpack@arg+1,w,c
  1448  00FB74  1003               	iorwf	___ftpack@arg+2,w,c
  1449  00FB76  A4D8               	btfss	status,2,c
  1450  00FB78  D00E               	goto	l1176
  1451  00FB7A                     l1170:
  1452  00FB7A  0E00               	movlw	0
  1453  00FB7C  6E01               	movwf	?___ftpack,c
  1454  00FB7E  0E00               	movlw	0
  1455  00FB80  6E02               	movwf	?___ftpack+1,c
  1456  00FB82  0E00               	movlw	0
  1457  00FB84  6E03               	movwf	?___ftpack+2,c
  1458  00FB86  0012               	return	
  1459  00FB88  D006               	goto	l1176
  1460  00FB8A                     l1174:
  1461  00FB8A  2A04               	incf	___ftpack@exp,f,c
  1462  00FB8C  90D8               	bcf	status,0,c
  1463  00FB8E  3203               	rrcf	___ftpack@arg+2,f,c
  1464  00FB90  3202               	rrcf	___ftpack@arg+1,f,c
  1465  00FB92  3201               	rrcf	___ftpack@arg,f,c
  1466  00FB94  D000               	goto	l1176
  1467  00FB96                     l1176:
  1468  00FB96  0E00               	movlw	0
  1469  00FB98  1401               	andwf	___ftpack@arg,w,c
  1470  00FB9A  6E06               	movwf	??___ftpack& (0+255),c
  1471  00FB9C  0E00               	movlw	0
  1472  00FB9E  1402               	andwf	___ftpack@arg+1,w,c
  1473  00FBA0  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1474  00FBA2  0EFE               	movlw	254
  1475  00FBA4  1403               	andwf	___ftpack@arg+2,w,c
  1476  00FBA6  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1477  00FBA8  5006               	movf	??___ftpack,w,c
  1478  00FBAA  1007               	iorwf	??___ftpack+1,w,c
  1479  00FBAC  1008               	iorwf	??___ftpack+2,w,c
  1480  00FBAE  B4D8               	btfsc	status,2,c
  1481  00FBB0  D00E               	goto	l1182
  1482  00FBB2  D7EB               	goto	l1174
  1483  00FBB4  D00C               	goto	l1182
  1484  00FBB6                     l1178:
  1485  00FBB6  2A04               	incf	___ftpack@exp,f,c
  1486  00FBB8  0E01               	movlw	1
  1487  00FBBA  2601               	addwf	___ftpack@arg,f,c
  1488  00FBBC  0E00               	movlw	0
  1489  00FBBE  2202               	addwfc	___ftpack@arg+1,f,c
  1490  00FBC0  0E00               	movlw	0
  1491  00FBC2  2203               	addwfc	___ftpack@arg+2,f,c
  1492  00FBC4  90D8               	bcf	status,0,c
  1493  00FBC6  3203               	rrcf	___ftpack@arg+2,f,c
  1494  00FBC8  3202               	rrcf	___ftpack@arg+1,f,c
  1495  00FBCA  3201               	rrcf	___ftpack@arg,f,c
  1496  00FBCC  D000               	goto	l1182
  1497  00FBCE                     l1182:
  1498  00FBCE  0E00               	movlw	0
  1499  00FBD0  1401               	andwf	___ftpack@arg,w,c
  1500  00FBD2  6E06               	movwf	??___ftpack& (0+255),c
  1501  00FBD4  0E00               	movlw	0
  1502  00FBD6  1402               	andwf	___ftpack@arg+1,w,c
  1503  00FBD8  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1504  00FBDA  0EFF               	movlw	255
  1505  00FBDC  1403               	andwf	___ftpack@arg+2,w,c
  1506  00FBDE  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1507  00FBE0  5006               	movf	??___ftpack,w,c
  1508  00FBE2  1007               	iorwf	??___ftpack+1,w,c
  1509  00FBE4  1008               	iorwf	??___ftpack+2,w,c
  1510  00FBE6  B4D8               	btfsc	status,2,c
  1511  00FBE8  D008               	goto	l1186
  1512  00FBEA  D7E5               	goto	l1178
  1513  00FBEC  D006               	goto	l1186
  1514  00FBEE                     l1184:
  1515  00FBEE  0604               	decf	___ftpack@exp,f,c
  1516  00FBF0  90D8               	bcf	status,0,c
  1517  00FBF2  3601               	rlcf	___ftpack@arg,f,c
  1518  00FBF4  3602               	rlcf	___ftpack@arg+1,f,c
  1519  00FBF6  3603               	rlcf	___ftpack@arg+2,f,c
  1520  00FBF8  D000               	goto	l1186
  1521  00FBFA                     l1186:
  1522  00FBFA  BE02               	btfsc	___ftpack@arg+1,7,c
  1523  00FBFC  D004               	goto	l460
  1524  00FBFE  0E02               	movlw	2
  1525  00FC00  6004               	cpfslt	___ftpack@exp,c
  1526  00FC02  D7F5               	goto	l1184
  1527  00FC04  D000               	goto	l460
  1528  00FC06                     l460:
  1529  00FC06  B004               	btfsc	___ftpack@exp,0,c
  1530  00FC08  D002               	goto	l1192
  1531  00FC0A  9E02               	bcf	___ftpack@arg+1,7,c
  1532  00FC0C  D000               	goto	l1192
  1533  00FC0E                     l1192:
  1534  00FC0E  90D8               	bcf	status,0,c
  1535  00FC10  3204               	rrcf	___ftpack@exp,f,c
  1536  00FC12  5004               	movf	___ftpack@exp,w,c
  1537  00FC14  1203               	iorwf	___ftpack@arg+2,f,c
  1538  00FC16  5005               	movf	___ftpack@sign,w,c
  1539  00FC18  B4D8               	btfsc	status,2,c
  1540  00FC1A  D002               	goto	l1198
  1541  00FC1C  8E03               	bsf	___ftpack@arg+2,7,c
  1542  00FC1E  D000               	goto	l1198
  1543  00FC20                     l1198:
  1544  00FC20  C001  F001         	movff	___ftpack@arg,?___ftpack
  1545  00FC24  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  1546  00FC28  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  1547  00FC2C  0012               	return	
  1548  00FC2E  0012               	return		;funcret
  1549  00FC30                     __end_of___ftpack:
  1550                           	opt stack 0
  1551                           tblptru	equ	0xFF8
  1552                           wreg	equ	0xFE8
  1553                           status	equ	0xFD8
  1554                           
  1555 ;; *************** function _imprimir_temperatura *****************
  1556 ;; Defined at:
  1557 ;;		line 51 in file "main.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;  temp            2    8[COMRAM] int 
  1560 ;; Auto vars:     Size  Location     Type
  1561 ;;  decena          2   12[COMRAM] int 
  1562 ;;  unidad          2   10[COMRAM] int 
  1563 ;; Return value:  Size  Location     Type
  1564 ;;		None               void
  1565 ;; Registers used:
  1566 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1572 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1573 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1575 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1576 ;;Total ram usage:        6 bytes
  1577 ;; Hardware stack levels used:    1
  1578 ;; Hardware stack levels required when called:    4
  1579 ;; This function calls:
  1580 ;;		___awdiv
  1581 ;;		___wmul
  1582 ;;		_construir_numero
  1583 ;; This function is called by:
  1584 ;;		_main
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588                           	psect	text9
  1589  00F944                     __ptext9:
  1590                           	opt stack 0
  1591  00F944                     _imprimir_temperatura:
  1592                           	opt stack 26
  1593                           
  1594                           ;main.c: 53: int decena = (int)temp / 10;
  1595                           
  1596                           ;incstack = 0
  1597  00F944  C009  F001         	movff	imprimir_temperatura@temp,___awdiv@dividend
  1598  00F948  C00A  F002         	movff	imprimir_temperatura@temp+1,___awdiv@dividend+1
  1599  00F94C  0E00               	movlw	0
  1600  00F94E  6E04               	movwf	___awdiv@divisor+1,c
  1601  00F950  0E0A               	movlw	10
  1602  00F952  6E03               	movwf	___awdiv@divisor,c
  1603  00F954  EC1F  F07D         	call	___awdiv	;wreg free
  1604  00F958  C001  F00D         	movff	?___awdiv,imprimir_temperatura@decena
  1605  00F95C  C002  F00E         	movff	?___awdiv+1,imprimir_temperatura@decena+1
  1606                           
  1607                           ;main.c: 54: int unidad = temp - (decena*10);
  1608  00F960  C00D  F001         	movff	imprimir_temperatura@decena,___wmul@multiplier
  1609  00F964  C00E  F002         	movff	imprimir_temperatura@decena+1,___wmul@multiplier+1
  1610  00F968  0E00               	movlw	0
  1611  00F96A  6E04               	movwf	___wmul@multiplicand+1,c
  1612  00F96C  0E0A               	movlw	10
  1613  00F96E  6E03               	movwf	___wmul@multiplicand,c
  1614  00F970  EC08  F07C         	call	___wmul	;wreg free
  1615  00F974  1E01               	comf	?___wmul,f,c
  1616  00F976  1E02               	comf	?___wmul+1,f,c
  1617  00F978  4A01               	infsnz	?___wmul,f,c
  1618  00F97A  2A02               	incf	?___wmul+1,f,c
  1619  00F97C  5009               	movf	imprimir_temperatura@temp,w,c
  1620  00F97E  2401               	addwf	?___wmul,w,c
  1621  00F980  6E0B               	movwf	imprimir_temperatura@unidad,c
  1622  00F982  500A               	movf	imprimir_temperatura@temp+1,w,c
  1623  00F984  2002               	addwfc	?___wmul+1,w,c
  1624  00F986  6E0C               	movwf	imprimir_temperatura@unidad+1,c
  1625                           
  1626                           ;main.c: 56: LATBbits.LATB0 = 0;;
  1627  00F988  908A               	bcf	3978,0,c	;volatile
  1628                           
  1629                           ;main.c: 57: construir_numero(decena);
  1630  00F98A  C00D  F002         	movff	imprimir_temperatura@decena,construir_numero@number
  1631  00F98E  C00E  F003         	movff	imprimir_temperatura@decena+1,construir_numero@number+1
  1632  00F992  ECD5  F07C         	call	_construir_numero	;wreg free
  1633                           
  1634                           ;main.c: 58: LATBbits.LATB0 = 1;;
  1635  00F996  808A               	bsf	3978,0,c	;volatile
  1636                           
  1637                           ;main.c: 60: LATCbits.LATC7 = 0;;
  1638  00F998  9E8B               	bcf	3979,7,c	;volatile
  1639                           
  1640                           ;main.c: 61: construir_numero(unidad);
  1641  00F99A  C00B  F002         	movff	imprimir_temperatura@unidad,construir_numero@number
  1642  00F99E  C00C  F003         	movff	imprimir_temperatura@unidad+1,construir_numero@number+1
  1643  00F9A2  ECD5  F07C         	call	_construir_numero	;wreg free
  1644                           
  1645                           ;main.c: 62: LATCbits.LATC7 = 1;;
  1646  00F9A6  8E8B               	bsf	3979,7,c	;volatile
  1647  00F9A8  0012               	return		;funcret
  1648  00F9AA                     __end_of_imprimir_temperatura:
  1649                           	opt stack 0
  1650                           tblptru	equ	0xFF8
  1651                           wreg	equ	0xFE8
  1652                           status	equ	0xFD8
  1653                           
  1654 ;; *************** function _construir_numero *****************
  1655 ;; Defined at:
  1656 ;;		line 137 in file "Unimic/unmc_01/headers/unmc_display.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;  number          2    1[COMRAM] int 
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;		None
  1661 ;; Return value:  Size  Location     Type
  1662 ;;		None               void
  1663 ;; Registers used:
  1664 ;;		wreg, status,2, status,0, cstack
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1670 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1672 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1673 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1674 ;;Total ram usage:        4 bytes
  1675 ;; Hardware stack levels used:    1
  1676 ;; Hardware stack levels required when called:    3
  1677 ;; This function calls:
  1678 ;;		_apagar_segmentos
  1679 ;;		_number_0
  1680 ;;		_number_1
  1681 ;;		_number_2
  1682 ;;		_number_3
  1683 ;;		_number_4
  1684 ;;		_number_5
  1685 ;;		_number_6
  1686 ;;		_number_7
  1687 ;;		_number_8
  1688 ;;		_number_9
  1689 ;; This function is called by:
  1690 ;;		_imprimir_temperatura
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           	psect	text10
  1695  00F9AA                     __ptext10:
  1696                           	opt stack 0
  1697  00F9AA                     _construir_numero:
  1698                           	opt stack 26
  1699                           
  1700                           ;unmc_display.c: 138: apagar_segmentos();
  1701                           
  1702                           ;incstack = 0
  1703  00F9AA  EC98  F07B         	call	_apagar_segmentos	;wreg free
  1704                           
  1705                           ;unmc_display.c: 139: switch(number){
  1706  00F9AE  D01E               	goto	l1402
  1707  00F9B0                     l1380:
  1708                           
  1709                           ;unmc_display.c: 141: number_0();
  1710  00F9B0  ECD2  F07B         	call	_number_0	;wreg free
  1711                           
  1712                           ;unmc_display.c: 142: break;
  1713  00F9B4  0012               	return	
  1714  00F9B6                     l1382:
  1715                           
  1716                           ;unmc_display.c: 144: number_1();
  1717  00F9B6  EC82  F07B         	call	_number_1	;wreg free
  1718                           
  1719                           ;unmc_display.c: 145: break;
  1720  00F9BA  0012               	return	
  1721  00F9BC                     l1384:
  1722                           
  1723                           ;unmc_display.c: 147: number_2();
  1724  00F9BC  ECB1  F07B         	call	_number_2	;wreg free
  1725                           
  1726                           ;unmc_display.c: 148: break;
  1727  00F9C0  0012               	return	
  1728  00F9C2                     l1386:
  1729                           
  1730                           ;unmc_display.c: 150: number_3();
  1731  00F9C2  ECBC  F07B         	call	_number_3	;wreg free
  1732                           
  1733                           ;unmc_display.c: 151: break;
  1734  00F9C6  0012               	return	
  1735  00F9C8                     l1388:
  1736                           
  1737                           ;unmc_display.c: 153: number_4();
  1738  00F9C8  ECA8  F07B         	call	_number_4	;wreg free
  1739                           
  1740                           ;unmc_display.c: 154: break;
  1741  00F9CC  0012               	return	
  1742  00F9CE                     l1390:
  1743                           
  1744                           ;unmc_display.c: 156: number_5();
  1745  00F9CE  ECC7  F07B         	call	_number_5	;wreg free
  1746                           
  1747                           ;unmc_display.c: 157: break;
  1748  00F9D2  0012               	return	
  1749  00F9D4                     l1392:
  1750                           
  1751                           ;unmc_display.c: 159: number_6();
  1752  00F9D4  ECDF  F07B         	call	_number_6	;wreg free
  1753                           
  1754                           ;unmc_display.c: 160: break;
  1755  00F9D8  0012               	return	
  1756  00F9DA                     l1394:
  1757                           
  1758                           ;unmc_display.c: 162: number_7();
  1759  00F9DA  EC91  F07B         	call	_number_7	;wreg free
  1760                           
  1761                           ;unmc_display.c: 163: break;
  1762  00F9DE  0012               	return	
  1763  00F9E0                     l1396:
  1764                           
  1765                           ;unmc_display.c: 165: number_8();
  1766  00F9E0  ECF9  F07B         	call	_number_8	;wreg free
  1767                           
  1768                           ;unmc_display.c: 166: break;
  1769  00F9E4  0012               	return	
  1770  00F9E6                     l1398:
  1771                           
  1772                           ;unmc_display.c: 168: number_9();
  1773  00F9E6  ECEC  F07B         	call	_number_9	;wreg free
  1774                           
  1775                           ;unmc_display.c: 170: }
  1776                           
  1777                           ;unmc_display.c: 169: break;
  1778  00F9EA  0012               	return	
  1779  00F9EC                     l1402:
  1780  00F9EC  C002  F004         	movff	construir_numero@number,??_construir_numero
  1781  00F9F0  C003  F005         	movff	construir_numero@number+1,??_construir_numero+1
  1782                           
  1783                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1784                           ; Switch size 1, requested type "space"
  1785                           ; Number of cases is 1, Range of values is 0 to 0
  1786                           ; switch strategies available:
  1787                           ; Name         Instructions Cycles
  1788                           ; simple_byte            4     3 (average)
  1789                           ;	Chosen strategy is simple_byte
  1790  00F9F4  5005               	movf	??_construir_numero+1,w,c
  1791  00F9F6  0A00               	xorlw	0	; case 0
  1792  00F9F8  A4D8               	btfss	status,2,c
  1793  00F9FA  0012               	return	
  1794                           
  1795                           ; Switch size 1, requested type "space"
  1796                           ; Number of cases is 10, Range of values is 0 to 9
  1797                           ; switch strategies available:
  1798                           ; Name         Instructions Cycles
  1799                           ; simple_byte           31    16 (average)
  1800                           ;	Chosen strategy is simple_byte
  1801  00F9FC  5004               	movf	??_construir_numero,w,c
  1802  00F9FE  0A00               	xorlw	0	; case 0
  1803  00FA00  B4D8               	btfsc	status,2,c
  1804  00FA02  D7D6               	goto	l1380
  1805  00FA04  0A01               	xorlw	1	; case 1
  1806  00FA06  B4D8               	btfsc	status,2,c
  1807  00FA08  D7D6               	goto	l1382
  1808  00FA0A  0A03               	xorlw	3	; case 2
  1809  00FA0C  B4D8               	btfsc	status,2,c
  1810  00FA0E  D7D6               	goto	l1384
  1811  00FA10  0A01               	xorlw	1	; case 3
  1812  00FA12  B4D8               	btfsc	status,2,c
  1813  00FA14  D7D6               	goto	l1386
  1814  00FA16  0A07               	xorlw	7	; case 4
  1815  00FA18  B4D8               	btfsc	status,2,c
  1816  00FA1A  D7D6               	goto	l1388
  1817  00FA1C  0A01               	xorlw	1	; case 5
  1818  00FA1E  B4D8               	btfsc	status,2,c
  1819  00FA20  D7D6               	goto	l1390
  1820  00FA22  0A03               	xorlw	3	; case 6
  1821  00FA24  B4D8               	btfsc	status,2,c
  1822  00FA26  D7D6               	goto	l1392
  1823  00FA28  0A01               	xorlw	1	; case 7
  1824  00FA2A  B4D8               	btfsc	status,2,c
  1825  00FA2C  D7D6               	goto	l1394
  1826  00FA2E  0A0F               	xorlw	15	; case 8
  1827  00FA30  B4D8               	btfsc	status,2,c
  1828  00FA32  D7D6               	goto	l1396
  1829  00FA34  0A01               	xorlw	1	; case 9
  1830  00FA36  A4D8               	btfss	status,2,c
  1831  00FA38  0012               	return	
  1832  00FA3A  D7D5               	goto	l1398
  1833  00FA3C  0012               	return		;funcret
  1834  00FA3E                     __end_of_construir_numero:
  1835                           	opt stack 0
  1836                           tblptru	equ	0xFF8
  1837                           wreg	equ	0xFE8
  1838                           status	equ	0xFD8
  1839                           
  1840 ;; *************** function _number_9 *****************
  1841 ;; Defined at:
  1842 ;;		line 128 in file "Unimic/unmc_01/headers/unmc_display.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;		None
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;		None
  1847 ;; Return value:  Size  Location     Type
  1848 ;;		None               void
  1849 ;; Registers used:
  1850 ;;		wreg, cstack
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1860 ;;Total ram usage:        0 bytes
  1861 ;; Hardware stack levels used:    1
  1862 ;; Hardware stack levels required when called:    2
  1863 ;; This function calls:
  1864 ;;		_encender_A
  1865 ;;		_encender_B
  1866 ;;		_encender_C
  1867 ;;		_encender_D
  1868 ;;		_encender_F
  1869 ;;		_encender_G
  1870 ;; This function is called by:
  1871 ;;		_construir_numero
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           	psect	text11
  1876  00F7D8                     __ptext11:
  1877                           	opt stack 0
  1878  00F7D8                     _number_9:
  1879                           	opt stack 26
  1880                           
  1881                           ;unmc_display.c: 129: encender_A();
  1882                           
  1883                           ;incstack = 0
  1884  00F7D8  EC64  F07B         	call	_encender_A	;wreg free
  1885                           
  1886                           ;unmc_display.c: 130: encender_B();
  1887  00F7DC  EC69  F07B         	call	_encender_B	;wreg free
  1888                           
  1889                           ;unmc_display.c: 131: encender_C();
  1890  00F7E0  EC6E  F07B         	call	_encender_C	;wreg free
  1891                           
  1892                           ;unmc_display.c: 132: encender_D();
  1893  00F7E4  EC73  F07B         	call	_encender_D	;wreg free
  1894                           
  1895                           ;unmc_display.c: 133: encender_F();
  1896  00F7E8  EC7D  F07B         	call	_encender_F	;wreg free
  1897                           
  1898                           ;unmc_display.c: 134: encender_G();
  1899  00F7EC  EC87  F07B         	call	_encender_G	;wreg free
  1900  00F7F0  0012               	return		;funcret
  1901  00F7F2                     __end_of_number_9:
  1902                           	opt stack 0
  1903                           tblptru	equ	0xFF8
  1904                           wreg	equ	0xFE8
  1905                           status	equ	0xFD8
  1906                           
  1907 ;; *************** function _number_8 *****************
  1908 ;; Defined at:
  1909 ;;		line 118 in file "Unimic/unmc_01/headers/unmc_display.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;		None
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;		None
  1914 ;; Return value:  Size  Location     Type
  1915 ;;		None               void
  1916 ;; Registers used:
  1917 ;;		wreg, cstack
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1927 ;;Total ram usage:        0 bytes
  1928 ;; Hardware stack levels used:    1
  1929 ;; Hardware stack levels required when called:    2
  1930 ;; This function calls:
  1931 ;;		_encender_A
  1932 ;;		_encender_B
  1933 ;;		_encender_C
  1934 ;;		_encender_D
  1935 ;;		_encender_E
  1936 ;;		_encender_F
  1937 ;;		_encender_G
  1938 ;; This function is called by:
  1939 ;;		_construir_numero
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943                           	psect	text12
  1944  00F7F2                     __ptext12:
  1945                           	opt stack 0
  1946  00F7F2                     _number_8:
  1947                           	opt stack 26
  1948                           
  1949                           ;unmc_display.c: 119: encender_A();
  1950                           
  1951                           ;incstack = 0
  1952  00F7F2  EC64  F07B         	call	_encender_A	;wreg free
  1953                           
  1954                           ;unmc_display.c: 120: encender_B();
  1955  00F7F6  EC69  F07B         	call	_encender_B	;wreg free
  1956                           
  1957                           ;unmc_display.c: 121: encender_C();
  1958  00F7FA  EC6E  F07B         	call	_encender_C	;wreg free
  1959                           
  1960                           ;unmc_display.c: 122: encender_D();
  1961  00F7FE  EC73  F07B         	call	_encender_D	;wreg free
  1962                           
  1963                           ;unmc_display.c: 123: encender_E();
  1964  00F802  EC78  F07B         	call	_encender_E	;wreg free
  1965                           
  1966                           ;unmc_display.c: 124: encender_F();
  1967  00F806  EC7D  F07B         	call	_encender_F	;wreg free
  1968                           
  1969                           ;unmc_display.c: 125: encender_G();
  1970  00F80A  EC87  F07B         	call	_encender_G	;wreg free
  1971  00F80E  0012               	return		;funcret
  1972  00F810                     __end_of_number_8:
  1973                           	opt stack 0
  1974                           tblptru	equ	0xFF8
  1975                           wreg	equ	0xFE8
  1976                           status	equ	0xFD8
  1977                           
  1978 ;; *************** function _number_7 *****************
  1979 ;; Defined at:
  1980 ;;		line 112 in file "Unimic/unmc_01/headers/unmc_display.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;		None
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;		None
  1985 ;; Return value:  Size  Location     Type
  1986 ;;		None               void
  1987 ;; Registers used:
  1988 ;;		wreg, cstack
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1998 ;;Total ram usage:        0 bytes
  1999 ;; Hardware stack levels used:    1
  2000 ;; Hardware stack levels required when called:    2
  2001 ;; This function calls:
  2002 ;;		_encender_A
  2003 ;;		_encender_B
  2004 ;;		_encender_C
  2005 ;; This function is called by:
  2006 ;;		_construir_numero
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010                           	psect	text13
  2011  00F722                     __ptext13:
  2012                           	opt stack 0
  2013  00F722                     _number_7:
  2014                           	opt stack 26
  2015                           
  2016                           ;unmc_display.c: 113: encender_A();
  2017                           
  2018                           ;incstack = 0
  2019  00F722  EC64  F07B         	call	_encender_A	;wreg free
  2020                           
  2021                           ;unmc_display.c: 114: encender_B();
  2022  00F726  EC69  F07B         	call	_encender_B	;wreg free
  2023                           
  2024                           ;unmc_display.c: 115: encender_C();
  2025  00F72A  EC6E  F07B         	call	_encender_C	;wreg free
  2026  00F72E  0012               	return		;funcret
  2027  00F730                     __end_of_number_7:
  2028                           	opt stack 0
  2029                           tblptru	equ	0xFF8
  2030                           wreg	equ	0xFE8
  2031                           status	equ	0xFD8
  2032                           
  2033 ;; *************** function _number_6 *****************
  2034 ;; Defined at:
  2035 ;;		line 103 in file "Unimic/unmc_01/headers/unmc_display.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;		None
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;		None
  2040 ;; Return value:  Size  Location     Type
  2041 ;;		None               void
  2042 ;; Registers used:
  2043 ;;		wreg, cstack
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2053 ;;Total ram usage:        0 bytes
  2054 ;; Hardware stack levels used:    1
  2055 ;; Hardware stack levels required when called:    2
  2056 ;; This function calls:
  2057 ;;		_encender_A
  2058 ;;		_encender_C
  2059 ;;		_encender_D
  2060 ;;		_encender_E
  2061 ;;		_encender_F
  2062 ;;		_encender_G
  2063 ;; This function is called by:
  2064 ;;		_construir_numero
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           	psect	text14
  2069  00F7BE                     __ptext14:
  2070                           	opt stack 0
  2071  00F7BE                     _number_6:
  2072                           	opt stack 26
  2073                           
  2074                           ;unmc_display.c: 104: encender_A();
  2075                           
  2076                           ;incstack = 0
  2077  00F7BE  EC64  F07B         	call	_encender_A	;wreg free
  2078                           
  2079                           ;unmc_display.c: 105: encender_C();
  2080  00F7C2  EC6E  F07B         	call	_encender_C	;wreg free
  2081                           
  2082                           ;unmc_display.c: 106: encender_D();
  2083  00F7C6  EC73  F07B         	call	_encender_D	;wreg free
  2084                           
  2085                           ;unmc_display.c: 107: encender_E();
  2086  00F7CA  EC78  F07B         	call	_encender_E	;wreg free
  2087                           
  2088                           ;unmc_display.c: 108: encender_F();
  2089  00F7CE  EC7D  F07B         	call	_encender_F	;wreg free
  2090                           
  2091                           ;unmc_display.c: 109: encender_G();
  2092  00F7D2  EC87  F07B         	call	_encender_G	;wreg free
  2093  00F7D6  0012               	return		;funcret
  2094  00F7D8                     __end_of_number_6:
  2095                           	opt stack 0
  2096                           tblptru	equ	0xFF8
  2097                           wreg	equ	0xFE8
  2098                           status	equ	0xFD8
  2099                           
  2100 ;; *************** function _number_5 *****************
  2101 ;; Defined at:
  2102 ;;		line 95 in file "Unimic/unmc_01/headers/unmc_display.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;		None
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;		None
  2107 ;; Return value:  Size  Location     Type
  2108 ;;		None               void
  2109 ;; Registers used:
  2110 ;;		wreg, cstack
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2120 ;;Total ram usage:        0 bytes
  2121 ;; Hardware stack levels used:    1
  2122 ;; Hardware stack levels required when called:    2
  2123 ;; This function calls:
  2124 ;;		_encender_A
  2125 ;;		_encender_C
  2126 ;;		_encender_D
  2127 ;;		_encender_F
  2128 ;;		_encender_G
  2129 ;; This function is called by:
  2130 ;;		_construir_numero
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           	psect	text15
  2135  00F78E                     __ptext15:
  2136                           	opt stack 0
  2137  00F78E                     _number_5:
  2138                           	opt stack 26
  2139                           
  2140                           ;unmc_display.c: 96: encender_A();
  2141                           
  2142                           ;incstack = 0
  2143  00F78E  EC64  F07B         	call	_encender_A	;wreg free
  2144                           
  2145                           ;unmc_display.c: 97: encender_C();
  2146  00F792  EC6E  F07B         	call	_encender_C	;wreg free
  2147                           
  2148                           ;unmc_display.c: 98: encender_D();
  2149  00F796  EC73  F07B         	call	_encender_D	;wreg free
  2150                           
  2151                           ;unmc_display.c: 99: encender_F();
  2152  00F79A  EC7D  F07B         	call	_encender_F	;wreg free
  2153                           
  2154                           ;unmc_display.c: 100: encender_G();
  2155  00F79E  EC87  F07B         	call	_encender_G	;wreg free
  2156  00F7A2  0012               	return		;funcret
  2157  00F7A4                     __end_of_number_5:
  2158                           	opt stack 0
  2159                           tblptru	equ	0xFF8
  2160                           wreg	equ	0xFE8
  2161                           status	equ	0xFD8
  2162                           
  2163 ;; *************** function _number_4 *****************
  2164 ;; Defined at:
  2165 ;;		line 88 in file "Unimic/unmc_01/headers/unmc_display.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;		None
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;		None
  2170 ;; Return value:  Size  Location     Type
  2171 ;;		None               void
  2172 ;; Registers used:
  2173 ;;		wreg, cstack
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2183 ;;Total ram usage:        0 bytes
  2184 ;; Hardware stack levels used:    1
  2185 ;; Hardware stack levels required when called:    2
  2186 ;; This function calls:
  2187 ;;		_encender_B
  2188 ;;		_encender_C
  2189 ;;		_encender_F
  2190 ;;		_encender_G
  2191 ;; This function is called by:
  2192 ;;		_construir_numero
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           	psect	text16
  2197  00F750                     __ptext16:
  2198                           	opt stack 0
  2199  00F750                     _number_4:
  2200                           	opt stack 26
  2201                           
  2202                           ;unmc_display.c: 89: encender_B();
  2203                           
  2204                           ;incstack = 0
  2205  00F750  EC69  F07B         	call	_encender_B	;wreg free
  2206                           
  2207                           ;unmc_display.c: 90: encender_C();
  2208  00F754  EC6E  F07B         	call	_encender_C	;wreg free
  2209                           
  2210                           ;unmc_display.c: 91: encender_F();
  2211  00F758  EC7D  F07B         	call	_encender_F	;wreg free
  2212                           
  2213                           ;unmc_display.c: 92: encender_G();
  2214  00F75C  EC87  F07B         	call	_encender_G	;wreg free
  2215  00F760  0012               	return		;funcret
  2216  00F762                     __end_of_number_4:
  2217                           	opt stack 0
  2218                           tblptru	equ	0xFF8
  2219                           wreg	equ	0xFE8
  2220                           status	equ	0xFD8
  2221                           
  2222 ;; *************** function _number_3 *****************
  2223 ;; Defined at:
  2224 ;;		line 80 in file "Unimic/unmc_01/headers/unmc_display.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;		None
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;		None
  2229 ;; Return value:  Size  Location     Type
  2230 ;;		None               void
  2231 ;; Registers used:
  2232 ;;		wreg, cstack
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2242 ;;Total ram usage:        0 bytes
  2243 ;; Hardware stack levels used:    1
  2244 ;; Hardware stack levels required when called:    2
  2245 ;; This function calls:
  2246 ;;		_encender_A
  2247 ;;		_encender_B
  2248 ;;		_encender_C
  2249 ;;		_encender_D
  2250 ;;		_encender_G
  2251 ;; This function is called by:
  2252 ;;		_construir_numero
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           	psect	text17
  2257  00F778                     __ptext17:
  2258                           	opt stack 0
  2259  00F778                     _number_3:
  2260                           	opt stack 26
  2261                           
  2262                           ;unmc_display.c: 81: encender_A();
  2263                           
  2264                           ;incstack = 0
  2265  00F778  EC64  F07B         	call	_encender_A	;wreg free
  2266                           
  2267                           ;unmc_display.c: 82: encender_B();
  2268  00F77C  EC69  F07B         	call	_encender_B	;wreg free
  2269                           
  2270                           ;unmc_display.c: 83: encender_C();
  2271  00F780  EC6E  F07B         	call	_encender_C	;wreg free
  2272                           
  2273                           ;unmc_display.c: 84: encender_D();
  2274  00F784  EC73  F07B         	call	_encender_D	;wreg free
  2275                           
  2276                           ;unmc_display.c: 85: encender_G();
  2277  00F788  EC87  F07B         	call	_encender_G	;wreg free
  2278  00F78C  0012               	return		;funcret
  2279  00F78E                     __end_of_number_3:
  2280                           	opt stack 0
  2281                           tblptru	equ	0xFF8
  2282                           wreg	equ	0xFE8
  2283                           status	equ	0xFD8
  2284                           
  2285 ;; *************** function _number_2 *****************
  2286 ;; Defined at:
  2287 ;;		line 72 in file "Unimic/unmc_01/headers/unmc_display.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;		None
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;		None
  2292 ;; Return value:  Size  Location     Type
  2293 ;;		None               void
  2294 ;; Registers used:
  2295 ;;		wreg, cstack
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2305 ;;Total ram usage:        0 bytes
  2306 ;; Hardware stack levels used:    1
  2307 ;; Hardware stack levels required when called:    2
  2308 ;; This function calls:
  2309 ;;		_encender_A
  2310 ;;		_encender_B
  2311 ;;		_encender_D
  2312 ;;		_encender_E
  2313 ;;		_encender_G
  2314 ;; This function is called by:
  2315 ;;		_construir_numero
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319                           	psect	text18
  2320  00F762                     __ptext18:
  2321                           	opt stack 0
  2322  00F762                     _number_2:
  2323                           	opt stack 26
  2324                           
  2325                           ;unmc_display.c: 73: encender_A();
  2326                           
  2327                           ;incstack = 0
  2328  00F762  EC64  F07B         	call	_encender_A	;wreg free
  2329                           
  2330                           ;unmc_display.c: 74: encender_B();
  2331  00F766  EC69  F07B         	call	_encender_B	;wreg free
  2332                           
  2333                           ;unmc_display.c: 75: encender_D();
  2334  00F76A  EC73  F07B         	call	_encender_D	;wreg free
  2335                           
  2336                           ;unmc_display.c: 76: encender_E();
  2337  00F76E  EC78  F07B         	call	_encender_E	;wreg free
  2338                           
  2339                           ;unmc_display.c: 77: encender_G();
  2340  00F772  EC87  F07B         	call	_encender_G	;wreg free
  2341  00F776  0012               	return		;funcret
  2342  00F778                     __end_of_number_2:
  2343                           	opt stack 0
  2344                           tblptru	equ	0xFF8
  2345                           wreg	equ	0xFE8
  2346                           status	equ	0xFD8
  2347                           
  2348 ;; *************** function _encender_G *****************
  2349 ;; Defined at:
  2350 ;;		line 42 in file "Unimic/unmc_01/headers/unmc_display.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;		None
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;		None
  2355 ;; Return value:  Size  Location     Type
  2356 ;;		None               void
  2357 ;; Registers used:
  2358 ;;		wreg, cstack
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2368 ;;Total ram usage:        0 bytes
  2369 ;; Hardware stack levels used:    1
  2370 ;; Hardware stack levels required when called:    1
  2371 ;; This function calls:
  2372 ;;		_tiempo_encendido_segmento
  2373 ;; This function is called by:
  2374 ;;		_number_2
  2375 ;;		_number_3
  2376 ;;		_number_4
  2377 ;;		_number_5
  2378 ;;		_number_6
  2379 ;;		_number_8
  2380 ;;		_number_9
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384                           	psect	text19
  2385  00F70E                     __ptext19:
  2386                           	opt stack 0
  2387  00F70E                     _encender_G:
  2388                           	opt stack 26
  2389                           
  2390                           ;unmc_display.c: 43: PORTBbits.RB1 = 1;;
  2391                           
  2392                           ;incstack = 0
  2393  00F70E  8281               	bsf	3969,1,c	;volatile
  2394                           
  2395                           ;unmc_display.c: 44: tiempo_encendido_segmento();
  2396  00F710  ECA0  F07B         	call	_tiempo_encendido_segmento	;wreg free
  2397                           
  2398                           ;unmc_display.c: 45: PORTBbits.RB1 = 0;;
  2399  00F714  9281               	bcf	3969,1,c	;volatile
  2400  00F716  0012               	return		;funcret
  2401  00F718                     __end_of_encender_G:
  2402                           	opt stack 0
  2403                           tblptru	equ	0xFF8
  2404                           wreg	equ	0xFE8
  2405                           status	equ	0xFD8
  2406                           
  2407 ;; *************** function _number_1 *****************
  2408 ;; Defined at:
  2409 ;;		line 67 in file "Unimic/unmc_01/headers/unmc_display.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;		None
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;		None
  2414 ;; Return value:  Size  Location     Type
  2415 ;;		None               void
  2416 ;; Registers used:
  2417 ;;		wreg, cstack
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2427 ;;Total ram usage:        0 bytes
  2428 ;; Hardware stack levels used:    1
  2429 ;; Hardware stack levels required when called:    2
  2430 ;; This function calls:
  2431 ;;		_encender_B
  2432 ;;		_encender_C
  2433 ;; This function is called by:
  2434 ;;		_construir_numero
  2435 ;; This function uses a non-reentrant model
  2436 ;;
  2437                           
  2438                           	psect	text20
  2439  00F704                     __ptext20:
  2440                           	opt stack 0
  2441  00F704                     _number_1:
  2442                           	opt stack 26
  2443                           
  2444                           ;unmc_display.c: 68: encender_B();
  2445                           
  2446                           ;incstack = 0
  2447  00F704  EC69  F07B         	call	_encender_B	;wreg free
  2448                           
  2449                           ;unmc_display.c: 69: encender_C();
  2450  00F708  EC6E  F07B         	call	_encender_C	;wreg free
  2451  00F70C  0012               	return		;funcret
  2452  00F70E                     __end_of_number_1:
  2453                           	opt stack 0
  2454                           tblptru	equ	0xFF8
  2455                           wreg	equ	0xFE8
  2456                           status	equ	0xFD8
  2457                           
  2458 ;; *************** function _number_0 *****************
  2459 ;; Defined at:
  2460 ;;		line 58 in file "Unimic/unmc_01/headers/unmc_display.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;		None
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;		None
  2465 ;; Return value:  Size  Location     Type
  2466 ;;		None               void
  2467 ;; Registers used:
  2468 ;;		wreg, cstack
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2478 ;;Total ram usage:        0 bytes
  2479 ;; Hardware stack levels used:    1
  2480 ;; Hardware stack levels required when called:    2
  2481 ;; This function calls:
  2482 ;;		_encender_A
  2483 ;;		_encender_B
  2484 ;;		_encender_C
  2485 ;;		_encender_D
  2486 ;;		_encender_E
  2487 ;;		_encender_F
  2488 ;; This function is called by:
  2489 ;;		_construir_numero
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           
  2493                           	psect	text21
  2494  00F7A4                     __ptext21:
  2495                           	opt stack 0
  2496  00F7A4                     _number_0:
  2497                           	opt stack 26
  2498                           
  2499                           ;unmc_display.c: 59: encender_A();
  2500                           
  2501                           ;incstack = 0
  2502  00F7A4  EC64  F07B         	call	_encender_A	;wreg free
  2503                           
  2504                           ;unmc_display.c: 60: encender_B();
  2505  00F7A8  EC69  F07B         	call	_encender_B	;wreg free
  2506                           
  2507                           ;unmc_display.c: 61: encender_C();
  2508  00F7AC  EC6E  F07B         	call	_encender_C	;wreg free
  2509                           
  2510                           ;unmc_display.c: 62: encender_D();
  2511  00F7B0  EC73  F07B         	call	_encender_D	;wreg free
  2512                           
  2513                           ;unmc_display.c: 63: encender_E();
  2514  00F7B4  EC78  F07B         	call	_encender_E	;wreg free
  2515                           
  2516                           ;unmc_display.c: 64: encender_F();
  2517  00F7B8  EC7D  F07B         	call	_encender_F	;wreg free
  2518  00F7BC  0012               	return		;funcret
  2519  00F7BE                     __end_of_number_0:
  2520                           	opt stack 0
  2521                           tblptru	equ	0xFF8
  2522                           wreg	equ	0xFE8
  2523                           status	equ	0xFD8
  2524                           
  2525 ;; *************** function _encender_F *****************
  2526 ;; Defined at:
  2527 ;;		line 36 in file "Unimic/unmc_01/headers/unmc_display.c"
  2528 ;; Parameters:    Size  Location     Type
  2529 ;;		None
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;		None
  2532 ;; Return value:  Size  Location     Type
  2533 ;;		None               void
  2534 ;; Registers used:
  2535 ;;		wreg, cstack
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2545 ;;Total ram usage:        0 bytes
  2546 ;; Hardware stack levels used:    1
  2547 ;; Hardware stack levels required when called:    1
  2548 ;; This function calls:
  2549 ;;		_tiempo_encendido_segmento
  2550 ;; This function is called by:
  2551 ;;		_number_0
  2552 ;;		_number_4
  2553 ;;		_number_5
  2554 ;;		_number_6
  2555 ;;		_number_8
  2556 ;;		_number_9
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560                           	psect	text22
  2561  00F6FA                     __ptext22:
  2562                           	opt stack 0
  2563  00F6FA                     _encender_F:
  2564                           	opt stack 26
  2565                           
  2566                           ;unmc_display.c: 37: PORTBbits.RB2 = 1;;
  2567                           
  2568                           ;incstack = 0
  2569  00F6FA  8481               	bsf	3969,2,c	;volatile
  2570                           
  2571                           ;unmc_display.c: 38: tiempo_encendido_segmento();
  2572  00F6FC  ECA0  F07B         	call	_tiempo_encendido_segmento	;wreg free
  2573                           
  2574                           ;unmc_display.c: 39: PORTBbits.RB2 = 0;;
  2575  00F700  9481               	bcf	3969,2,c	;volatile
  2576  00F702  0012               	return		;funcret
  2577  00F704                     __end_of_encender_F:
  2578                           	opt stack 0
  2579                           tblptru	equ	0xFF8
  2580                           wreg	equ	0xFE8
  2581                           status	equ	0xFD8
  2582                           
  2583 ;; *************** function _encender_E *****************
  2584 ;; Defined at:
  2585 ;;		line 30 in file "Unimic/unmc_01/headers/unmc_display.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;		None
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;		None
  2590 ;; Return value:  Size  Location     Type
  2591 ;;		None               void
  2592 ;; Registers used:
  2593 ;;		wreg, cstack
  2594 ;; Tracked objects:
  2595 ;;		On entry : 0/0
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2603 ;;Total ram usage:        0 bytes
  2604 ;; Hardware stack levels used:    1
  2605 ;; Hardware stack levels required when called:    1
  2606 ;; This function calls:
  2607 ;;		_tiempo_encendido_segmento
  2608 ;; This function is called by:
  2609 ;;		_number_0
  2610 ;;		_number_2
  2611 ;;		_number_6
  2612 ;;		_number_8
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           	psect	text23
  2617  00F6F0                     __ptext23:
  2618                           	opt stack 0
  2619  00F6F0                     _encender_E:
  2620                           	opt stack 26
  2621                           
  2622                           ;unmc_display.c: 31: PORTBbits.RB3 = 1;;
  2623                           
  2624                           ;incstack = 0
  2625  00F6F0  8681               	bsf	3969,3,c	;volatile
  2626                           
  2627                           ;unmc_display.c: 32: tiempo_encendido_segmento();
  2628  00F6F2  ECA0  F07B         	call	_tiempo_encendido_segmento	;wreg free
  2629                           
  2630                           ;unmc_display.c: 33: PORTBbits.RB3 = 0;;
  2631  00F6F6  9681               	bcf	3969,3,c	;volatile
  2632  00F6F8  0012               	return		;funcret
  2633  00F6FA                     __end_of_encender_E:
  2634                           	opt stack 0
  2635                           tblptru	equ	0xFF8
  2636                           wreg	equ	0xFE8
  2637                           status	equ	0xFD8
  2638                           
  2639 ;; *************** function _encender_D *****************
  2640 ;; Defined at:
  2641 ;;		line 24 in file "Unimic/unmc_01/headers/unmc_display.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;		None
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;		None
  2646 ;; Return value:  Size  Location     Type
  2647 ;;		None               void
  2648 ;; Registers used:
  2649 ;;		wreg, cstack
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2659 ;;Total ram usage:        0 bytes
  2660 ;; Hardware stack levels used:    1
  2661 ;; Hardware stack levels required when called:    1
  2662 ;; This function calls:
  2663 ;;		_tiempo_encendido_segmento
  2664 ;; This function is called by:
  2665 ;;		_number_0
  2666 ;;		_number_2
  2667 ;;		_number_3
  2668 ;;		_number_5
  2669 ;;		_number_6
  2670 ;;		_number_8
  2671 ;;		_number_9
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           	psect	text24
  2676  00F6E6                     __ptext24:
  2677                           	opt stack 0
  2678  00F6E6                     _encender_D:
  2679                           	opt stack 26
  2680                           
  2681                           ;unmc_display.c: 25: PORTBbits.RB4 = 1;;
  2682                           
  2683                           ;incstack = 0
  2684  00F6E6  8881               	bsf	3969,4,c	;volatile
  2685                           
  2686                           ;unmc_display.c: 26: tiempo_encendido_segmento();
  2687  00F6E8  ECA0  F07B         	call	_tiempo_encendido_segmento	;wreg free
  2688                           
  2689                           ;unmc_display.c: 27: PORTBbits.RB4 = 0;;
  2690  00F6EC  9881               	bcf	3969,4,c	;volatile
  2691  00F6EE  0012               	return		;funcret
  2692  00F6F0                     __end_of_encender_D:
  2693                           	opt stack 0
  2694                           tblptru	equ	0xFF8
  2695                           wreg	equ	0xFE8
  2696                           status	equ	0xFD8
  2697                           
  2698 ;; *************** function _encender_C *****************
  2699 ;; Defined at:
  2700 ;;		line 18 in file "Unimic/unmc_01/headers/unmc_display.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;		None
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;		None
  2705 ;; Return value:  Size  Location     Type
  2706 ;;		None               void
  2707 ;; Registers used:
  2708 ;;		wreg, cstack
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2718 ;;Total ram usage:        0 bytes
  2719 ;; Hardware stack levels used:    1
  2720 ;; Hardware stack levels required when called:    1
  2721 ;; This function calls:
  2722 ;;		_tiempo_encendido_segmento
  2723 ;; This function is called by:
  2724 ;;		_number_0
  2725 ;;		_number_1
  2726 ;;		_number_3
  2727 ;;		_number_4
  2728 ;;		_number_5
  2729 ;;		_number_6
  2730 ;;		_number_7
  2731 ;;		_number_8
  2732 ;;		_number_9
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           	psect	text25
  2737  00F6DC                     __ptext25:
  2738                           	opt stack 0
  2739  00F6DC                     _encender_C:
  2740                           	opt stack 26
  2741                           
  2742                           ;unmc_display.c: 19: PORTBbits.RB5 = 1;;
  2743                           
  2744                           ;incstack = 0
  2745  00F6DC  8A81               	bsf	3969,5,c	;volatile
  2746                           
  2747                           ;unmc_display.c: 20: tiempo_encendido_segmento();
  2748  00F6DE  ECA0  F07B         	call	_tiempo_encendido_segmento	;wreg free
  2749                           
  2750                           ;unmc_display.c: 21: PORTBbits.RB5 = 0;;
  2751  00F6E2  9A81               	bcf	3969,5,c	;volatile
  2752  00F6E4  0012               	return		;funcret
  2753  00F6E6                     __end_of_encender_C:
  2754                           	opt stack 0
  2755                           tblptru	equ	0xFF8
  2756                           wreg	equ	0xFE8
  2757                           status	equ	0xFD8
  2758                           
  2759 ;; *************** function _encender_B *****************
  2760 ;; Defined at:
  2761 ;;		line 12 in file "Unimic/unmc_01/headers/unmc_display.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;		None
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;		None
  2766 ;; Return value:  Size  Location     Type
  2767 ;;		None               void
  2768 ;; Registers used:
  2769 ;;		wreg, cstack
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2779 ;;Total ram usage:        0 bytes
  2780 ;; Hardware stack levels used:    1
  2781 ;; Hardware stack levels required when called:    1
  2782 ;; This function calls:
  2783 ;;		_tiempo_encendido_segmento
  2784 ;; This function is called by:
  2785 ;;		_number_0
  2786 ;;		_number_1
  2787 ;;		_number_2
  2788 ;;		_number_3
  2789 ;;		_number_4
  2790 ;;		_number_7
  2791 ;;		_number_8
  2792 ;;		_number_9
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           	psect	text26
  2797  00F6D2                     __ptext26:
  2798                           	opt stack 0
  2799  00F6D2                     _encender_B:
  2800                           	opt stack 26
  2801                           
  2802                           ;unmc_display.c: 13: PORTBbits.RB6 = 1;;
  2803                           
  2804                           ;incstack = 0
  2805  00F6D2  8C81               	bsf	3969,6,c	;volatile
  2806                           
  2807                           ;unmc_display.c: 14: tiempo_encendido_segmento();
  2808  00F6D4  ECA0  F07B         	call	_tiempo_encendido_segmento	;wreg free
  2809                           
  2810                           ;unmc_display.c: 15: PORTBbits.RB6 = 0;;
  2811  00F6D8  9C81               	bcf	3969,6,c	;volatile
  2812  00F6DA  0012               	return		;funcret
  2813  00F6DC                     __end_of_encender_B:
  2814                           	opt stack 0
  2815                           tblptru	equ	0xFF8
  2816                           wreg	equ	0xFE8
  2817                           status	equ	0xFD8
  2818                           
  2819 ;; *************** function _encender_A *****************
  2820 ;; Defined at:
  2821 ;;		line 6 in file "Unimic/unmc_01/headers/unmc_display.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;		None
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;		None
  2826 ;; Return value:  Size  Location     Type
  2827 ;;		None               void
  2828 ;; Registers used:
  2829 ;;		wreg, cstack
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2839 ;;Total ram usage:        0 bytes
  2840 ;; Hardware stack levels used:    1
  2841 ;; Hardware stack levels required when called:    1
  2842 ;; This function calls:
  2843 ;;		_tiempo_encendido_segmento
  2844 ;; This function is called by:
  2845 ;;		_number_0
  2846 ;;		_number_2
  2847 ;;		_number_3
  2848 ;;		_number_5
  2849 ;;		_number_6
  2850 ;;		_number_7
  2851 ;;		_number_8
  2852 ;;		_number_9
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856                           	psect	text27
  2857  00F6C8                     __ptext27:
  2858                           	opt stack 0
  2859  00F6C8                     _encender_A:
  2860                           	opt stack 26
  2861                           
  2862                           ;unmc_display.c: 7: PORTBbits.RB7 = 1;;
  2863                           
  2864                           ;incstack = 0
  2865  00F6C8  8E81               	bsf	3969,7,c	;volatile
  2866                           
  2867                           ;unmc_display.c: 8: tiempo_encendido_segmento();
  2868  00F6CA  ECA0  F07B         	call	_tiempo_encendido_segmento	;wreg free
  2869                           
  2870                           ;unmc_display.c: 9: PORTBbits.RB7 = 0;;
  2871  00F6CE  9E81               	bcf	3969,7,c	;volatile
  2872  00F6D0  0012               	return		;funcret
  2873  00F6D2                     __end_of_encender_A:
  2874                           	opt stack 0
  2875                           tblptru	equ	0xFF8
  2876                           wreg	equ	0xFE8
  2877                           status	equ	0xFD8
  2878                           
  2879 ;; *************** function _tiempo_encendido_segmento *****************
  2880 ;; Defined at:
  2881 ;;		line 3 in file "Unimic/unmc_01/headers/unmc_display.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;		None
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;		None
  2886 ;; Return value:  Size  Location     Type
  2887 ;;		None               void
  2888 ;; Registers used:
  2889 ;;		wreg
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2897 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2898 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2899 ;;Total ram usage:        1 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; This function calls:
  2902 ;;		Nothing
  2903 ;; This function is called by:
  2904 ;;		_encender_A
  2905 ;;		_encender_B
  2906 ;;		_encender_C
  2907 ;;		_encender_D
  2908 ;;		_encender_E
  2909 ;;		_encender_F
  2910 ;;		_encender_G
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914                           	psect	text28
  2915  00F740                     __ptext28:
  2916                           	opt stack 0
  2917  00F740                     _tiempo_encendido_segmento:
  2918                           	opt stack 26
  2919                           
  2920                           ;unmc_display.c: 4: _delay((unsigned long)((1)*(8000000/4000.0)));
  2921                           
  2922                           ;incstack = 0
  2923  00F740  0E03               	movlw	3
  2924  00F742  6E01               	movwf	??_tiempo_encendido_segmento& (0+255),c
  2925  00F744  0E98               	movlw	152
  2926  00F746                     u1107:
  2927  00F746  2EE8               	decfsz	wreg,f,c
  2928  00F748  D7FE               	goto	u1107
  2929  00F74A  2E01               	decfsz	??_tiempo_encendido_segmento& (0+255),f,c
  2930  00F74C  D7FC               	goto	u1107
  2931  00F74E  0012               	return		;funcret
  2932  00F750                     __end_of_tiempo_encendido_segmento:
  2933                           	opt stack 0
  2934                           tblptru	equ	0xFF8
  2935                           wreg	equ	0xFE8
  2936                           status	equ	0xFD8
  2937                           
  2938 ;; *************** function _apagar_segmentos *****************
  2939 ;; Defined at:
  2940 ;;		line 48 in file "Unimic/unmc_01/headers/unmc_display.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;		None
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;		None
  2945 ;; Return value:  Size  Location     Type
  2946 ;;		None               void
  2947 ;; Registers used:
  2948 ;;		None
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2958 ;;Total ram usage:        0 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; This function calls:
  2961 ;;		Nothing
  2962 ;; This function is called by:
  2963 ;;		_construir_numero
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966                           
  2967                           	psect	text29
  2968  00F730                     __ptext29:
  2969                           	opt stack 0
  2970  00F730                     _apagar_segmentos:
  2971                           	opt stack 28
  2972                           
  2973                           ;unmc_display.c: 49: PORTBbits.RB7 = 0;;
  2974                           
  2975                           ;incstack = 0
  2976  00F730  9E81               	bcf	3969,7,c	;volatile
  2977                           
  2978                           ;unmc_display.c: 50: PORTBbits.RB6 = 0;;
  2979  00F732  9C81               	bcf	3969,6,c	;volatile
  2980                           
  2981                           ;unmc_display.c: 51: PORTBbits.RB5 = 0;;
  2982  00F734  9A81               	bcf	3969,5,c	;volatile
  2983                           
  2984                           ;unmc_display.c: 52: PORTBbits.RB4 = 0;;
  2985  00F736  9881               	bcf	3969,4,c	;volatile
  2986                           
  2987                           ;unmc_display.c: 53: PORTBbits.RB3 = 0;;
  2988  00F738  9681               	bcf	3969,3,c	;volatile
  2989                           
  2990                           ;unmc_display.c: 54: PORTBbits.RB2 = 0;;
  2991  00F73A  9481               	bcf	3969,2,c	;volatile
  2992                           
  2993                           ;unmc_display.c: 55: PORTBbits.RB1 = 0;;
  2994  00F73C  9281               	bcf	3969,1,c	;volatile
  2995  00F73E  0012               	return		;funcret
  2996  00F740                     __end_of_apagar_segmentos:
  2997                           	opt stack 0
  2998                           tblptru	equ	0xFF8
  2999                           wreg	equ	0xFE8
  3000                           status	equ	0xFD8
  3001                           
  3002 ;; *************** function ___wmul *****************
  3003 ;; Defined at:
  3004 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;  multiplier      2    0[COMRAM] unsigned int 
  3007 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;  product         2    4[COMRAM] unsigned int 
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  2    0[COMRAM] unsigned int 
  3012 ;; Registers used:
  3013 ;;		wreg, status,2, status,0, prodl, prodh
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3019 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3020 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3022 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3023 ;;Total ram usage:        6 bytes
  3024 ;; Hardware stack levels used:    1
  3025 ;; This function calls:
  3026 ;;		Nothing
  3027 ;; This function is called by:
  3028 ;;		_imprimir_temperatura
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           	psect	text30
  3033  00F810                     __ptext30:
  3034                           	opt stack 0
  3035  00F810                     ___wmul:
  3036                           	opt stack 29
  3037                           
  3038                           ;incstack = 0
  3039  00F810  5001               	movf	___wmul@multiplier,w,c
  3040  00F812  0203               	mulwf	___wmul@multiplicand,c
  3041  00F814  CFF3 F005          	movff	prodl,___wmul@product
  3042  00F818  CFF4 F006          	movff	prodh,___wmul@product+1
  3043  00F81C  5001               	movf	___wmul@multiplier,w,c
  3044  00F81E  0204               	mulwf	___wmul@multiplicand+1,c
  3045  00F820  50F3               	movf	prodl,w,c
  3046  00F822  2606               	addwf	___wmul@product+1,f,c
  3047  00F824  5002               	movf	___wmul@multiplier+1,w,c
  3048  00F826  0203               	mulwf	___wmul@multiplicand,c
  3049  00F828  50F3               	movf	prodl,w,c
  3050  00F82A  2606               	addwf	___wmul@product+1,f,c
  3051  00F82C  C005  F001         	movff	___wmul@product,?___wmul
  3052  00F830  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3053  00F834  0012               	return	
  3054  00F836  0012               	return		;funcret
  3055  00F838                     __end_of___wmul:
  3056                           	opt stack 0
  3057                           tblptru	equ	0xFF8
  3058                           prodh	equ	0xFF4
  3059                           prodl	equ	0xFF3
  3060                           wreg	equ	0xFE8
  3061                           status	equ	0xFD8
  3062                           
  3063 ;; *************** function ___awdiv *****************
  3064 ;; Defined at:
  3065 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;  dividend        2    0[COMRAM] int 
  3068 ;;  divisor         2    2[COMRAM] int 
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;  quotient        2    6[COMRAM] int 
  3071 ;;  sign            1    5[COMRAM] unsigned char 
  3072 ;;  counter         1    4[COMRAM] unsigned char 
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  2    0[COMRAM] int 
  3075 ;; Registers used:
  3076 ;;		wreg, status,2, status,0
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3082 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3083 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3085 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3086 ;;Total ram usage:        8 bytes
  3087 ;; Hardware stack levels used:    1
  3088 ;; This function calls:
  3089 ;;		Nothing
  3090 ;; This function is called by:
  3091 ;;		_imprimir_temperatura
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           
  3095                           	psect	text31
  3096  00FA3E                     __ptext31:
  3097                           	opt stack 0
  3098  00FA3E                     ___awdiv:
  3099                           	opt stack 29
  3100                           
  3101                           ;incstack = 0
  3102  00FA3E  0E00               	movlw	0
  3103  00FA40  6E06               	movwf	___awdiv@sign,c
  3104  00FA42  AE04               	btfss	___awdiv@divisor+1,7,c
  3105  00FA44  D007               	goto	l1426
  3106  00FA46  6C03               	negf	___awdiv@divisor,c
  3107  00FA48  1E04               	comf	___awdiv@divisor+1,f,c
  3108  00FA4A  B0D8               	btfsc	status,0,c
  3109  00FA4C  2A04               	incf	___awdiv@divisor+1,f,c
  3110  00FA4E  0E01               	movlw	1
  3111  00FA50  6E06               	movwf	___awdiv@sign,c
  3112  00FA52  D000               	goto	l1426
  3113  00FA54                     l1426:
  3114  00FA54  AE02               	btfss	___awdiv@dividend+1,7,c
  3115  00FA56  D007               	goto	l1432
  3116  00FA58  6C01               	negf	___awdiv@dividend,c
  3117  00FA5A  1E02               	comf	___awdiv@dividend+1,f,c
  3118  00FA5C  B0D8               	btfsc	status,0,c
  3119  00FA5E  2A02               	incf	___awdiv@dividend+1,f,c
  3120  00FA60  0E01               	movlw	1
  3121  00FA62  1A06               	xorwf	___awdiv@sign,f,c
  3122  00FA64  D000               	goto	l1432
  3123  00FA66                     l1432:
  3124  00FA66  0E00               	movlw	0
  3125  00FA68  6E08               	movwf	___awdiv@quotient+1,c
  3126  00FA6A  0E00               	movlw	0
  3127  00FA6C  6E07               	movwf	___awdiv@quotient,c
  3128  00FA6E  5003               	movf	___awdiv@divisor,w,c
  3129  00FA70  1004               	iorwf	___awdiv@divisor+1,w,c
  3130  00FA72  B4D8               	btfsc	status,2,c
  3131  00FA74  D021               	goto	l1454
  3132  00FA76  0E01               	movlw	1
  3133  00FA78  6E05               	movwf	___awdiv@counter,c
  3134  00FA7A  D005               	goto	l1440
  3135  00FA7C                     l1438:
  3136  00FA7C  90D8               	bcf	status,0,c
  3137  00FA7E  3603               	rlcf	___awdiv@divisor,f,c
  3138  00FA80  3604               	rlcf	___awdiv@divisor+1,f,c
  3139  00FA82  2A05               	incf	___awdiv@counter,f,c
  3140  00FA84  D000               	goto	l1440
  3141  00FA86                     l1440:
  3142  00FA86  BE04               	btfsc	___awdiv@divisor+1,7,c
  3143  00FA88  D002               	goto	l1442
  3144  00FA8A  D7F8               	goto	l1438
  3145  00FA8C  D000               	goto	l1442
  3146  00FA8E                     l1442:
  3147  00FA8E  90D8               	bcf	status,0,c
  3148  00FA90  3607               	rlcf	___awdiv@quotient,f,c
  3149  00FA92  3608               	rlcf	___awdiv@quotient+1,f,c
  3150  00FA94  5003               	movf	___awdiv@divisor,w,c
  3151  00FA96  5C01               	subwf	___awdiv@dividend,w,c
  3152  00FA98  5004               	movf	___awdiv@divisor+1,w,c
  3153  00FA9A  5802               	subwfb	___awdiv@dividend+1,w,c
  3154  00FA9C  A0D8               	btfss	status,0,c
  3155  00FA9E  D006               	goto	l1450
  3156  00FAA0  5003               	movf	___awdiv@divisor,w,c
  3157  00FAA2  5E01               	subwf	___awdiv@dividend,f,c
  3158  00FAA4  5004               	movf	___awdiv@divisor+1,w,c
  3159  00FAA6  5A02               	subwfb	___awdiv@dividend+1,f,c
  3160  00FAA8  8007               	bsf	___awdiv@quotient,0,c
  3161  00FAAA  D000               	goto	l1450
  3162  00FAAC                     l1450:
  3163  00FAAC  90D8               	bcf	status,0,c
  3164  00FAAE  3204               	rrcf	___awdiv@divisor+1,f,c
  3165  00FAB0  3203               	rrcf	___awdiv@divisor,f,c
  3166  00FAB2  2E05               	decfsz	___awdiv@counter,f,c
  3167  00FAB4  D7EC               	goto	l1442
  3168  00FAB6  D000               	goto	l1454
  3169  00FAB8                     l1454:
  3170  00FAB8  5006               	movf	___awdiv@sign,w,c
  3171  00FABA  B4D8               	btfsc	status,2,c
  3172  00FABC  D005               	goto	l1458
  3173  00FABE  6C07               	negf	___awdiv@quotient,c
  3174  00FAC0  1E08               	comf	___awdiv@quotient+1,f,c
  3175  00FAC2  B0D8               	btfsc	status,0,c
  3176  00FAC4  2A08               	incf	___awdiv@quotient+1,f,c
  3177  00FAC6  D000               	goto	l1458
  3178  00FAC8                     l1458:
  3179  00FAC8  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3180  00FACC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3181  00FAD0  0012               	return	
  3182  00FAD2  0012               	return		;funcret
  3183  00FAD4                     __end_of___awdiv:
  3184                           	opt stack 0
  3185  0000                     tblptru	equ	0xFF8
  3186                           prodh	equ	0xFF4
  3187                           prodl	equ	0xFF3
  3188                           wreg	equ	0xFE8
  3189                           status	equ	0xFD8
  3190                           tblptru	equ	0xFF8
  3191                           prodh	equ	0xFF4
  3192                           prodl	equ	0xFF3
  3193                           wreg	equ	0xFE8
  3194                           status	equ	0xFD8
  3195                           
  3196                           	psect	rparam
  3197  0000                     tblptru	equ	0xFF8
  3198                           prodh	equ	0xFF4
  3199                           prodl	equ	0xFF3
  3200                           wreg	equ	0xFE8
  3201                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     68      68
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_leer_temperatura
    _leer_temperatura->_calcular_temperatura
    _calcular_temperatura->___fttol
    ___fttol->___ftadd
    ___ftmul->___awtoft
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    _imprimir_temperatura->___awdiv
    _encender_G->_tiempo_encendido_segmento
    _encender_F->_tiempo_encendido_segmento
    _encender_E->_tiempo_encendido_segmento
    _encender_D->_tiempo_encendido_segmento
    _encender_C->_tiempo_encendido_segmento
    _encender_B->_tiempo_encendido_segmento
    _encender_A->_tiempo_encendido_segmento

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    7105
                                             61 COMRAM     7     7      0
               _imprimir_temperatura
                   _leer_temperatura
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _leer_temperatura                                     5     3      2    6049
                                             56 COMRAM     5     3      2
               _calcular_temperatura
 ---------------------------------------------------------------------------------
 (2) _calcular_temperatura                                 2     0      2    6026
                                             54 COMRAM     2     0      2
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     295
                                             39 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    1810
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    2384
                                             27 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    1472
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1338
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _imprimir_temperatura                                 6     4      2     894
                                              8 COMRAM     6     4      2
                            ___awdiv
                             ___wmul
                   _construir_numero
 ---------------------------------------------------------------------------------
 (2) _construir_numero                                     4     2      2     108
                                              1 COMRAM     4     2      2
                   _apagar_segmentos
                           _number_0
                           _number_1
                           _number_2
                           _number_3
                           _number_4
                           _number_5
                           _number_6
                           _number_7
                           _number_8
                           _number_9
 ---------------------------------------------------------------------------------
 (3) _number_9                                             0     0      0       0
                         _encender_A
                         _encender_B
                         _encender_C
                         _encender_D
                         _encender_F
                         _encender_G
 ---------------------------------------------------------------------------------
 (3) _number_8                                             0     0      0       0
                         _encender_A
                         _encender_B
                         _encender_C
                         _encender_D
                         _encender_E
                         _encender_F
                         _encender_G
 ---------------------------------------------------------------------------------
 (3) _number_7                                             0     0      0       0
                         _encender_A
                         _encender_B
                         _encender_C
 ---------------------------------------------------------------------------------
 (3) _number_6                                             0     0      0       0
                         _encender_A
                         _encender_C
                         _encender_D
                         _encender_E
                         _encender_F
                         _encender_G
 ---------------------------------------------------------------------------------
 (3) _number_5                                             0     0      0       0
                         _encender_A
                         _encender_C
                         _encender_D
                         _encender_F
                         _encender_G
 ---------------------------------------------------------------------------------
 (3) _number_4                                             0     0      0       0
                         _encender_B
                         _encender_C
                         _encender_F
                         _encender_G
 ---------------------------------------------------------------------------------
 (3) _number_3                                             0     0      0       0
                         _encender_A
                         _encender_B
                         _encender_C
                         _encender_D
                         _encender_G
 ---------------------------------------------------------------------------------
 (3) _number_2                                             0     0      0       0
                         _encender_A
                         _encender_B
                         _encender_D
                         _encender_E
                         _encender_G
 ---------------------------------------------------------------------------------
 (4) _encender_G                                           0     0      0       0
          _tiempo_encendido_segmento
 ---------------------------------------------------------------------------------
 (3) _number_1                                             0     0      0       0
                         _encender_B
                         _encender_C
 ---------------------------------------------------------------------------------
 (3) _number_0                                             0     0      0       0
                         _encender_A
                         _encender_B
                         _encender_C
                         _encender_D
                         _encender_E
                         _encender_F
 ---------------------------------------------------------------------------------
 (4) _encender_F                                           0     0      0       0
          _tiempo_encendido_segmento
 ---------------------------------------------------------------------------------
 (4) _encender_E                                           0     0      0       0
          _tiempo_encendido_segmento
 ---------------------------------------------------------------------------------
 (4) _encender_D                                           0     0      0       0
          _tiempo_encendido_segmento
 ---------------------------------------------------------------------------------
 (4) _encender_C                                           0     0      0       0
          _tiempo_encendido_segmento
 ---------------------------------------------------------------------------------
 (4) _encender_B                                           0     0      0       0
          _tiempo_encendido_segmento
 ---------------------------------------------------------------------------------
 (4) _encender_A                                           0     0      0       0
          _tiempo_encendido_segmento
 ---------------------------------------------------------------------------------
 (5) _tiempo_encendido_segmento                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _apagar_segmentos                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     245
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     386
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _imprimir_temperatura
     ___awdiv
     ___wmul
     _construir_numero
       _apagar_segmentos
       _number_0
         _encender_A
           _tiempo_encendido_segmento
         _encender_B
           _tiempo_encendido_segmento
         _encender_C
           _tiempo_encendido_segmento
         _encender_D
           _tiempo_encendido_segmento
         _encender_E
           _tiempo_encendido_segmento
         _encender_F
           _tiempo_encendido_segmento
       _number_1
         _encender_B
           _tiempo_encendido_segmento
         _encender_C
           _tiempo_encendido_segmento
       _number_2
         _encender_A
           _tiempo_encendido_segmento
         _encender_B
           _tiempo_encendido_segmento
         _encender_D
           _tiempo_encendido_segmento
         _encender_E
           _tiempo_encendido_segmento
         _encender_G
           _tiempo_encendido_segmento
       _number_3
         _encender_A
           _tiempo_encendido_segmento
         _encender_B
           _tiempo_encendido_segmento
         _encender_C
           _tiempo_encendido_segmento
         _encender_D
           _tiempo_encendido_segmento
         _encender_G
           _tiempo_encendido_segmento
       _number_4
         _encender_B
           _tiempo_encendido_segmento
         _encender_C
           _tiempo_encendido_segmento
         _encender_F
           _tiempo_encendido_segmento
         _encender_G
           _tiempo_encendido_segmento
       _number_5
         _encender_A
           _tiempo_encendido_segmento
         _encender_C
           _tiempo_encendido_segmento
         _encender_D
           _tiempo_encendido_segmento
         _encender_F
           _tiempo_encendido_segmento
         _encender_G
           _tiempo_encendido_segmento
       _number_6
         _encender_A
           _tiempo_encendido_segmento
         _encender_C
           _tiempo_encendido_segmento
         _encender_D
           _tiempo_encendido_segmento
         _encender_E
           _tiempo_encendido_segmento
         _encender_F
           _tiempo_encendido_segmento
         _encender_G
           _tiempo_encendido_segmento
       _number_7
         _encender_A
           _tiempo_encendido_segmento
         _encender_B
           _tiempo_encendido_segmento
         _encender_C
           _tiempo_encendido_segmento
       _number_8
         _encender_A
           _tiempo_encendido_segmento
         _encender_B
           _tiempo_encendido_segmento
         _encender_C
           _tiempo_encendido_segmento
         _encender_D
           _tiempo_encendido_segmento
         _encender_E
           _tiempo_encendido_segmento
         _encender_F
           _tiempo_encendido_segmento
         _encender_G
           _tiempo_encendido_segmento
       _number_9
         _encender_A
           _tiempo_encendido_segmento
         _encender_B
           _tiempo_encendido_segmento
         _encender_C
           _tiempo_encendido_segmento
         _encender_D
           _tiempo_encendido_segmento
         _encender_F
           _tiempo_encendido_segmento
         _encender_G
           _tiempo_encendido_segmento
   _leer_temperatura
     _calcular_temperatura
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     44      44       1       71.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BIGRAM             EBF      0       0      35        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Oct 13 21:44:57 2016

                                l46 F83E                                  l55 FB2C  
                      ___awdiv@sign 0006                 ___wmul@multiplicand 0003  
                      __CFG_CP0$OFF 000000                        ___ftadd@exp1 0027  
                      ___ftadd@exp2 0026                        ___ftadd@sign 0025  
                               l504 FF64                                 l513 FF80  
                               l460 FC06                                 l493 FEA2  
                               l489 FE78                                 u631 FE44  
                               u641 FE58                                 u911 FD42  
                               u841 FC40                                 u930 FD7C  
                               u861 FC68                                 u935 FD74  
                               wreg 000FE8                                l1210 FE86  
                              l1222 FEBC                                l1302 FCC6  
                              l1240 FF14                                l1232 FEE4  
                              l1216 FEB0                                l1312 FCF4  
                              l1402 F9EC                                l1170 FB7A  
                              l1250 FF4C                                l1242 FF20  
                              l1306 FCDC                                l1252 FF58  
                              l1244 FF28                                l1316 FD0A  
                              l1308 FCE2                                l1182 FBCE  
                              l1174 FB8A                                l1238 FF08  
                              l1502 FB12                                l1440 FA86  
                              l1432 FA66                                l1192 FC0E  
                              l1184 FBEE                                l1176 FB96  
                              l1328 F8BE                                l1360 FDD6  
                              l1512 FB52                                l1450 FAAC  
                              l1442 FA8E                                l1426 FA54  
                              l1186 FBFA                                l1178 FBB6  
                              l1258 FF9E                                l1370 FE08  
                              l1338 FD5E                                l1506 FB36  
                              l1380 F9B0                                l1268 FFD0  
                              l1284 FC80                                l1356 FDC6  
                              l1508 FB40                                l1438 FA7C  
                              l1454 FAB8                                l1390 F9CE  
                              l1382 F9B6                                l1198 FC20  
                              l1278 FC58                                l1374 FE20  
                              l1366 FDF0                                l1392 F9D4  
                              l1384 F9BC                                l1368 FDFE  
                              l1458 FAC8                                l1394 F9DA  
                              l1386 F9C2                                l1298 FCB4  
                              l1396 F9E0                                l1388 F9C8  
                              l1398 F9E6                                l1496 FAEA  
                  _construir_numero F9AA                                u1107 F746  
                              u1097 F848                                _main FAD4  
                      ___ftpack@arg 0001                        ___ftpack@exp 0004  
                     __CFG_T1DIG$ON 000000                                prodh 000FF4  
                              prodl 000FF3                                start 0000  
                     __CFG_IESO$OFF 000000                        ___ftmul@cntr 001A  
                      ___param_bank 000010                        ___ftmul@sign 001B  
                      ___fttol@exp1 0036                        ___fttol@lval 0032  
                     __CFG_PLLDIV$1 000000            __end_of_apagar_segmentos F740  
                             ?_main 0001                     __end_of___awdiv FAD4  
                   __end_of___ftadd FFF8                     __end_of___ftmul FD32  
                   ___awdiv@divisor 0003                     __end_of___fttol FE34  
                   ___awdiv@counter 0005       __size_of_imprimir_temperatura 0066  
                             _TRISA 000F92                               _TRISB 000F93  
                             _TRISC 000F94                      __CFG_FCMEN$OFF 000000  
                     ___awtoft@sign 000C                       ___ftpack@sign 0005  
                             _setup F870                               main@i 003F  
                             status 000FD8                    _leer_temperatura F838  
           __CFG_DSWDTOSC$INTOSCREF 000000                     __initialization F718  
                      __end_of_main FB6A                              ??_main 003E  
                     ___fttol@sign1 0031                       __activetblptr 000002  
       calcular_temperatura@voltage 0037                              _ADCON0 000FC2  
                            _ADCON1 000FC1                              _ADRESH 000FC4  
__size_of_tiempo_encendido_segmento 0010                              _ANCON0 000F48  
                            _ANCON1 000F49                    ___awdiv@dividend 0001  
                            ?_setup 0001                    __end_of___awtoft F8E4  
                  __end_of___ftpack FC30                      __CFG_WDTEN$OFF 000000  
                    __CFG_WPCFG$OFF 000000                      __CFG_WPDIS$OFF 000000  
                    __CFG_XINST$OFF 000000                              ___wmul F810  
                         ??___awdiv 0005                           ??___ftadd 0022  
                    __CFG_STVREN$ON 000000                           ??___ftmul 0013  
                         ??___fttol 002C                    ___awdiv@quotient 0007  
             ___ftmul@f3_as_product 0017                    __end_of_number_0 F7BE  
                  __end_of_number_1 F70E                    __end_of_number_2 F778  
                  __end_of_number_3 F78E                    __end_of_number_4 F762  
                  __end_of_number_5 F7A4                    __end_of_number_6 F7D8  
                  __end_of_number_7 F730                    __end_of_number_8 F810  
                  __end_of_number_9 F7F2                              tblptru 000FF8  
 __end_of_tiempo_encendido_segmento F750                          __accesstop 0060  
           __end_of__initialization F718                          ___ftadd@f1 001C  
                        ___ftadd@f2 001F                       ___rparam_used 000001  
                        ___awtoft@c 0009                          ___ftmul@f1 000D  
                        ___ftmul@f2 0010                          ___fttol@f1 0028  
                    __pcstackCOMRAM 0001            __end_of_construir_numero FA3E  
                     __end_of_setup F8A8                     __CFG_DSWDTPS$G2 000000  
                   __CFG_OSC$INTOSC 000000                             ??_setup 0001  
     __size_of_calcular_temperatura 0060                             ?___wmul 0001  
                         ?___awtoft 0009                           ?___ftpack 0001  
                 ?_apagar_segmentos 0001                          _encender_A F6C8  
                        _encender_B F6D2                          _encender_C F6DC  
                        _encender_D F6E6                          _encender_E F6F0  
                        _encender_F F6FA                          _encender_G F70E  
                ??_apagar_segmentos 0001            __end_of_leer_temperatura F870  
      __end_of_imprimir_temperatura F9AA                             __Hparam 0000  
                           __Lparam 0000                           ?_number_0 0001  
                         ?_number_1 0001                           ?_number_2 0001  
                         ?_number_3 0001                           ?_number_4 0001  
                         ?_number_5 0001                           ?_number_6 0001  
                         ?_number_7 0001                           ?_number_8 0001  
                         ?_number_9 0001                             ___awdiv FA3E  
                           ___ftadd FE34                     __size_of___wmul 0028  
                           ___ftmul FC30                             ___fttol FD32  
                           __pcinit F718                          ??___awtoft 000C  
                        ??___ftpack 0006                             __ramtop 0F00  
                           __ptext0 FAD4                             __ptext1 F870  
                           __ptext2 F838                             __ptext3 F8E4  
                           __ptext4 FD32                             __ptext5 FC30  
                           __ptext6 FE34                             __ptext7 F8A8  
                           __ptext8 FB6A                             __ptext9 F944  
                         _T1CONbits 000FCD                end_of_initialization F718  
                     __Lmediumconst 0000             leer_temperatura@voltage 003C  
                        ??_number_0 0002                          ??_number_1 0002  
                        ??_number_2 0002                          ??_number_3 0002  
                        ??_number_4 0002                          ??_number_5 0002  
                        ??_number_6 0002                          ??_number_7 0002  
                        ??_number_8 0002                          ??_number_9 0002  
                         _PORTBbits 000F81                    __CFG_DSBOREN$OFF 000000  
                       ?_encender_A 0001                         ?_encender_B 0001  
                       ?_encender_C 0001                         ?_encender_D 0001  
                       ?_encender_E 0001                         ?_encender_F 0001  
                       ?_encender_G 0001                    __CFG_CPUDIV$OSC1 000000  
                  __CFG_IOL1WAY$OFF 000000                 __CFG_MSSP7B_EN$MSK7 000000  
                       ___ftmul@exp 0016                      __end_of___wmul F838  
                 ?_construir_numero 0002                  ??_construir_numero 0004  
                  __CFG_DSWDTEN$OFF 000000                _imprimir_temperatura F944  
               start_initialization F718          ?_tiempo_encendido_segmento 0001  
               __size_of_encender_A 000A                 __size_of_encender_B 000A  
               __size_of_encender_C 000A                 __size_of_encender_D 000A  
               __size_of_encender_E 000A                 __size_of_encender_F 000A  
               __size_of_encender_G 000A                            ??___wmul 0005  
                  __CFG_LPT1OSC$OFF 000000        __end_of_calcular_temperatura F944  
             ?_imprimir_temperatura 0009                   __size_of___awtoft 003C  
                 __size_of___ftpack 00C6                   ?_leer_temperatura 0039  
                ??_leer_temperatura 003B           __size_of_apagar_segmentos 0010  
                          ?___awdiv 0001                            ?___ftadd 001C  
                          ?___ftmul 000D                            ?___fttol 0028  
                 __size_of_number_0 001A                   __size_of_number_1 000A  
                 __size_of_number_2 0016                   __size_of_number_3 0016  
                 __size_of_number_4 0012                   __size_of_number_5 0016  
                 __size_of_number_6 001A                   __size_of_number_7 000E  
                 __size_of_number_8 001E                   __size_of_number_9 001A  
              __CFG_RTCOSC$T1OSCREF 000000          imprimir_temperatura@decena 000D  
                    __size_of_setup 0038          imprimir_temperatura@unidad 000B  
                    ___wmul@product 0005                            _LATBbits 000F8A  
                          _LATCbits 000F8B                    __CFG_WDTPS$32768 000000  
            ??_imprimir_temperatura 000B                          _ADCON0bits 000FC2  
                 ___wmul@multiplier 0001                        ??_encender_A 0002  
                      ??_encender_B 0002                        ??_encender_C 0002  
                      ??_encender_D 0002                        ??_encender_E 0002  
                      ??_encender_F 0002                        ??_encender_G 0002  
                         main@valor 0043                _calcular_temperatura F8E4  
                          __Hrparam 0000                  __end_of_encender_A F6D2  
                __end_of_encender_B F6DC                  __end_of_encender_C F6E6  
                __end_of_encender_D F6F0                  __end_of_encender_E F6FA  
                __end_of_encender_F F704                  __end_of_encender_G F718  
                          __Lrparam 0000              construir_numero@number 0002  
                  __size_of___awdiv 0096                    __size_of___ftadd 01C4  
                  __size_of___ftmul 0102                    __size_of___fttol 0102  
                          ___awtoft F8A8                            ___ftpack FB6A  
                          __ptext10 F9AA                            __ptext11 F7D8  
                          __ptext20 F704                            __ptext12 F7F2  
                          __ptext21 F7A4                            __ptext13 F722  
                          __ptext30 F810                            __ptext22 F6FA  
                          __ptext14 F7BE                            __ptext31 FA3E  
                          __ptext23 F6F0                            __ptext15 F78E  
                          __ptext24 F6E6                            __ptext16 F750  
                          __ptext25 F6DC                            __ptext17 F778  
                          __ptext26 F6D2                            __ptext18 F762  
                          __ptext27 F6C8                            __ptext19 F70E  
                          __ptext28 F740                            __ptext29 F730  
         __size_of_construir_numero 0094               ?_calcular_temperatura 0037  
                  _apagar_segmentos F730                       __size_of_main 0096  
       ??_tiempo_encendido_segmento 0001                            _number_0 F7A4  
                          _number_1 F704                            _number_2 F762  
                          _number_3 F778                            _number_4 F750  
                          _number_5 F78E                            _number_6 F7BE  
                          _number_7 F722                            _number_8 F7F2  
                          _number_9 F7D8                     main@temperatura 0041  
                       _OSCTUNEbits 000F9B           __size_of_leer_temperatura 0038  
                        _OSCCONbits 000FD3           _tiempo_encendido_segmento F740  
                        _RTCCFGbits 000F3F              ??_calcular_temperatura 0039  
          imprimir_temperatura@temp 0009  

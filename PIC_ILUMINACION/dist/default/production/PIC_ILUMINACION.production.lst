

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Nov 01 19:19:32 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    34  0000                     
    35                           	psect	idataCOMRAM
    36  00F4EE                     __pidataCOMRAM:
    37                           	opt stack 0
    38                           
    39                           ;initializer for _anio
    40  00F4EE  000F               	dw	15
    41                           
    42                           ;initializer for _dia
    43  00F4F0  0008               	dw	8
    44                           
    45                           ;initializer for _diasem
    46  00F4F2  0003               	dw	3
    47                           
    48                           ;initializer for _hora
    49  00F4F4  0012               	dw	18
    50                           
    51                           ;initializer for _mes
    52  00F4F6  0009               	dw	9
    53                           
    54                           ;initializer for _minuto
    55  00F4F8  001E               	dw	30
    56                           
    57                           	psect	nvCOMRAM
    58  000059                     __pnvCOMRAM:
    59                           	opt stack 0
    60  000059                     _anio_d:
    61                           	opt stack 0
    62  000059                     	ds	1
    63  00005A                     _fecha_d:
    64                           	opt stack 0
    65  00005A                     	ds	1
    66  00005B                     _hora_d:
    67                           	opt stack 0
    68  00005B                     	ds	1
    69  00005C                     _mes_d:
    70                           	opt stack 0
    71  00005C                     	ds	1
    72  00005D                     _minuto_d:
    73                           	opt stack 0
    74  00005D                     	ds	1
    75  00005E                     _segundo_d:
    76                           	opt stack 0
    77  00005E                     	ds	1
    78                           
    79                           	psect	nvBANK0
    80  000094                     __pnvBANK0:
    81                           	opt stack 0
    82  000094                     _anio_u:
    83                           	opt stack 0
    84  000094                     	ds	1
    85  000095                     _dia_semana:
    86                           	opt stack 0
    87  000095                     	ds	1
    88  000096                     _fecha_u:
    89                           	opt stack 0
    90  000096                     	ds	1
    91  000097                     _hora_u:
    92                           	opt stack 0
    93  000097                     	ds	1
    94  000098                     _mes_u:
    95                           	opt stack 0
    96  000098                     	ds	1
    97  000099                     _minuto_u:
    98                           	opt stack 0
    99  000099                     	ds	1
   100  00009A                     _segundo_u:
   101                           	opt stack 0
   102  00009A                     	ds	1
   103  0000                     _ANCON0	set	3912
   104  0000                     _ANCON1	set	3913
   105  0000                     _RTCCFG	set	3903
   106  0000                     _RTCCFGbits	set	3903
   107  0000                     _ADCON0	set	4034
   108  0000                     _ADCON0bits	set	4034
   109  0000                     _ADCON1	set	4033
   110  0000                     _ADRESH	set	4036
   111  0000                     _ALRMCFGbits	set	3985
   112  0000                     _EECON2	set	4007
   113  0000                     _INTCONbits	set	4082
   114  0000                     _LATAbits	set	3977
   115  0000                     _LATBbits	set	3978
   116  0000                     _OSCCONbits	set	4051
   117  0000                     _OSCTUNEbits	set	3995
   118  0000                     _PIE3bits	set	4003
   119  0000                     _PORTAbits	set	3968
   120  0000                     _RTCVALH	set	3993
   121  0000                     _RTCVALL	set	3992
   122  0000                     _T1CONbits	set	4045
   123  0000                     _TRISA	set	3986
   124  0000                     _TRISB	set	3987
   125  0000                     _TRISC	set	3988
   126                           
   127                           ; #config settings
   128  0000                     
   129                           	psect	cinit
   130  00F5C4                     __pcinit:
   131                           	opt stack 0
   132  00F5C4                     start_initialization:
   133                           	opt stack 0
   134  00F5C4                     __initialization:
   135                           	opt stack 0
   136                           
   137                           ; Clear objects allocated to BANK0 (52 bytes)
   138  00F5C4  EE00  F060         	lfsr	0,__pbssBANK0
   139  00F5C8  0E34               	movlw	52
   140  00F5CA                     clear_0:
   141  00F5CA  6AEE               	clrf	postinc0,c
   142  00F5CC  06E8               	decf	wreg,f,c
   143  00F5CE  E1FD               	bnz	clear_0
   144                           
   145                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   146  00F5D0  6A5F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   147                           
   148                           ; Clear objects allocated to COMRAM (19 bytes)
   149  00F5D2  EE00  F03A         	lfsr	0,__pbssCOMRAM
   150  00F5D6  0E13               	movlw	19
   151  00F5D8                     clear_1:
   152  00F5D8  6AEE               	clrf	postinc0,c
   153  00F5DA  06E8               	decf	wreg,f,c
   154  00F5DC  E1FD               	bnz	clear_1
   155                           
   156                           ; Initialize objects allocated to COMRAM (12 bytes)
   157                           ; load TBLPTR registers with __pidataCOMRAM
   158  00F5DE  0EEE               	movlw	low __pidataCOMRAM
   159  00F5E0  6EF6               	movwf	tblptrl,c
   160  00F5E2  0EF4               	movlw	high __pidataCOMRAM
   161  00F5E4  6EF7               	movwf	tblptrh,c
   162  00F5E6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   163  00F5E8  6EF8               	movwf	tblptru,c
   164  00F5EA  EE00  F04D         	lfsr	0,__pdataCOMRAM
   165  00F5EE  EE10 F00C          	lfsr	1,12
   166  00F5F2                     copy_data0:
   167  00F5F2  0009               	tblrd		*+
   168  00F5F4  CFF5 FFEE          	movff	tablat,postinc0
   169  00F5F8  50E5               	movf	postdec1,w,c
   170  00F5FA  50E1               	movf	fsr1l,w,c
   171  00F5FC  E1FA               	bnz	copy_data0
   172  00F5FE                     end_of_initialization:
   173                           	opt stack 0
   174  00F5FE                     __end_of__initialization:
   175                           	opt stack 0
   176  00F5FE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   177  00F600  6EF8               	movwf	tblptru,c
   178  00F602  0100               	movlb	0
   179  00F604  EFB2  F07B         	goto	_main	;jump to C main() function
   180                           tblptru	equ	0xFF8
   181                           tblptrh	equ	0xFF7
   182                           tblptrl	equ	0xFF6
   183                           tablat	equ	0xFF5
   184                           postinc0	equ	0xFEE
   185                           wreg	equ	0xFE8
   186                           postdec1	equ	0xFE5
   187                           fsr1l	equ	0xFE1
   188                           
   189                           	psect	bitbssCOMRAM
   190  0002F8                     __pbitbssCOMRAM:
   191                           	opt stack 0
   192  0002F8                     _flag:
   193                           	opt stack 0
   194  0002F8                     	ds	1
   195                           tblptru	equ	0xFF8
   196                           tblptrh	equ	0xFF7
   197                           tblptrl	equ	0xFF6
   198                           tablat	equ	0xFF5
   199                           postinc0	equ	0xFEE
   200                           wreg	equ	0xFE8
   201                           postdec1	equ	0xFE5
   202                           fsr1l	equ	0xFE1
   203                           
   204                           	psect	bssCOMRAM
   205  00003A                     __pbssCOMRAM:
   206                           	opt stack 0
   207  00003A                     _a:
   208                           	opt stack 0
   209  00003A                     	ds	2
   210  00003C                     _b:
   211                           	opt stack 0
   212  00003C                     	ds	2
   213  00003E                     _i:
   214                           	opt stack 0
   215  00003E                     	ds	2
   216  000040                     _j:
   217                           	opt stack 0
   218  000040                     	ds	2
   219  000042                     _segundo:
   220                           	opt stack 0
   221  000042                     	ds	2
   222  000044                     _key:
   223                           	opt stack 0
   224  000044                     	ds	1
   225  000045                     _RtccDate:
   226                           	opt stack 0
   227  000045                     	ds	4
   228  000049                     _RtccTime:
   229                           	opt stack 0
   230  000049                     	ds	4
   231                           tblptru	equ	0xFF8
   232                           tblptrh	equ	0xFF7
   233                           tblptrl	equ	0xFF6
   234                           tablat	equ	0xFF5
   235                           postinc0	equ	0xFEE
   236                           wreg	equ	0xFE8
   237                           postdec1	equ	0xFE5
   238                           fsr1l	equ	0xFE1
   239                           
   240                           	psect	dataCOMRAM
   241  00004D                     __pdataCOMRAM:
   242                           	opt stack 0
   243  00004D                     _anio:
   244                           	opt stack 0
   245  00004D                     	ds	2
   246  00004F                     _dia:
   247                           	opt stack 0
   248  00004F                     	ds	2
   249  000051                     _diasem:
   250                           	opt stack 0
   251  000051                     	ds	2
   252  000053                     _hora:
   253                           	opt stack 0
   254  000053                     	ds	2
   255  000055                     _mes:
   256                           	opt stack 0
   257  000055                     	ds	2
   258  000057                     _minuto:
   259                           	opt stack 0
   260  000057                     	ds	2
   261                           tblptru	equ	0xFF8
   262                           tblptrh	equ	0xFF7
   263                           tblptrl	equ	0xFF6
   264                           tablat	equ	0xFF5
   265                           postinc0	equ	0xFEE
   266                           wreg	equ	0xFE8
   267                           postdec1	equ	0xFE5
   268                           fsr1l	equ	0xFE1
   269                           
   270                           	psect	bssBANK0
   271  000060                     __pbssBANK0:
   272                           	opt stack 0
   273  000060                     _buffer2:
   274                           	opt stack 0
   275  000060                     	ds	20
   276  000074                     _RtccAlrmTimeDate:
   277                           	opt stack 0
   278  000074                     	ds	8
   279  00007C                     _RtccTimeDate:
   280                           	opt stack 0
   281  00007C                     	ds	8
   282  000084                     _Rtcc_read_TimeDate:
   283                           	opt stack 0
   284  000084                     	ds	8
   285  00008C                     _RtccTimeVal:
   286                           	opt stack 0
   287  00008C                     	ds	4
   288  000090                     _c:
   289                           	opt stack 0
   290  000090                     	ds	2
   291  000092                     _k:
   292                           	opt stack 0
   293  000092                     	ds	2
   294                           tblptru	equ	0xFF8
   295                           tblptrh	equ	0xFF7
   296                           tblptrl	equ	0xFF6
   297                           tablat	equ	0xFF5
   298                           postinc0	equ	0xFEE
   299                           wreg	equ	0xFE8
   300                           postdec1	equ	0xFE5
   301                           fsr1l	equ	0xFE1
   302                           
   303                           	psect	cstackCOMRAM
   304  000001                     __pcstackCOMRAM:
   305                           	opt stack 0
   306  000001                     ?___awdiv:
   307                           	opt stack 0
   308  000001                     ?___ftpack:
   309                           	opt stack 0
   310  000001                     encender_led@led:
   311                           	opt stack 0
   312  000001                     apagar_led@led:
   313                           	opt stack 0
   314  000001                     RtccWriteDate@pDt:
   315                           	opt stack 0
   316  000001                     RtccWriteTime@pTm:
   317                           	opt stack 0
   318  000001                     ___awdiv@dividend:
   319                           	opt stack 0
   320  000001                     ___ftpack@arg:
   321                           	opt stack 0
   322                           
   323                           ; 3 bytes @ 0x0
   324  000001                     	ds	2
   325  000003                     ??_encender_led:
   326  000003                     ??_apagar_led:
   327  000003                     RtccWriteDate@di:
   328                           	opt stack 0
   329  000003                     RtccWriteTime@di:
   330                           	opt stack 0
   331  000003                     ___awdiv@divisor:
   332                           	opt stack 0
   333                           
   334                           ; 2 bytes @ 0x2
   335  000003                     	ds	1
   336  000004                     ___ftpack@exp:
   337                           	opt stack 0
   338                           
   339                           ; 1 bytes @ 0x3
   340  000004                     	ds	1
   341  000005                     RtccWriteDate@wasOn:
   342                           	opt stack 0
   343  000005                     RtccWriteTime@wasOn:
   344                           	opt stack 0
   345  000005                     ___awdiv@counter:
   346                           	opt stack 0
   347  000005                     ___ftpack@sign:
   348                           	opt stack 0
   349  000005                     intensidad_led@num_led:
   350                           	opt stack 0
   351                           
   352                           ; 2 bytes @ 0x4
   353  000005                     	ds	1
   354  000006                     ??___ftpack:
   355  000006                     RtccWriteDate@wasAlrm:
   356                           	opt stack 0
   357  000006                     RtccWriteTime@wasAlrm:
   358                           	opt stack 0
   359  000006                     ___awdiv@sign:
   360                           	opt stack 0
   361                           
   362                           ; 1 bytes @ 0x5
   363  000006                     	ds	1
   364  000007                     RtccWriteTime@wasWrEn:
   365                           	opt stack 0
   366  000007                     intensidad_led@intensidad:
   367                           	opt stack 0
   368  000007                     RtccWriteDate@tempYear:
   369                           	opt stack 0
   370  000007                     ___awdiv@quotient:
   371                           	opt stack 0
   372                           
   373                           ; 2 bytes @ 0x6
   374  000007                     	ds	1
   375  000008                     RtccWriteTime@tempMinSec:
   376                           	opt stack 0
   377                           
   378                           ; 2 bytes @ 0x7
   379  000008                     	ds	1
   380  000009                     ??_intensidad_led:
   381  000009                     ?___awtoft:
   382                           	opt stack 0
   383  000009                     RtccWriteDate@wasWrEn:
   384                           	opt stack 0
   385  000009                     ___awtoft@c:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0x8
   389  000009                     	ds	1
   390  00000A                     intensidad_led@i:
   391                           	opt stack 0
   392  00000A                     RtccWriteDate@tempDayMonth:
   393                           	opt stack 0
   394  00000A                     RtccWriteTime@tempHourWDay:
   395                           	opt stack 0
   396                           
   397                           ; 2 bytes @ 0x9
   398  00000A                     	ds	2
   399  00000C                     ___awtoft@sign:
   400                           	opt stack 0
   401  00000C                     activar_led@intensidad:
   402                           	opt stack 0
   403  00000C                     RtccWriteDate@tempHourWDay:
   404                           	opt stack 0
   405                           
   406                           ; 2 bytes @ 0xB
   407  00000C                     	ds	1
   408  00000D                     ?___ftmul:
   409                           	opt stack 0
   410  00000D                     ___ftmul@f1:
   411                           	opt stack 0
   412                           
   413                           ; 3 bytes @ 0xC
   414  00000D                     	ds	1
   415  00000E                     activar_led@id_led:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0xD
   419  00000E                     	ds	2
   420  000010                     ___ftmul@f2:
   421                           	opt stack 0
   422                           
   423                           ; 3 bytes @ 0xF
   424  000010                     	ds	2
   425  000012                     activar_led@contador:
   426                           	opt stack 0
   427                           
   428                           ; 2 bytes @ 0x11
   429  000012                     	ds	1
   430  000013                     ??___ftmul:
   431                           
   432                           ; 0 bytes @ 0x12
   433  000013                     	ds	3
   434  000016                     ___ftmul@exp:
   435                           	opt stack 0
   436                           
   437                           ; 1 bytes @ 0x15
   438  000016                     	ds	1
   439  000017                     ___ftmul@f3_as_product:
   440                           	opt stack 0
   441                           
   442                           ; 3 bytes @ 0x16
   443  000017                     	ds	3
   444  00001A                     ___ftmul@cntr:
   445                           	opt stack 0
   446                           
   447                           ; 1 bytes @ 0x19
   448  00001A                     	ds	1
   449  00001B                     ___ftmul@sign:
   450                           	opt stack 0
   451                           
   452                           ; 1 bytes @ 0x1A
   453  00001B                     	ds	1
   454  00001C                     ?___fttol:
   455                           	opt stack 0
   456  00001C                     ___fttol@f1:
   457                           	opt stack 0
   458                           
   459                           ; 3 bytes @ 0x1B
   460  00001C                     	ds	4
   461  000020                     ??___fttol:
   462                           
   463                           ; 0 bytes @ 0x1F
   464  000020                     	ds	5
   465  000025                     ___fttol@sign1:
   466                           	opt stack 0
   467                           
   468                           ; 1 bytes @ 0x24
   469  000025                     	ds	1
   470  000026                     ___fttol@lval:
   471                           	opt stack 0
   472                           
   473                           ; 4 bytes @ 0x25
   474  000026                     	ds	4
   475  00002A                     ___fttol@exp1:
   476                           	opt stack 0
   477                           
   478                           ; 1 bytes @ 0x29
   479  00002A                     	ds	1
   480  00002B                     ?_calcular_intensidad:
   481                           	opt stack 0
   482  00002B                     calcular_intensidad@voltage:
   483                           	opt stack 0
   484                           
   485                           ; 2 bytes @ 0x2A
   486  00002B                     	ds	2
   487  00002D                     ?_leer_intensidad:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0x2C
   491  00002D                     	ds	2
   492  00002F                     ??_leer_intensidad:
   493                           
   494                           ; 0 bytes @ 0x2E
   495  00002F                     	ds	1
   496  000030                     leer_intensidad@voltage:
   497                           	opt stack 0
   498                           
   499                           ; 2 bytes @ 0x2F
   500  000030                     	ds	2
   501  000032                     flash_leds@intensidad:
   502                           	opt stack 0
   503                           
   504                           ; 2 bytes @ 0x31
   505  000032                     	ds	2
   506  000034                     flash_leds@contador:
   507                           	opt stack 0
   508                           
   509                           ; 2 bytes @ 0x33
   510  000034                     	ds	2
   511  000036                     main@intensidad:
   512                           	opt stack 0
   513                           
   514                           ; 2 bytes @ 0x35
   515  000036                     	ds	2
   516  000038                     main@id_led:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0x37
   520  000038                     	ds	2
   521                           tblptru	equ	0xFF8
   522                           tblptrh	equ	0xFF7
   523                           tblptrl	equ	0xFF6
   524                           tablat	equ	0xFF5
   525                           postinc0	equ	0xFEE
   526                           wreg	equ	0xFE8
   527                           postdec1	equ	0xFE5
   528                           fsr1l	equ	0xFE1
   529                           
   530 ;;
   531 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   532 ;;
   533 ;; *************** function _main *****************
   534 ;; Defined at:
   535 ;;		line 183 in file "main.c"
   536 ;; Parameters:    Size  Location     Type
   537 ;;		None
   538 ;; Auto vars:     Size  Location     Type
   539 ;;  id_led          2   55[COMRAM] int 
   540 ;;  intensidad      2   53[COMRAM] int 
   541 ;; Return value:  Size  Location     Type
   542 ;;                  2  198[None  ] int 
   543 ;; Registers used:
   544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   545 ;; Tracked objects:
   546 ;;		On entry : 0/0
   547 ;;		On exit  : 0/0
   548 ;;		Unchanged: 0/0
   549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   551 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   553 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   554 ;;Total ram usage:        4 bytes
   555 ;; Hardware stack levels required when called:    4
   556 ;; This function calls:
   557 ;;		_Setup
   558 ;;		_activar_led
   559 ;;		_flash_leds
   560 ;;		_leer_intensidad
   561 ;; This function is called by:
   562 ;;		Startup code after reset
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           	psect	text0
   567  00F764                     __ptext0:
   568                           	opt stack 0
   569  00F764                     _main:
   570                           	opt stack 27
   571                           
   572                           ;main.c: 185: Setup();
   573                           
   574                           ; BSR set to: 15
   575                           ;incstack = 0
   576  00F764  EC04  F07B         	call	_Setup	;wreg free
   577                           
   578                           ;main.c: 186: int intensidad = 32;
   579  00F768  0E00               	movlw	0
   580  00F76A  6E37               	movwf	main@intensidad+1,c
   581  00F76C  0E20               	movlw	32
   582  00F76E  6E36               	movwf	main@intensidad,c
   583                           
   584                           ;main.c: 187: int id_led = 4;
   585  00F770  0E00               	movlw	0
   586  00F772  6E39               	movwf	main@id_led+1,c
   587  00F774  0E04               	movlw	4
   588  00F776  6E38               	movwf	main@id_led,c
   589  00F778  D000               	goto	l2186
   590  00F77A                     l2186:
   591                           
   592                           ;main.c: 190: {
   593                           ;main.c: 192: intensidad = leer_intensidad();
   594  00F77A  EC86  F07A         	call	_leer_intensidad	;wreg free
   595  00F77E  C02D  F036         	movff	?_leer_intensidad,main@intensidad
   596  00F782  C02E  F037         	movff	?_leer_intensidad+1,main@intensidad+1
   597                           
   598                           ;main.c: 193: if (PORTAbits.RA1 == 0){
   599  00F786  B280               	btfsc	3968,1,c	;volatile
   600  00F788  D7F8               	goto	l2186
   601                           
   602                           ;main.c: 194: if (intensidad > 28)
   603  00F78A  BE37               	btfsc	main@intensidad+1,7,c
   604  00F78C  D00F               	goto	l2194
   605  00F78E  5037               	movf	main@intensidad+1,w,c
   606  00F790  E104               	bnz	u1480
   607  00F792  0E1D               	movlw	29
   608  00F794  5C36               	subwf	main@intensidad,w,c
   609  00F796  A0D8               	btfss	status,0,c
   610  00F798  D009               	goto	l2194
   611  00F79A                     u1480:
   612                           
   613                           ;main.c: 195: flash_leds(leer_intensidad());
   614  00F79A  EC86  F07A         	call	_leer_intensidad	;wreg free
   615  00F79E  C02D  F032         	movff	?_leer_intensidad,flash_leds@intensidad
   616  00F7A2  C02E  F033         	movff	?_leer_intensidad+1,flash_leds@intensidad+1
   617  00F7A6  ECE3  F07B         	call	_flash_leds	;wreg free
   618  00F7AA  D7E7               	goto	l2186
   619  00F7AC                     l2194:
   620                           
   621                           ;main.c: 196: else
   622                           ;main.c: 197: activar_led(intensidad, &id_led);
   623  00F7AC  C036  F00C         	movff	main@intensidad,activar_led@intensidad
   624  00F7B0  C037  F00D         	movff	main@intensidad+1,activar_led@intensidad+1
   625  00F7B4  0E38               	movlw	low main@id_led
   626  00F7B6  6E0E               	movwf	activar_led@id_led,c
   627  00F7B8  0E00               	movlw	high main@id_led
   628  00F7BA  6E0F               	movwf	activar_led@id_led+1,c
   629  00F7BC  EC71  F07C         	call	_activar_led	;wreg free
   630  00F7C0  D7DC               	goto	l2186
   631                           
   632                           ;main.c: 198: }
   633                           ;main.c: 199: }
   634                           ;main.c: 200: return 0;
   635                           ;	Return value of _main is never used
   636  00F7C2  EF00  F000         	goto	start
   637  00F7C6                     __end_of_main:
   638                           	opt stack 0
   639                           tblptru	equ	0xFF8
   640                           tblptrh	equ	0xFF7
   641                           tblptrl	equ	0xFF6
   642                           tablat	equ	0xFF5
   643                           postinc0	equ	0xFEE
   644                           wreg	equ	0xFE8
   645                           postdec1	equ	0xFE5
   646                           fsr1l	equ	0xFE1
   647                           status	equ	0xFD8
   648                           
   649 ;; *************** function _leer_intensidad *****************
   650 ;; Defined at:
   651 ;;		line 162 in file "main.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;		None
   654 ;; Auto vars:     Size  Location     Type
   655 ;;  voltage         2   47[COMRAM] int 
   656 ;; Return value:  Size  Location     Type
   657 ;;                  2   44[COMRAM] int 
   658 ;; Registers used:
   659 ;;		wreg, status,2, status,0, cstack
   660 ;; Tracked objects:
   661 ;;		On entry : 0/0
   662 ;;		On exit  : 0/0
   663 ;;		Unchanged: 0/0
   664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   665 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   666 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   667 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   668 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   669 ;;Total ram usage:        5 bytes
   670 ;; Hardware stack levels used:    1
   671 ;; Hardware stack levels required when called:    3
   672 ;; This function calls:
   673 ;;		_calcular_intensidad
   674 ;; This function is called by:
   675 ;;		_main
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           	psect	text1
   680  00F50C                     __ptext1:
   681                           	opt stack 0
   682  00F50C                     _leer_intensidad:
   683                           	opt stack 27
   684                           
   685                           ;main.c: 163: ADCON0bits.ADON = 1;
   686                           
   687                           ;incstack = 0
   688  00F50C  80C2               	bsf	4034,0,c	;volatile
   689                           
   690                           ;main.c: 164: ADCON0bits.GO = 1;
   691  00F50E  82C2               	bsf	4034,1,c	;volatile
   692                           
   693                           ;main.c: 165: int voltage;
   694                           ;main.c: 167: while (ADCON0bits.GO);
   695  00F510  D000               	goto	l193
   696  00F512                     l193:
   697  00F512  B2C2               	btfsc	4034,1,c	;volatile
   698  00F514  D7FE               	goto	l193
   699                           
   700                           ;main.c: 168: _delay((unsigned long)((1)*(8000000/4000.0)));
   701  00F516  0E03               	movlw	3
   702  00F518  6E2F               	movwf	??_leer_intensidad& (0+255),c
   703  00F51A  0E98               	movlw	152
   704  00F51C                     u1497:
   705  00F51C  2EE8               	decfsz	wreg,f,c
   706  00F51E  D7FE               	goto	u1497
   707  00F520  2E2F               	decfsz	??_leer_intensidad& (0+255),f,c
   708  00F522  D7FC               	goto	u1497
   709                           
   710                           ;main.c: 169: voltage = ADRESH;
   711  00F524  CFC4 F030          	movff	4036,leer_intensidad@voltage	;volatile
   712  00F528  6A31               	clrf	leer_intensidad@voltage+1,c
   713                           
   714                           ;main.c: 170: ADCON0bits.ADON = 0;
   715  00F52A  90C2               	bcf	4034,0,c	;volatile
   716                           
   717                           ;main.c: 171: return calcular_intensidad(voltage);
   718  00F52C  C030  F02B         	movff	leer_intensidad@voltage,calcular_intensidad@voltage
   719  00F530  C031  F02C         	movff	leer_intensidad@voltage+1,calcular_intensidad@voltage+1
   720  00F534  ECC0  F07A         	call	_calcular_intensidad	;wreg free
   721  00F538  C02B  F02D         	movff	?_calcular_intensidad,?_leer_intensidad
   722  00F53C  C02C  F02E         	movff	?_calcular_intensidad+1,?_leer_intensidad+1
   723  00F540  0012               	return	
   724  00F542  0012               	return		;funcret
   725  00F544                     __end_of_leer_intensidad:
   726                           	opt stack 0
   727                           tblptru	equ	0xFF8
   728                           tblptrh	equ	0xFF7
   729                           tblptrl	equ	0xFF6
   730                           tablat	equ	0xFF5
   731                           postinc0	equ	0xFEE
   732                           wreg	equ	0xFE8
   733                           postdec1	equ	0xFE5
   734                           fsr1l	equ	0xFE1
   735                           status	equ	0xFD8
   736                           
   737 ;; *************** function _calcular_intensidad *****************
   738 ;; Defined at:
   739 ;;		line 158 in file "main.c"
   740 ;; Parameters:    Size  Location     Type
   741 ;;  voltage         2   42[COMRAM] int 
   742 ;; Auto vars:     Size  Location     Type
   743 ;;		None
   744 ;; Return value:  Size  Location     Type
   745 ;;                  2   42[COMRAM] int 
   746 ;; Registers used:
   747 ;;		wreg, status,2, status,0, cstack
   748 ;; Tracked objects:
   749 ;;		On entry : 0/0
   750 ;;		On exit  : 0/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   753 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   756 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   757 ;;Total ram usage:        2 bytes
   758 ;; Hardware stack levels used:    1
   759 ;; Hardware stack levels required when called:    2
   760 ;; This function calls:
   761 ;;		___awtoft
   762 ;;		___ftmul
   763 ;;		___fttol
   764 ;; This function is called by:
   765 ;;		_leer_intensidad
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           	psect	text2
   770  00F580                     __ptext2:
   771                           	opt stack 0
   772  00F580                     _calcular_intensidad:
   773                           	opt stack 27
   774                           
   775                           ;main.c: 159: return (int)(0.125 * voltage);
   776                           
   777                           ;incstack = 0
   778  00F580  0E00               	movlw	0
   779  00F582  6E10               	movwf	___ftmul@f2,c
   780  00F584  0E00               	movlw	0
   781  00F586  6E11               	movwf	___ftmul@f2+1,c
   782  00F588  0E3E               	movlw	62
   783  00F58A  6E12               	movwf	___ftmul@f2+2,c
   784  00F58C  C02B  F009         	movff	calcular_intensidad@voltage,___awtoft@c
   785  00F590  C02C  F00A         	movff	calcular_intensidad@voltage+1,___awtoft@c+1
   786  00F594  ECA2  F07A         	call	___awtoft	;wreg free
   787  00F598  C009  F00D         	movff	?___awtoft,___ftmul@f1
   788  00F59C  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
   789  00F5A0  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
   790  00F5A4  EC21  F07D         	call	___ftmul	;wreg free
   791  00F5A8  C00D  F01C         	movff	?___ftmul,___fttol@f1
   792  00F5AC  C00E  F01D         	movff	?___ftmul+1,___fttol@f1+1
   793  00F5B0  C00F  F01E         	movff	?___ftmul+2,___fttol@f1+2
   794  00F5B4  ECA2  F07D         	call	___fttol	;wreg free
   795  00F5B8  C01C  F02B         	movff	?___fttol,?_calcular_intensidad
   796  00F5BC  C01D  F02C         	movff	?___fttol+1,?_calcular_intensidad+1
   797  00F5C0  0012               	return	
   798  00F5C2  0012               	return		;funcret
   799  00F5C4                     __end_of_calcular_intensidad:
   800                           	opt stack 0
   801                           tblptru	equ	0xFF8
   802                           tblptrh	equ	0xFF7
   803                           tblptrl	equ	0xFF6
   804                           tablat	equ	0xFF5
   805                           postinc0	equ	0xFEE
   806                           wreg	equ	0xFE8
   807                           postdec1	equ	0xFE5
   808                           fsr1l	equ	0xFE1
   809                           status	equ	0xFD8
   810                           
   811 ;; *************** function ___fttol *****************
   812 ;; Defined at:
   813 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;  f1              3   27[COMRAM] float 
   816 ;; Auto vars:     Size  Location     Type
   817 ;;  lval            4   37[COMRAM] unsigned long 
   818 ;;  exp1            1   41[COMRAM] unsigned char 
   819 ;;  sign1           1   36[COMRAM] unsigned char 
   820 ;; Return value:  Size  Location     Type
   821 ;;                  4   27[COMRAM] long 
   822 ;; Registers used:
   823 ;;		wreg, status,2, status,0
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   829 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   830 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   831 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   832 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   833 ;;Total ram usage:       15 bytes
   834 ;; Hardware stack levels used:    1
   835 ;; This function calls:
   836 ;;		Nothing
   837 ;; This function is called by:
   838 ;;		_calcular_intensidad
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           	psect	text3
   843  00FB44                     __ptext3:
   844                           	opt stack 0
   845  00FB44                     ___fttol:
   846                           	opt stack 28
   847                           
   848                           ;incstack = 0
   849  00FB44  C01E  F020         	movff	___fttol@f1+2,??___fttol
   850  00FB48  6A21               	clrf	(??___fttol+1)& (0+255),c
   851  00FB4A  6A22               	clrf	(??___fttol+2)& (0+255),c
   852  00FB4C  341D               	rlcf	___fttol@f1+1,w,c
   853  00FB4E  3620               	rlcf	??___fttol& (0+255),f,c
   854  00FB50  E301               	bnc	u1191
   855  00FB52  8021               	bsf	(??___fttol+1)& (0+255),0,c
   856  00FB54                     u1191:
   857  00FB54  5020               	movf	??___fttol,w,c
   858  00FB56  6E2A               	movwf	___fttol@exp1,c
   859  00FB58  502A               	movf	___fttol@exp1,w,c
   860  00FB5A  A4D8               	btfss	status,2,c
   861  00FB5C  D009               	goto	l1854
   862  00FB5E  0E00               	movlw	0
   863  00FB60  6E1C               	movwf	?___fttol,c
   864  00FB62  0E00               	movlw	0
   865  00FB64  6E1D               	movwf	?___fttol+1,c
   866  00FB66  0E00               	movlw	0
   867  00FB68  6E1E               	movwf	?___fttol+2,c
   868  00FB6A  0E00               	movlw	0
   869  00FB6C  6E1F               	movwf	?___fttol+3,c
   870  00FB6E  0012               	return	
   871  00FB70                     l1854:
   872  00FB70  0E17               	movlw	23
   873  00FB72  6E20               	movwf	??___fttol& (0+255),c
   874  00FB74  C01C  F021         	movff	___fttol@f1,??___fttol+1
   875  00FB78  C01D  F022         	movff	___fttol@f1+1,??___fttol+2
   876  00FB7C  C01E  F023         	movff	___fttol@f1+2,??___fttol+3
   877  00FB80  2820               	incf	??___fttol,w,c
   878  00FB82  6E24               	movwf	(??___fttol+4)& (0+255),c
   879  00FB84  D004               	goto	u1210
   880  00FB86                     u1215:
   881  00FB86  90D8               	bcf	status,0,c
   882  00FB88  3223               	rrcf	??___fttol+3,f,c
   883  00FB8A  3222               	rrcf	??___fttol+2,f,c
   884  00FB8C  3221               	rrcf	??___fttol+1,f,c
   885  00FB8E                     u1210:
   886  00FB8E  2E24               	decfsz	(??___fttol+4)& (0+255),f,c
   887  00FB90  D7FA               	goto	u1215
   888  00FB92  5021               	movf	??___fttol+1,w,c
   889  00FB94  6E25               	movwf	___fttol@sign1,c
   890  00FB96  8E1D               	bsf	___fttol@f1+1,7,c
   891  00FB98  0EFF               	movlw	255
   892  00FB9A  161C               	andwf	___fttol@f1,f,c
   893  00FB9C  0EFF               	movlw	255
   894  00FB9E  161D               	andwf	___fttol@f1+1,f,c
   895  00FBA0  0E00               	movlw	0
   896  00FBA2  161E               	andwf	___fttol@f1+2,f,c
   897  00FBA4  501C               	movf	___fttol@f1,w,c
   898  00FBA6  6E26               	movwf	___fttol@lval,c
   899  00FBA8  501D               	movf	___fttol@f1+1,w,c
   900  00FBAA  6E27               	movwf	___fttol@lval+1,c
   901  00FBAC  501E               	movf	___fttol@f1+2,w,c
   902  00FBAE  6E28               	movwf	___fttol@lval+2,c
   903  00FBB0  6A29               	clrf	___fttol@lval+3,c
   904  00FBB2  0E8E               	movlw	142
   905  00FBB4  5E2A               	subwf	___fttol@exp1,f,c
   906  00FBB6  AE2A               	btfss	___fttol@exp1,7,c
   907  00FBB8  D017               	goto	l1876
   908  00FBBA  502A               	movf	___fttol@exp1,w,c
   909  00FBBC  0A80               	xorlw	128
   910  00FBBE  0F8F               	addlw	143
   911  00FBC0  B0D8               	btfsc	status,0,c
   912  00FBC2  D00A               	goto	l1872
   913  00FBC4  0E00               	movlw	0
   914  00FBC6  6E1C               	movwf	?___fttol,c
   915  00FBC8  0E00               	movlw	0
   916  00FBCA  6E1D               	movwf	?___fttol+1,c
   917  00FBCC  0E00               	movlw	0
   918  00FBCE  6E1E               	movwf	?___fttol+2,c
   919  00FBD0  0E00               	movlw	0
   920  00FBD2  6E1F               	movwf	?___fttol+3,c
   921  00FBD4  0012               	return	
   922  00FBD6  D000               	goto	l1872
   923  00FBD8                     l1872:
   924  00FBD8  90D8               	bcf	status,0,c
   925  00FBDA  3229               	rrcf	___fttol@lval+3,f,c
   926  00FBDC  3228               	rrcf	___fttol@lval+2,f,c
   927  00FBDE  3227               	rrcf	___fttol@lval+1,f,c
   928  00FBE0  3226               	rrcf	___fttol@lval,f,c
   929  00FBE2  3E2A               	incfsz	___fttol@exp1,f,c
   930  00FBE4  D7F9               	goto	l1872
   931  00FBE6  D019               	goto	l1886
   932  00FBE8                     l1876:
   933  00FBE8  0E17               	movlw	23
   934  00FBEA  642A               	cpfsgt	___fttol@exp1,c
   935  00FBEC  D011               	goto	l1884
   936  00FBEE  0E00               	movlw	0
   937  00FBF0  6E1C               	movwf	?___fttol,c
   938  00FBF2  0E00               	movlw	0
   939  00FBF4  6E1D               	movwf	?___fttol+1,c
   940  00FBF6  0E00               	movlw	0
   941  00FBF8  6E1E               	movwf	?___fttol+2,c
   942  00FBFA  0E00               	movlw	0
   943  00FBFC  6E1F               	movwf	?___fttol+3,c
   944  00FBFE  0012               	return	
   945  00FC00  D007               	goto	l1884
   946  00FC02                     l1882:
   947  00FC02  90D8               	bcf	status,0,c
   948  00FC04  3626               	rlcf	___fttol@lval,f,c
   949  00FC06  3627               	rlcf	___fttol@lval+1,f,c
   950  00FC08  3628               	rlcf	___fttol@lval+2,f,c
   951  00FC0A  3629               	rlcf	___fttol@lval+3,f,c
   952  00FC0C  062A               	decf	___fttol@exp1,f,c
   953  00FC0E  D000               	goto	l1884
   954  00FC10                     l1884:
   955  00FC10  502A               	movf	___fttol@exp1,w,c
   956  00FC12  B4D8               	btfsc	status,2,c
   957  00FC14  D002               	goto	l1886
   958  00FC16  D7F5               	goto	l1882
   959  00FC18  D000               	goto	l1886
   960  00FC1A                     l1886:
   961  00FC1A  5025               	movf	___fttol@sign1,w,c
   962  00FC1C  B4D8               	btfsc	status,2,c
   963  00FC1E  D009               	goto	l1890
   964  00FC20  1E29               	comf	___fttol@lval+3,f,c
   965  00FC22  1E28               	comf	___fttol@lval+2,f,c
   966  00FC24  1E27               	comf	___fttol@lval+1,f,c
   967  00FC26  6C26               	negf	___fttol@lval,c
   968  00FC28  0E00               	movlw	0
   969  00FC2A  2227               	addwfc	___fttol@lval+1,f,c
   970  00FC2C  2228               	addwfc	___fttol@lval+2,f,c
   971  00FC2E  2229               	addwfc	___fttol@lval+3,f,c
   972  00FC30  D000               	goto	l1890
   973  00FC32                     l1890:
   974  00FC32  C026  F01C         	movff	___fttol@lval,?___fttol
   975  00FC36  C027  F01D         	movff	___fttol@lval+1,?___fttol+1
   976  00FC3A  C028  F01E         	movff	___fttol@lval+2,?___fttol+2
   977  00FC3E  C029  F01F         	movff	___fttol@lval+3,?___fttol+3
   978  00FC42  0012               	return	
   979  00FC44  0012               	return		;funcret
   980  00FC46                     __end_of___fttol:
   981                           	opt stack 0
   982                           tblptru	equ	0xFF8
   983                           tblptrh	equ	0xFF7
   984                           tblptrl	equ	0xFF6
   985                           tablat	equ	0xFF5
   986                           postinc0	equ	0xFEE
   987                           wreg	equ	0xFE8
   988                           postdec1	equ	0xFE5
   989                           fsr1l	equ	0xFE1
   990                           status	equ	0xFD8
   991                           
   992 ;; *************** function ___ftmul *****************
   993 ;; Defined at:
   994 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;  f1              3   12[COMRAM] float 
   997 ;;  f2              3   15[COMRAM] float 
   998 ;; Auto vars:     Size  Location     Type
   999 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  1000 ;;  sign            1   26[COMRAM] unsigned char 
  1001 ;;  cntr            1   25[COMRAM] unsigned char 
  1002 ;;  exp             1   21[COMRAM] unsigned char 
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  3   12[COMRAM] float 
  1005 ;; Registers used:
  1006 ;;		wreg, status,2, status,0, cstack
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1012 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1013 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1014 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1015 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1016 ;;Total ram usage:       15 bytes
  1017 ;; Hardware stack levels used:    1
  1018 ;; Hardware stack levels required when called:    1
  1019 ;; This function calls:
  1020 ;;		___ftpack
  1021 ;; This function is called by:
  1022 ;;		_calcular_intensidad
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           	psect	text4
  1027  00FA42                     __ptext4:
  1028                           	opt stack 0
  1029  00FA42                     ___ftmul:
  1030                           	opt stack 27
  1031                           
  1032                           ;incstack = 0
  1033  00FA42  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  1034  00FA46  6A14               	clrf	(??___ftmul+1)& (0+255),c
  1035  00FA48  6A15               	clrf	(??___ftmul+2)& (0+255),c
  1036  00FA4A  340E               	rlcf	___ftmul@f1+1,w,c
  1037  00FA4C  3613               	rlcf	??___ftmul& (0+255),f,c
  1038  00FA4E  E301               	bnc	u1061
  1039  00FA50  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  1040  00FA52                     u1061:
  1041  00FA52  5013               	movf	??___ftmul,w,c
  1042  00FA54  6E16               	movwf	___ftmul@exp,c
  1043  00FA56  5016               	movf	___ftmul@exp,w,c
  1044  00FA58  A4D8               	btfss	status,2,c
  1045  00FA5A  D007               	goto	l1750
  1046  00FA5C  0E00               	movlw	0
  1047  00FA5E  6E0D               	movwf	?___ftmul,c
  1048  00FA60  0E00               	movlw	0
  1049  00FA62  6E0E               	movwf	?___ftmul+1,c
  1050  00FA64  0E00               	movlw	0
  1051  00FA66  6E0F               	movwf	?___ftmul+2,c
  1052  00FA68  0012               	return	
  1053  00FA6A                     l1750:
  1054  00FA6A  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  1055  00FA6E  6A14               	clrf	(??___ftmul+1)& (0+255),c
  1056  00FA70  6A15               	clrf	(??___ftmul+2)& (0+255),c
  1057  00FA72  3411               	rlcf	___ftmul@f2+1,w,c
  1058  00FA74  3613               	rlcf	??___ftmul& (0+255),f,c
  1059  00FA76  E301               	bnc	u1081
  1060  00FA78  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  1061  00FA7A                     u1081:
  1062  00FA7A  5013               	movf	??___ftmul,w,c
  1063  00FA7C  6E1B               	movwf	___ftmul@sign,c
  1064  00FA7E  501B               	movf	___ftmul@sign,w,c
  1065  00FA80  A4D8               	btfss	status,2,c
  1066  00FA82  D007               	goto	l1756
  1067  00FA84  0E00               	movlw	0
  1068  00FA86  6E0D               	movwf	?___ftmul,c
  1069  00FA88  0E00               	movlw	0
  1070  00FA8A  6E0E               	movwf	?___ftmul+1,c
  1071  00FA8C  0E00               	movlw	0
  1072  00FA8E  6E0F               	movwf	?___ftmul+2,c
  1073  00FA90  0012               	return	
  1074  00FA92                     l1756:
  1075  00FA92  501B               	movf	___ftmul@sign,w,c
  1076  00FA94  0F7B               	addlw	123
  1077  00FA96  2616               	addwf	___ftmul@exp,f,c
  1078  00FA98  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  1079  00FA9C  5012               	movf	___ftmul@f2+2,w,c
  1080  00FA9E  1A1B               	xorwf	___ftmul@sign,f,c
  1081  00FAA0  0E80               	movlw	128
  1082  00FAA2  161B               	andwf	___ftmul@sign,f,c
  1083  00FAA4  8E0E               	bsf	___ftmul@f1+1,7,c
  1084  00FAA6  8E11               	bsf	___ftmul@f2+1,7,c
  1085  00FAA8  0EFF               	movlw	255
  1086  00FAAA  1610               	andwf	___ftmul@f2,f,c
  1087  00FAAC  0EFF               	movlw	255
  1088  00FAAE  1611               	andwf	___ftmul@f2+1,f,c
  1089  00FAB0  0E00               	movlw	0
  1090  00FAB2  1612               	andwf	___ftmul@f2+2,f,c
  1091  00FAB4  0E00               	movlw	0
  1092  00FAB6  6E17               	movwf	___ftmul@f3_as_product,c
  1093  00FAB8  0E00               	movlw	0
  1094  00FABA  6E18               	movwf	___ftmul@f3_as_product+1,c
  1095  00FABC  0E00               	movlw	0
  1096  00FABE  6E19               	movwf	___ftmul@f3_as_product+2,c
  1097  00FAC0  0E07               	movlw	7
  1098  00FAC2  6E1A               	movwf	___ftmul@cntr,c
  1099  00FAC4  D000               	goto	l1770
  1100  00FAC6                     l1770:
  1101  00FAC6  A00D               	btfss	___ftmul@f1,0,c
  1102  00FAC8  D007               	goto	l1774
  1103  00FACA  5010               	movf	___ftmul@f2,w,c
  1104  00FACC  2617               	addwf	___ftmul@f3_as_product,f,c
  1105  00FACE  5011               	movf	___ftmul@f2+1,w,c
  1106  00FAD0  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  1107  00FAD2  5012               	movf	___ftmul@f2+2,w,c
  1108  00FAD4  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  1109  00FAD6  D000               	goto	l1774
  1110  00FAD8                     l1774:
  1111  00FAD8  90D8               	bcf	status,0,c
  1112  00FADA  320F               	rrcf	___ftmul@f1+2,f,c
  1113  00FADC  320E               	rrcf	___ftmul@f1+1,f,c
  1114  00FADE  320D               	rrcf	___ftmul@f1,f,c
  1115  00FAE0  90D8               	bcf	status,0,c
  1116  00FAE2  3610               	rlcf	___ftmul@f2,f,c
  1117  00FAE4  3611               	rlcf	___ftmul@f2+1,f,c
  1118  00FAE6  3612               	rlcf	___ftmul@f2+2,f,c
  1119  00FAE8  2E1A               	decfsz	___ftmul@cntr,f,c
  1120  00FAEA  D7ED               	goto	l1770
  1121  00FAEC  D000               	goto	l1778
  1122  00FAEE                     l1778:
  1123  00FAEE  0E09               	movlw	9
  1124  00FAF0  6E1A               	movwf	___ftmul@cntr,c
  1125  00FAF2  D000               	goto	l1780
  1126  00FAF4                     l1780:
  1127  00FAF4  A00D               	btfss	___ftmul@f1,0,c
  1128  00FAF6  D007               	goto	l1784
  1129  00FAF8  5010               	movf	___ftmul@f2,w,c
  1130  00FAFA  2617               	addwf	___ftmul@f3_as_product,f,c
  1131  00FAFC  5011               	movf	___ftmul@f2+1,w,c
  1132  00FAFE  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  1133  00FB00  5012               	movf	___ftmul@f2+2,w,c
  1134  00FB02  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  1135  00FB04  D000               	goto	l1784
  1136  00FB06                     l1784:
  1137  00FB06  90D8               	bcf	status,0,c
  1138  00FB08  320F               	rrcf	___ftmul@f1+2,f,c
  1139  00FB0A  320E               	rrcf	___ftmul@f1+1,f,c
  1140  00FB0C  320D               	rrcf	___ftmul@f1,f,c
  1141  00FB0E  90D8               	bcf	status,0,c
  1142  00FB10  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  1143  00FB12  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  1144  00FB14  3217               	rrcf	___ftmul@f3_as_product,f,c
  1145  00FB16  2E1A               	decfsz	___ftmul@cntr,f,c
  1146  00FB18  D7ED               	goto	l1780
  1147  00FB1A  D000               	goto	l1788
  1148  00FB1C                     l1788:
  1149  00FB1C  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  1150  00FB20  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1151  00FB24  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1152  00FB28  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  1153  00FB2C  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  1154  00FB30  ECBE  F07C         	call	___ftpack	;wreg free
  1155  00FB34  C001  F00D         	movff	?___ftpack,?___ftmul
  1156  00FB38  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  1157  00FB3C  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  1158  00FB40  0012               	return	
  1159  00FB42  0012               	return		;funcret
  1160  00FB44                     __end_of___ftmul:
  1161                           	opt stack 0
  1162                           tblptru	equ	0xFF8
  1163                           tblptrh	equ	0xFF7
  1164                           tblptrl	equ	0xFF6
  1165                           tablat	equ	0xFF5
  1166                           postinc0	equ	0xFEE
  1167                           wreg	equ	0xFE8
  1168                           postdec1	equ	0xFE5
  1169                           fsr1l	equ	0xFE1
  1170                           status	equ	0xFD8
  1171                           
  1172 ;; *************** function ___awtoft *****************
  1173 ;; Defined at:
  1174 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtoft.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;  c               2    8[COMRAM] int 
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;  sign            1   11[COMRAM] unsigned char 
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  3    8[COMRAM] float 
  1181 ;; Registers used:
  1182 ;;		wreg, status,2, status,0, cstack
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1188 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1189 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1191 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1192 ;;Total ram usage:        4 bytes
  1193 ;; Hardware stack levels used:    1
  1194 ;; Hardware stack levels required when called:    1
  1195 ;; This function calls:
  1196 ;;		___ftpack
  1197 ;; This function is called by:
  1198 ;;		_calcular_intensidad
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           	psect	text5
  1203  00F544                     __ptext5:
  1204                           	opt stack 0
  1205  00F544                     ___awtoft:
  1206                           	opt stack 27
  1207                           
  1208                           ;incstack = 0
  1209  00F544  0E00               	movlw	0
  1210  00F546  6E0C               	movwf	___awtoft@sign,c
  1211  00F548  AE0A               	btfss	___awtoft@c+1,7,c
  1212  00F54A  D007               	goto	l1844
  1213  00F54C  6C09               	negf	___awtoft@c,c
  1214  00F54E  1E0A               	comf	___awtoft@c+1,f,c
  1215  00F550  B0D8               	btfsc	status,0,c
  1216  00F552  2A0A               	incf	___awtoft@c+1,f,c
  1217  00F554  0E01               	movlw	1
  1218  00F556  6E0C               	movwf	___awtoft@sign,c
  1219  00F558  D000               	goto	l1844
  1220  00F55A                     l1844:
  1221  00F55A  C009  F001         	movff	___awtoft@c,___ftpack@arg
  1222  00F55E  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  1223  00F562  6A03               	clrf	___ftpack@arg+2,c
  1224  00F564  0E8E               	movlw	142
  1225  00F566  6E04               	movwf	___ftpack@exp,c
  1226  00F568  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  1227  00F56C  ECBE  F07C         	call	___ftpack	;wreg free
  1228  00F570  C001  F009         	movff	?___ftpack,?___awtoft
  1229  00F574  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  1230  00F578  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  1231  00F57C  0012               	return	
  1232  00F57E  0012               	return		;funcret
  1233  00F580                     __end_of___awtoft:
  1234                           	opt stack 0
  1235                           tblptru	equ	0xFF8
  1236                           tblptrh	equ	0xFF7
  1237                           tblptrl	equ	0xFF6
  1238                           tablat	equ	0xFF5
  1239                           postinc0	equ	0xFEE
  1240                           wreg	equ	0xFE8
  1241                           postdec1	equ	0xFE5
  1242                           fsr1l	equ	0xFE1
  1243                           status	equ	0xFD8
  1244                           
  1245 ;; *************** function ___ftpack *****************
  1246 ;; Defined at:
  1247 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;  arg             3    0[COMRAM] unsigned um
  1250 ;;  exp             1    3[COMRAM] unsigned char 
  1251 ;;  sign            1    4[COMRAM] unsigned char 
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;		None
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  3    0[COMRAM] float 
  1256 ;; Registers used:
  1257 ;;		wreg, status,2, status,0
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1263 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1265 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1266 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1267 ;;Total ram usage:        8 bytes
  1268 ;; Hardware stack levels used:    1
  1269 ;; This function calls:
  1270 ;;		Nothing
  1271 ;; This function is called by:
  1272 ;;		___awtoft
  1273 ;;		___ftmul
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277                           	psect	text6
  1278  00F97C                     __ptext6:
  1279                           	opt stack 0
  1280  00F97C                     ___ftpack:
  1281                           	opt stack 27
  1282                           
  1283                           ;incstack = 0
  1284  00F97C  5004               	movf	___ftpack@exp,w,c
  1285  00F97E  B4D8               	btfsc	status,2,c
  1286  00F980  D005               	goto	l1556
  1287  00F982  5001               	movf	___ftpack@arg,w,c
  1288  00F984  1002               	iorwf	___ftpack@arg+1,w,c
  1289  00F986  1003               	iorwf	___ftpack@arg+2,w,c
  1290  00F988  A4D8               	btfss	status,2,c
  1291  00F98A  D00E               	goto	l1562
  1292  00F98C                     l1556:
  1293  00F98C  0E00               	movlw	0
  1294  00F98E  6E01               	movwf	?___ftpack,c
  1295  00F990  0E00               	movlw	0
  1296  00F992  6E02               	movwf	?___ftpack+1,c
  1297  00F994  0E00               	movlw	0
  1298  00F996  6E03               	movwf	?___ftpack+2,c
  1299  00F998  0012               	return	
  1300  00F99A  D006               	goto	l1562
  1301  00F99C                     l1560:
  1302  00F99C  2A04               	incf	___ftpack@exp,f,c
  1303  00F99E  90D8               	bcf	status,0,c
  1304  00F9A0  3203               	rrcf	___ftpack@arg+2,f,c
  1305  00F9A2  3202               	rrcf	___ftpack@arg+1,f,c
  1306  00F9A4  3201               	rrcf	___ftpack@arg,f,c
  1307  00F9A6  D000               	goto	l1562
  1308  00F9A8                     l1562:
  1309  00F9A8  0E00               	movlw	0
  1310  00F9AA  1401               	andwf	___ftpack@arg,w,c
  1311  00F9AC  6E06               	movwf	??___ftpack& (0+255),c
  1312  00F9AE  0E00               	movlw	0
  1313  00F9B0  1402               	andwf	___ftpack@arg+1,w,c
  1314  00F9B2  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1315  00F9B4  0EFE               	movlw	254
  1316  00F9B6  1403               	andwf	___ftpack@arg+2,w,c
  1317  00F9B8  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1318  00F9BA  5006               	movf	??___ftpack,w,c
  1319  00F9BC  1007               	iorwf	??___ftpack+1,w,c
  1320  00F9BE  1008               	iorwf	??___ftpack+2,w,c
  1321  00F9C0  B4D8               	btfsc	status,2,c
  1322  00F9C2  D00E               	goto	l1568
  1323  00F9C4  D7EB               	goto	l1560
  1324  00F9C6  D00C               	goto	l1568
  1325  00F9C8                     l1564:
  1326  00F9C8  2A04               	incf	___ftpack@exp,f,c
  1327  00F9CA  0E01               	movlw	1
  1328  00F9CC  2601               	addwf	___ftpack@arg,f,c
  1329  00F9CE  0E00               	movlw	0
  1330  00F9D0  2202               	addwfc	___ftpack@arg+1,f,c
  1331  00F9D2  0E00               	movlw	0
  1332  00F9D4  2203               	addwfc	___ftpack@arg+2,f,c
  1333  00F9D6  90D8               	bcf	status,0,c
  1334  00F9D8  3203               	rrcf	___ftpack@arg+2,f,c
  1335  00F9DA  3202               	rrcf	___ftpack@arg+1,f,c
  1336  00F9DC  3201               	rrcf	___ftpack@arg,f,c
  1337  00F9DE  D000               	goto	l1568
  1338  00F9E0                     l1568:
  1339  00F9E0  0E00               	movlw	0
  1340  00F9E2  1401               	andwf	___ftpack@arg,w,c
  1341  00F9E4  6E06               	movwf	??___ftpack& (0+255),c
  1342  00F9E6  0E00               	movlw	0
  1343  00F9E8  1402               	andwf	___ftpack@arg+1,w,c
  1344  00F9EA  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1345  00F9EC  0EFF               	movlw	255
  1346  00F9EE  1403               	andwf	___ftpack@arg+2,w,c
  1347  00F9F0  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1348  00F9F2  5006               	movf	??___ftpack,w,c
  1349  00F9F4  1007               	iorwf	??___ftpack+1,w,c
  1350  00F9F6  1008               	iorwf	??___ftpack+2,w,c
  1351  00F9F8  B4D8               	btfsc	status,2,c
  1352  00F9FA  D008               	goto	l1572
  1353  00F9FC  D7E5               	goto	l1564
  1354  00F9FE  D006               	goto	l1572
  1355  00FA00                     l1570:
  1356  00FA00  0604               	decf	___ftpack@exp,f,c
  1357  00FA02  90D8               	bcf	status,0,c
  1358  00FA04  3601               	rlcf	___ftpack@arg,f,c
  1359  00FA06  3602               	rlcf	___ftpack@arg+1,f,c
  1360  00FA08  3603               	rlcf	___ftpack@arg+2,f,c
  1361  00FA0A  D000               	goto	l1572
  1362  00FA0C                     l1572:
  1363  00FA0C  BE02               	btfsc	___ftpack@arg+1,7,c
  1364  00FA0E  D004               	goto	l630
  1365  00FA10  0E02               	movlw	2
  1366  00FA12  6004               	cpfslt	___ftpack@exp,c
  1367  00FA14  D7F5               	goto	l1570
  1368  00FA16  D000               	goto	l630
  1369  00FA18                     l630:
  1370  00FA18  B004               	btfsc	___ftpack@exp,0,c
  1371  00FA1A  D002               	goto	l1578
  1372  00FA1C  9E02               	bcf	___ftpack@arg+1,7,c
  1373  00FA1E  D000               	goto	l1578
  1374  00FA20                     l1578:
  1375  00FA20  90D8               	bcf	status,0,c
  1376  00FA22  3204               	rrcf	___ftpack@exp,f,c
  1377  00FA24  5004               	movf	___ftpack@exp,w,c
  1378  00FA26  1203               	iorwf	___ftpack@arg+2,f,c
  1379  00FA28  5005               	movf	___ftpack@sign,w,c
  1380  00FA2A  B4D8               	btfsc	status,2,c
  1381  00FA2C  D002               	goto	l1584
  1382  00FA2E  8E03               	bsf	___ftpack@arg+2,7,c
  1383  00FA30  D000               	goto	l1584
  1384  00FA32                     l1584:
  1385  00FA32  C001  F001         	movff	___ftpack@arg,?___ftpack
  1386  00FA36  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  1387  00FA3A  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  1388  00FA3E  0012               	return	
  1389  00FA40  0012               	return		;funcret
  1390  00FA42                     __end_of___ftpack:
  1391                           	opt stack 0
  1392                           tblptru	equ	0xFF8
  1393                           tblptrh	equ	0xFF7
  1394                           tblptrl	equ	0xFF6
  1395                           tablat	equ	0xFF5
  1396                           postinc0	equ	0xFEE
  1397                           wreg	equ	0xFE8
  1398                           postdec1	equ	0xFE5
  1399                           fsr1l	equ	0xFE1
  1400                           status	equ	0xFD8
  1401                           
  1402 ;; *************** function _flash_leds *****************
  1403 ;; Defined at:
  1404 ;;		line 129 in file "main.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;  intensidad      2   49[COMRAM] int 
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  contador        2   51[COMRAM] int 
  1409 ;; Return value:  Size  Location     Type
  1410 ;;		None               void
  1411 ;; Registers used:
  1412 ;;		wreg, status,2, status,0, cstack
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1418 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1419 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1421 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1422 ;;Total ram usage:        4 bytes
  1423 ;; Hardware stack levels used:    1
  1424 ;; Hardware stack levels required when called:    2
  1425 ;; This function calls:
  1426 ;;		_apagar_led
  1427 ;;		_intensidad_led
  1428 ;; This function is called by:
  1429 ;;		_main
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433                           	psect	text7
  1434  00F7C6                     __ptext7:
  1435                           	opt stack 0
  1436  00F7C6                     _flash_leds:
  1437                           	opt stack 28
  1438                           
  1439                           ;main.c: 130: int contador = 0;
  1440                           
  1441                           ;incstack = 0
  1442  00F7C6  0E00               	movlw	0
  1443  00F7C8  6E35               	movwf	flash_leds@contador+1,c
  1444  00F7CA  0E00               	movlw	0
  1445  00F7CC  6E34               	movwf	flash_leds@contador,c
  1446                           
  1447                           ;main.c: 131: while (contador < 15){
  1448  00F7CE  D033               	goto	l1992
  1449  00F7D0                     l1988:
  1450                           
  1451                           ;main.c: 132: intensidad_led(4,intensidad);
  1452  00F7D0  0E00               	movlw	0
  1453  00F7D2  6E06               	movwf	intensidad_led@num_led+1,c
  1454  00F7D4  0E04               	movlw	4
  1455  00F7D6  6E05               	movwf	intensidad_led@num_led,c
  1456  00F7D8  C032  F007         	movff	flash_leds@intensidad,intensidad_led@intensidad
  1457  00F7DC  C033  F008         	movff	flash_leds@intensidad+1,intensidad_led@intensidad+1
  1458  00F7E0  EC53  F07B         	call	_intensidad_led	;wreg free
  1459                           
  1460                           ;main.c: 133: intensidad_led(5,intensidad);
  1461  00F7E4  0E00               	movlw	0
  1462  00F7E6  6E06               	movwf	intensidad_led@num_led+1,c
  1463  00F7E8  0E05               	movlw	5
  1464  00F7EA  6E05               	movwf	intensidad_led@num_led,c
  1465  00F7EC  C032  F007         	movff	flash_leds@intensidad,intensidad_led@intensidad
  1466  00F7F0  C033  F008         	movff	flash_leds@intensidad+1,intensidad_led@intensidad+1
  1467  00F7F4  EC53  F07B         	call	_intensidad_led	;wreg free
  1468                           
  1469                           ;main.c: 134: intensidad_led(6,intensidad);
  1470  00F7F8  0E00               	movlw	0
  1471  00F7FA  6E06               	movwf	intensidad_led@num_led+1,c
  1472  00F7FC  0E06               	movlw	6
  1473  00F7FE  6E05               	movwf	intensidad_led@num_led,c
  1474  00F800  C032  F007         	movff	flash_leds@intensidad,intensidad_led@intensidad
  1475  00F804  C033  F008         	movff	flash_leds@intensidad+1,intensidad_led@intensidad+1
  1476  00F808  EC53  F07B         	call	_intensidad_led	;wreg free
  1477                           
  1478                           ;main.c: 135: apagar_led(4);
  1479  00F80C  0E00               	movlw	0
  1480  00F80E  6E02               	movwf	apagar_led@led+1,c
  1481  00F810  0E04               	movlw	4
  1482  00F812  6E01               	movwf	apagar_led@led,c
  1483  00F814  EC29  F07B         	call	_apagar_led	;wreg free
  1484                           
  1485                           ;main.c: 136: apagar_led(5);
  1486  00F818  0E00               	movlw	0
  1487  00F81A  6E02               	movwf	apagar_led@led+1,c
  1488  00F81C  0E05               	movlw	5
  1489  00F81E  6E01               	movwf	apagar_led@led,c
  1490  00F820  EC29  F07B         	call	_apagar_led	;wreg free
  1491                           
  1492                           ;main.c: 137: apagar_led(6);
  1493  00F824  0E00               	movlw	0
  1494  00F826  6E02               	movwf	apagar_led@led+1,c
  1495  00F828  0E06               	movlw	6
  1496  00F82A  6E01               	movwf	apagar_led@led,c
  1497  00F82C  EC29  F07B         	call	_apagar_led	;wreg free
  1498                           
  1499                           ;main.c: 138: contador++;
  1500  00F830  4A34               	infsnz	flash_leds@contador,f,c
  1501  00F832  2A35               	incf	flash_leds@contador+1,f,c
  1502  00F834  D000               	goto	l1992
  1503  00F836                     l1992:
  1504  00F836  BE35               	btfsc	flash_leds@contador+1,7,c
  1505  00F838  D7CB               	goto	l1988
  1506  00F83A  5035               	movf	flash_leds@contador+1,w,c
  1507  00F83C  E106               	bnz	l180
  1508  00F83E  0E0F               	movlw	15
  1509  00F840  5C34               	subwf	flash_leds@contador,w,c
  1510  00F842  B0D8               	btfsc	status,0,c
  1511  00F844  0012               	return	
  1512  00F846  D7C4               	goto	l1988
  1513  00F848  0012               	return	
  1514  00F84A                     l180:
  1515  00F84A  0012               	return		;funcret
  1516  00F84C                     __end_of_flash_leds:
  1517                           	opt stack 0
  1518                           tblptru	equ	0xFF8
  1519                           tblptrh	equ	0xFF7
  1520                           tblptrl	equ	0xFF6
  1521                           tablat	equ	0xFF5
  1522                           postinc0	equ	0xFEE
  1523                           wreg	equ	0xFE8
  1524                           postdec1	equ	0xFE5
  1525                           fsr1l	equ	0xFE1
  1526                           status	equ	0xFD8
  1527                           
  1528 ;; *************** function _activar_led *****************
  1529 ;; Defined at:
  1530 ;;		line 142 in file "main.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;  intensidad      2   11[COMRAM] int 
  1533 ;;  id_led          2   13[COMRAM] PTR int 
  1534 ;;		 -> main@id_led(2), 
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;  contador        2   17[COMRAM] int 
  1537 ;; Return value:  Size  Location     Type
  1538 ;;		None               void
  1539 ;; Registers used:
  1540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1541 ;; Tracked objects:
  1542 ;;		On entry : 0/0
  1543 ;;		On exit  : 0/0
  1544 ;;		Unchanged: 0/0
  1545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1546 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1547 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1548 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1549 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1550 ;;Total ram usage:        8 bytes
  1551 ;; Hardware stack levels used:    1
  1552 ;; Hardware stack levels required when called:    2
  1553 ;; This function calls:
  1554 ;;		_apagar_led
  1555 ;;		_intensidad_led
  1556 ;; This function is called by:
  1557 ;;		_main
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           	psect	text8
  1562  00F8E2                     __ptext8:
  1563                           	opt stack 0
  1564  00F8E2                     _activar_led:
  1565                           	opt stack 28
  1566                           
  1567                           ;main.c: 144: int contador = 0;
  1568                           
  1569                           ;incstack = 0
  1570  00F8E2  0E00               	movlw	0
  1571  00F8E4  6E13               	movwf	activar_led@contador+1,c
  1572  00F8E6  0E00               	movlw	0
  1573  00F8E8  6E12               	movwf	activar_led@contador,c
  1574                           
  1575                           ;main.c: 146: while (contador < 15){
  1576  00F8EA  D011               	goto	l2000
  1577  00F8EC                     l1996:
  1578                           
  1579                           ;main.c: 147: intensidad_led((*id_led),intensidad);
  1580  00F8EC  C00E  FFD9         	movff	activar_led@id_led,fsr2l
  1581  00F8F0  C00F  FFDA         	movff	activar_led@id_led+1,fsr2h
  1582  00F8F4  CFDE F005          	movff	postinc2,intensidad_led@num_led
  1583  00F8F8  CFDD F006          	movff	postdec2,intensidad_led@num_led+1
  1584  00F8FC  C00C  F007         	movff	activar_led@intensidad,intensidad_led@intensidad
  1585  00F900  C00D  F008         	movff	activar_led@intensidad+1,intensidad_led@intensidad+1
  1586  00F904  EC53  F07B         	call	_intensidad_led	;wreg free
  1587                           
  1588                           ;main.c: 148: contador++;
  1589  00F908  4A12               	infsnz	activar_led@contador,f,c
  1590  00F90A  2A13               	incf	activar_led@contador+1,f,c
  1591  00F90C  D000               	goto	l2000
  1592  00F90E                     l2000:
  1593  00F90E  BE13               	btfsc	activar_led@contador+1,7,c
  1594  00F910  D7ED               	goto	l1996
  1595  00F912  5013               	movf	activar_led@contador+1,w,c
  1596  00F914  E106               	bnz	l2002
  1597  00F916  0E0F               	movlw	15
  1598  00F918  5C12               	subwf	activar_led@contador,w,c
  1599  00F91A  B0D8               	btfsc	status,0,c
  1600  00F91C  D002               	goto	l2002
  1601  00F91E  D7E6               	goto	l1996
  1602  00F920  D000               	goto	l2002
  1603  00F922                     l2002:
  1604                           
  1605                           ;main.c: 149: }
  1606                           ;main.c: 150: contador = 0;
  1607  00F922  0E00               	movlw	0
  1608  00F924  6E13               	movwf	activar_led@contador+1,c
  1609  00F926  0E00               	movlw	0
  1610  00F928  6E12               	movwf	activar_led@contador,c
  1611                           
  1612                           ;main.c: 151: (*id_led)++;
  1613  00F92A  C00E  FFD9         	movff	activar_led@id_led,fsr2l
  1614  00F92E  C00F  FFDA         	movff	activar_led@id_led+1,fsr2h
  1615  00F932  2ADE               	incf	postinc2,f,c
  1616  00F934  0E00               	movlw	0
  1617  00F936  22DD               	addwfc	postdec2,f,c
  1618                           
  1619                           ;main.c: 152: if ((*id_led) > 6)
  1620  00F938  C00E  FFD9         	movff	activar_led@id_led,fsr2l
  1621  00F93C  C00F  FFDA         	movff	activar_led@id_led+1,fsr2h
  1622  00F940  0E01               	movlw	1
  1623  00F942  BEDB               	btfsc	plusw2,7,c
  1624  00F944  D010               	goto	l2010
  1625  00F946  0E01               	movlw	1
  1626  00F948  50DB               	movf	plusw2,w,c
  1627  00F94A  E104               	bnz	u1310
  1628  00F94C  0E07               	movlw	7
  1629  00F94E  5CDE               	subwf	postinc2,w,c
  1630  00F950  A0D8               	btfss	status,0,c
  1631  00F952  D009               	goto	l2010
  1632  00F954                     u1310:
  1633                           
  1634                           ;main.c: 153: (*id_led) = 4;
  1635  00F954  C00E  FFD9         	movff	activar_led@id_led,fsr2l
  1636  00F958  C00F  FFDA         	movff	activar_led@id_led+1,fsr2h
  1637  00F95C  0E04               	movlw	4
  1638  00F95E  6EDE               	movwf	postinc2,c
  1639  00F960  0E00               	movlw	0
  1640  00F962  6EDD               	movwf	postdec2,c
  1641  00F964  D000               	goto	l2010
  1642  00F966                     l2010:
  1643                           
  1644                           ;main.c: 154: apagar_led((*id_led));
  1645  00F966  C00E  FFD9         	movff	activar_led@id_led,fsr2l
  1646  00F96A  C00F  FFDA         	movff	activar_led@id_led+1,fsr2h
  1647  00F96E  CFDE F001          	movff	postinc2,apagar_led@led
  1648  00F972  CFDD F002          	movff	postdec2,apagar_led@led+1
  1649  00F976  EC29  F07B         	call	_apagar_led	;wreg free
  1650  00F97A  0012               	return		;funcret
  1651  00F97C                     __end_of_activar_led:
  1652                           	opt stack 0
  1653                           tblptru	equ	0xFF8
  1654                           tblptrh	equ	0xFF7
  1655                           tblptrl	equ	0xFF6
  1656                           tablat	equ	0xFF5
  1657                           postinc0	equ	0xFEE
  1658                           wreg	equ	0xFE8
  1659                           postdec1	equ	0xFE5
  1660                           fsr1l	equ	0xFE1
  1661                           postinc2	equ	0xFDE
  1662                           postdec2	equ	0xFDD
  1663                           plusw2	equ	0xFDB
  1664                           fsr2h	equ	0xFDA
  1665                           fsr2l	equ	0xFD9
  1666                           status	equ	0xFD8
  1667                           
  1668 ;; *************** function _intensidad_led *****************
  1669 ;; Defined at:
  1670 ;;		line 93 in file "main.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;  num_led         2    4[COMRAM] int 
  1673 ;;  intensidad      2    6[COMRAM] int 
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  i               2    9[COMRAM] int 
  1676 ;; Return value:  Size  Location     Type
  1677 ;;		None               void
  1678 ;; Registers used:
  1679 ;;		wreg, status,2, status,0, cstack
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1685 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1686 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1687 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1688 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1689 ;;Total ram usage:        7 bytes
  1690 ;; Hardware stack levels used:    1
  1691 ;; Hardware stack levels required when called:    1
  1692 ;; This function calls:
  1693 ;;		_apagar_led
  1694 ;;		_encender_led
  1695 ;; This function is called by:
  1696 ;;		_flash_leds
  1697 ;;		_activar_led
  1698 ;;		_leer_teclado
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           	psect	text9
  1703  00F6A6                     __ptext9:
  1704                           	opt stack 0
  1705  00F6A6                     _intensidad_led:
  1706                           	opt stack 28
  1707                           
  1708                           ;main.c: 95: int i = 1;
  1709                           
  1710                           ;incstack = 0
  1711  00F6A6  0E00               	movlw	0
  1712  00F6A8  6E0B               	movwf	intensidad_led@i+1,c
  1713  00F6AA  0E01               	movlw	1
  1714  00F6AC  6E0A               	movwf	intensidad_led@i,c
  1715                           
  1716                           ;main.c: 97: while (i < 32 + 1){
  1717  00F6AE  D01F               	goto	l1956
  1718  00F6B0                     l1946:
  1719                           
  1720                           ;main.c: 98: if (i < intensidad)
  1721  00F6B0  5007               	movf	intensidad_led@intensidad,w,c
  1722  00F6B2  5C0A               	subwf	intensidad_led@i,w,c
  1723  00F6B4  500B               	movf	intensidad_led@i+1,w,c
  1724  00F6B6  0A80               	xorlw	128
  1725  00F6B8  6E09               	movwf	??_intensidad_led& (0+255),c
  1726  00F6BA  5008               	movf	intensidad_led@intensidad+1,w,c
  1727  00F6BC  0A80               	xorlw	128
  1728  00F6BE  5809               	subwfb	??_intensidad_led& (0+255),w,c
  1729  00F6C0  B0D8               	btfsc	status,0,c
  1730  00F6C2  D007               	goto	l1950
  1731                           
  1732                           ;main.c: 99: encender_led(num_led);
  1733  00F6C4  C005  F001         	movff	intensidad_led@num_led,encender_led@led
  1734  00F6C8  C006  F002         	movff	intensidad_led@num_led+1,encender_led@led+1
  1735  00F6CC  EC82  F07B         	call	_encender_led	;wreg free
  1736  00F6D0  D007               	goto	l1952
  1737  00F6D2                     l1950:
  1738                           
  1739                           ;main.c: 100: else
  1740                           ;main.c: 101: apagar_led(num_led);
  1741  00F6D2  C005  F001         	movff	intensidad_led@num_led,apagar_led@led
  1742  00F6D6  C006  F002         	movff	intensidad_led@num_led+1,apagar_led@led+1
  1743  00F6DA  EC29  F07B         	call	_apagar_led	;wreg free
  1744  00F6DE  D000               	goto	l1952
  1745  00F6E0                     l1952:
  1746                           
  1747                           ;main.c: 103: _delay((unsigned long)((500)*(8000000/4000000.0)));
  1748  00F6E0  0EFA               	movlw	250
  1749  00F6E2                     u1507:
  1750  00F6E2  F000               	nop	
  1751  00F6E4  2EE8               	decfsz	wreg,f,c
  1752  00F6E6  D7FD               	goto	u1507
  1753                           
  1754                           ;main.c: 104: i++;
  1755  00F6E8  4A0A               	infsnz	intensidad_led@i,f,c
  1756  00F6EA  2A0B               	incf	intensidad_led@i+1,f,c
  1757  00F6EC  D000               	goto	l1956
  1758  00F6EE                     l1956:
  1759  00F6EE  BE0B               	btfsc	intensidad_led@i+1,7,c
  1760  00F6F0  D7DF               	goto	l1946
  1761  00F6F2  500B               	movf	intensidad_led@i+1,w,c
  1762  00F6F4  E106               	bnz	l165
  1763  00F6F6  0E21               	movlw	33
  1764  00F6F8  5C0A               	subwf	intensidad_led@i,w,c
  1765  00F6FA  B0D8               	btfsc	status,0,c
  1766  00F6FC  0012               	return	
  1767  00F6FE  D7D8               	goto	l1946
  1768  00F700  0012               	return	
  1769  00F702                     l165:
  1770  00F702  0012               	return		;funcret
  1771  00F704                     __end_of_intensidad_led:
  1772                           	opt stack 0
  1773                           tblptru	equ	0xFF8
  1774                           tblptrh	equ	0xFF7
  1775                           tblptrl	equ	0xFF6
  1776                           tablat	equ	0xFF5
  1777                           postinc0	equ	0xFEE
  1778                           wreg	equ	0xFE8
  1779                           postdec1	equ	0xFE5
  1780                           fsr1l	equ	0xFE1
  1781                           postinc2	equ	0xFDE
  1782                           postdec2	equ	0xFDD
  1783                           plusw2	equ	0xFDB
  1784                           fsr2h	equ	0xFDA
  1785                           fsr2l	equ	0xFD9
  1786                           status	equ	0xFD8
  1787                           
  1788 ;; *************** function _encender_led *****************
  1789 ;; Defined at:
  1790 ;;		line 71 in file "main.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;  led             2    0[COMRAM] int 
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;		None
  1795 ;; Return value:  Size  Location     Type
  1796 ;;		None               void
  1797 ;; Registers used:
  1798 ;;		wreg, status,2, status,0
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1804 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1806 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1807 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1808 ;;Total ram usage:        4 bytes
  1809 ;; Hardware stack levels used:    1
  1810 ;; This function calls:
  1811 ;;		Nothing
  1812 ;; This function is called by:
  1813 ;;		_intensidad_led
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           	psect	text10
  1818  00F704                     __ptext10:
  1819                           	opt stack 0
  1820  00F704                     _encender_led:
  1821                           	opt stack 28
  1822                           
  1823                           ;main.c: 72: switch(led){
  1824                           
  1825                           ;incstack = 0
  1826  00F704  D012               	goto	l1728
  1827  00F706                     l139:
  1828  00F706  848A               	bsf	3978,2,c	;volatile
  1829  00F708  928A               	bcf	3978,1,c	;volatile
  1830  00F70A  908A               	bcf	3978,0,c	;volatile
  1831  00F70C  0012               	return	
  1832  00F70E                     l141:
  1833  00F70E  828A               	bsf	3978,1,c	;volatile
  1834  00F710  948A               	bcf	3978,2,c	;volatile
  1835  00F712  908A               	bcf	3978,0,c	;volatile
  1836  00F714  0012               	return	
  1837  00F716                     l142:
  1838  00F716  808A               	bsf	3978,0,c	;volatile
  1839  00F718  948A               	bcf	3978,2,c	;volatile
  1840  00F71A  928A               	bcf	3978,1,c	;volatile
  1841  00F71C  0012               	return	
  1842  00F71E                     l143:
  1843  00F71E  8689               	bsf	3977,3,c	;volatile
  1844  00F720  0012               	return	
  1845  00F722                     l144:
  1846  00F722  8E89               	bsf	3977,7,c	;volatile
  1847  00F724  0012               	return	
  1848  00F726                     l145:
  1849  00F726  8A89               	bsf	3977,5,c	;volatile
  1850                           
  1851                           ;main.c: 79: }
  1852  00F728  0012               	return	
  1853  00F72A                     l1728:
  1854  00F72A  C001  F003         	movff	encender_led@led,??_encender_led
  1855  00F72E  C002  F004         	movff	encender_led@led+1,??_encender_led+1
  1856                           
  1857                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1858                           ; Switch size 1, requested type "space"
  1859                           ; Number of cases is 1, Range of values is 0 to 0
  1860                           ; switch strategies available:
  1861                           ; Name         Instructions Cycles
  1862                           ; simple_byte            4     3 (average)
  1863                           ;	Chosen strategy is simple_byte
  1864  00F732  5004               	movf	??_encender_led+1,w,c
  1865  00F734  0A00               	xorlw	0	; case 0
  1866  00F736  A4D8               	btfss	status,2,c
  1867  00F738  0012               	return	
  1868                           
  1869                           ; Switch size 1, requested type "space"
  1870                           ; Number of cases is 6, Range of values is 1 to 6
  1871                           ; switch strategies available:
  1872                           ; Name         Instructions Cycles
  1873                           ; simple_byte           19    10 (average)
  1874                           ;	Chosen strategy is simple_byte
  1875  00F73A  5003               	movf	??_encender_led,w,c
  1876  00F73C  0A01               	xorlw	1	; case 1
  1877  00F73E  B4D8               	btfsc	status,2,c
  1878  00F740  D7E2               	goto	l139
  1879  00F742  0A03               	xorlw	3	; case 2
  1880  00F744  B4D8               	btfsc	status,2,c
  1881  00F746  D7E3               	goto	l141
  1882  00F748  0A01               	xorlw	1	; case 3
  1883  00F74A  B4D8               	btfsc	status,2,c
  1884  00F74C  D7E4               	goto	l142
  1885  00F74E  0A07               	xorlw	7	; case 4
  1886  00F750  B4D8               	btfsc	status,2,c
  1887  00F752  D7E5               	goto	l143
  1888  00F754  0A01               	xorlw	1	; case 5
  1889  00F756  B4D8               	btfsc	status,2,c
  1890  00F758  D7E4               	goto	l144
  1891  00F75A  0A03               	xorlw	3	; case 6
  1892  00F75C  A4D8               	btfss	status,2,c
  1893  00F75E  0012               	return	
  1894  00F760  D7E2               	goto	l145
  1895  00F762  0012               	return		;funcret
  1896  00F764                     __end_of_encender_led:
  1897                           	opt stack 0
  1898                           tblptru	equ	0xFF8
  1899                           tblptrh	equ	0xFF7
  1900                           tblptrl	equ	0xFF6
  1901                           tablat	equ	0xFF5
  1902                           postinc0	equ	0xFEE
  1903                           wreg	equ	0xFE8
  1904                           postdec1	equ	0xFE5
  1905                           fsr1l	equ	0xFE1
  1906                           postinc2	equ	0xFDE
  1907                           postdec2	equ	0xFDD
  1908                           plusw2	equ	0xFDB
  1909                           fsr2h	equ	0xFDA
  1910                           fsr2l	equ	0xFD9
  1911                           status	equ	0xFD8
  1912                           
  1913 ;; *************** function _apagar_led *****************
  1914 ;; Defined at:
  1915 ;;		line 82 in file "main.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;  led             2    0[COMRAM] int 
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;		None
  1920 ;; Return value:  Size  Location     Type
  1921 ;;		None               void
  1922 ;; Registers used:
  1923 ;;		wreg, status,2, status,0
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1929 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1931 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1932 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1933 ;;Total ram usage:        4 bytes
  1934 ;; Hardware stack levels used:    1
  1935 ;; This function calls:
  1936 ;;		Nothing
  1937 ;; This function is called by:
  1938 ;;		_intensidad_led
  1939 ;;		_flash_leds
  1940 ;;		_activar_led
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944                           	psect	text11
  1945  00F652                     __ptext11:
  1946                           	opt stack 0
  1947  00F652                     _apagar_led:
  1948                           	opt stack 28
  1949                           
  1950                           ;main.c: 83: switch(led){
  1951                           
  1952                           ;incstack = 0
  1953  00F652  D00C               	goto	l1738
  1954  00F654                     l150:
  1955  00F654  948A               	bcf	3978,2,c	;volatile
  1956  00F656  0012               	return	
  1957  00F658                     l152:
  1958  00F658  928A               	bcf	3978,1,c	;volatile
  1959  00F65A  0012               	return	
  1960  00F65C                     l153:
  1961  00F65C  908A               	bcf	3978,0,c	;volatile
  1962  00F65E  0012               	return	
  1963  00F660                     l154:
  1964  00F660  9689               	bcf	3977,3,c	;volatile
  1965  00F662  0012               	return	
  1966  00F664                     l155:
  1967  00F664  9E89               	bcf	3977,7,c	;volatile
  1968  00F666  0012               	return	
  1969  00F668                     l156:
  1970  00F668  9A89               	bcf	3977,5,c	;volatile
  1971                           
  1972                           ;main.c: 90: }
  1973  00F66A  0012               	return	
  1974  00F66C                     l1738:
  1975  00F66C  C001  F003         	movff	apagar_led@led,??_apagar_led
  1976  00F670  C002  F004         	movff	apagar_led@led+1,??_apagar_led+1
  1977                           
  1978                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1979                           ; Switch size 1, requested type "space"
  1980                           ; Number of cases is 1, Range of values is 0 to 0
  1981                           ; switch strategies available:
  1982                           ; Name         Instructions Cycles
  1983                           ; simple_byte            4     3 (average)
  1984                           ;	Chosen strategy is simple_byte
  1985  00F674  5004               	movf	??_apagar_led+1,w,c
  1986  00F676  0A00               	xorlw	0	; case 0
  1987  00F678  A4D8               	btfss	status,2,c
  1988  00F67A  0012               	return	
  1989                           
  1990                           ; Switch size 1, requested type "space"
  1991                           ; Number of cases is 6, Range of values is 1 to 6
  1992                           ; switch strategies available:
  1993                           ; Name         Instructions Cycles
  1994                           ; simple_byte           19    10 (average)
  1995                           ;	Chosen strategy is simple_byte
  1996  00F67C  5003               	movf	??_apagar_led,w,c
  1997  00F67E  0A01               	xorlw	1	; case 1
  1998  00F680  B4D8               	btfsc	status,2,c
  1999  00F682  D7E8               	goto	l150
  2000  00F684  0A03               	xorlw	3	; case 2
  2001  00F686  B4D8               	btfsc	status,2,c
  2002  00F688  D7E7               	goto	l152
  2003  00F68A  0A01               	xorlw	1	; case 3
  2004  00F68C  B4D8               	btfsc	status,2,c
  2005  00F68E  D7E6               	goto	l153
  2006  00F690  0A07               	xorlw	7	; case 4
  2007  00F692  B4D8               	btfsc	status,2,c
  2008  00F694  D7E5               	goto	l154
  2009  00F696  0A01               	xorlw	1	; case 5
  2010  00F698  B4D8               	btfsc	status,2,c
  2011  00F69A  D7E4               	goto	l155
  2012  00F69C  0A03               	xorlw	3	; case 6
  2013  00F69E  A4D8               	btfss	status,2,c
  2014  00F6A0  0012               	return	
  2015  00F6A2  D7E2               	goto	l156
  2016  00F6A4  0012               	return		;funcret
  2017  00F6A6                     __end_of_apagar_led:
  2018                           	opt stack 0
  2019                           tblptru	equ	0xFF8
  2020                           tblptrh	equ	0xFF7
  2021                           tblptrl	equ	0xFF6
  2022                           tablat	equ	0xFF5
  2023                           postinc0	equ	0xFEE
  2024                           wreg	equ	0xFE8
  2025                           postdec1	equ	0xFE5
  2026                           fsr1l	equ	0xFE1
  2027                           postinc2	equ	0xFDE
  2028                           postdec2	equ	0xFDD
  2029                           plusw2	equ	0xFDB
  2030                           fsr2h	equ	0xFDA
  2031                           fsr2l	equ	0xFD9
  2032                           status	equ	0xFD8
  2033                           
  2034 ;; *************** function _Setup *****************
  2035 ;; Defined at:
  2036 ;;		line 39 in file "main.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;		None
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;		None
  2041 ;; Return value:  Size  Location     Type
  2042 ;;		None               void
  2043 ;; Registers used:
  2044 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2054 ;;Total ram usage:        0 bytes
  2055 ;; Hardware stack levels used:    1
  2056 ;; Hardware stack levels required when called:    3
  2057 ;; This function calls:
  2058 ;;		_Write_RTC
  2059 ;; This function is called by:
  2060 ;;		_main
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           
  2064                           	psect	text12
  2065  00F608                     __ptext12:
  2066                           	opt stack 0
  2067  00F608                     _Setup:
  2068                           	opt stack 27
  2069                           
  2070                           ;main.c: 41: OSCTUNEbits.INTSRC=1;
  2071                           
  2072                           ;incstack = 0
  2073  00F608  8E9B               	bsf	3995,7,c	;volatile
  2074                           
  2075                           ;main.c: 42: OSCTUNEbits.PLLEN=0;
  2076  00F60A  9C9B               	bcf	3995,6,c	;volatile
  2077                           
  2078                           ;main.c: 43: OSCCONbits.IRCF0=1;
  2079  00F60C  88D3               	bsf	4051,4,c	;volatile
  2080                           
  2081                           ;main.c: 44: OSCCONbits.IRCF1=1;
  2082  00F60E  8AD3               	bsf	4051,5,c	;volatile
  2083                           
  2084                           ;main.c: 45: OSCCONbits.IRCF2=1;
  2085  00F610  8CD3               	bsf	4051,6,c	;volatile
  2086                           
  2087                           ;main.c: 46: OSCCONbits.SCS0=0;
  2088  00F612  90D3               	bcf	4051,0,c	;volatile
  2089                           
  2090                           ;main.c: 47: OSCCONbits.SCS1=0;
  2091  00F614  92D3               	bcf	4051,1,c	;volatile
  2092                           
  2093                           ;main.c: 48: TRISA = 0b01010011;
  2094  00F616  0E53               	movlw	83
  2095  00F618  6E92               	movwf	3986,c	;volatile
  2096                           
  2097                           ;main.c: 49: TRISB = 0;
  2098  00F61A  0E00               	movlw	0
  2099  00F61C  6E93               	movwf	3987,c	;volatile
  2100                           
  2101                           ;main.c: 50: TRISC = 0b00000111;
  2102  00F61E  0E07               	movlw	7
  2103  00F620  6E94               	movwf	3988,c	;volatile
  2104                           
  2105                           ;main.c: 54: ANCON0=0b11111110;
  2106  00F622  0EFE               	movlw	254
  2107  00F624  010F               	movlb	15	; () banked
  2108  00F626  6F48               	movwf	72,b	;volatile
  2109                           
  2110                           ;main.c: 56: ANCON1=0b1111111;
  2111  00F628  0E7F               	movlw	127
  2112  00F62A  010F               	movlb	15	; () banked
  2113  00F62C  6F49               	movwf	73,b	;volatile
  2114                           
  2115                           ;main.c: 57: ADCON0=0b00000000;
  2116  00F62E  0E00               	movlw	0
  2117  00F630  6EC2               	movwf	4034,c	;volatile
  2118                           
  2119                           ;main.c: 58: ADCON1=0b00111000;
  2120  00F632  0E38               	movlw	56
  2121  00F634  6EC1               	movwf	4033,c	;volatile
  2122                           
  2123                           ; BSR set to: 15
  2124                           ;main.c: 59: RTCCFGbits.RTCEN=1;
  2125  00F636  010F               	movlb	15	; () banked
  2126  00F638  8F3F               	bsf	63,7,b	;volatile
  2127                           
  2128                           ; BSR set to: 15
  2129                           ;main.c: 60: RTCCFGbits.RTCWREN=1;
  2130  00F63A  010F               	movlb	15	; () banked
  2131  00F63C  8B3F               	bsf	63,5,b	;volatile
  2132                           
  2133                           ; BSR set to: 15
  2134                           ;main.c: 61: T1CONbits.T1OSCEN=1;
  2135  00F63E  86CD               	bsf	4045,3,c	;volatile
  2136                           
  2137                           ; BSR set to: 15
  2138                           ;main.c: 62: Write_RTC();
  2139  00F640  EC4C  F07F         	call	_Write_RTC	;wreg free
  2140                           
  2141                           ;main.c: 63: LATBbits.LATB2 = 0;;
  2142  00F644  948A               	bcf	3978,2,c	;volatile
  2143                           
  2144                           ;main.c: 64: LATBbits.LATB1 = 0;;
  2145  00F646  928A               	bcf	3978,1,c	;volatile
  2146                           
  2147                           ;main.c: 65: LATBbits.LATB0 = 0;;
  2148  00F648  908A               	bcf	3978,0,c	;volatile
  2149                           
  2150                           ;main.c: 66: LATAbits.LATA3=0;;
  2151  00F64A  9689               	bcf	3977,3,c	;volatile
  2152                           
  2153                           ;main.c: 67: LATAbits.LATA7 = 0;;
  2154  00F64C  9E89               	bcf	3977,7,c	;volatile
  2155                           
  2156                           ;main.c: 68: LATAbits.LATA5 = 0;;
  2157  00F64E  9A89               	bcf	3977,5,c	;volatile
  2158  00F650  0012               	return		;funcret
  2159  00F652                     __end_of_Setup:
  2160                           	opt stack 0
  2161                           tblptru	equ	0xFF8
  2162                           tblptrh	equ	0xFF7
  2163                           tblptrl	equ	0xFF6
  2164                           tablat	equ	0xFF5
  2165                           postinc0	equ	0xFEE
  2166                           wreg	equ	0xFE8
  2167                           postdec1	equ	0xFE5
  2168                           fsr1l	equ	0xFE1
  2169                           postinc2	equ	0xFDE
  2170                           postdec2	equ	0xFDD
  2171                           plusw2	equ	0xFDB
  2172                           fsr2h	equ	0xFDA
  2173                           fsr2l	equ	0xFD9
  2174                           status	equ	0xFD8
  2175                           
  2176 ;; *************** function _Write_RTC *****************
  2177 ;; Defined at:
  2178 ;;		line 74 in file "C:/Archivos de programa/Unimic/unmc_01/headers\unmc_rtcc_01.h"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;		None
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;		None
  2183 ;; Return value:  Size  Location     Type
  2184 ;;		None               void
  2185 ;; Registers used:
  2186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2196 ;;Total ram usage:        0 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; Hardware stack levels required when called:    2
  2199 ;; This function calls:
  2200 ;;		_RtccWrOn
  2201 ;;		_RtccWriteDate
  2202 ;;		_RtccWriteTime
  2203 ;;		___awdiv
  2204 ;; This function is called by:
  2205 ;;		_Setup
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           	psect	text13
  2210  00FE98                     __ptext13:
  2211                           	opt stack 0
  2212  00FE98                     _Write_RTC:
  2213                           	opt stack 27
  2214                           
  2215                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
  2216                           
  2217                           ;incstack = 0
  2218  00FE98  EC7D  F07A         	call	_RtccWrOn	;wreg free
  2219                           
  2220                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
  2221  00FE9C  80A3               	bsf	4003,0,c	;volatile
  2222                           
  2223                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
  2224  00FE9E  C042  F001         	movff	_segundo,___awdiv@dividend
  2225  00FEA2  C043  F002         	movff	_segundo+1,___awdiv@dividend+1
  2226  00FEA6  0E00               	movlw	0
  2227  00FEA8  6E04               	movwf	___awdiv@divisor+1,c
  2228  00FEAA  0E0A               	movlw	10
  2229  00FEAC  6E03               	movwf	___awdiv@divisor,c
  2230  00FEAE  EC26  F07C         	call	___awdiv	;wreg free
  2231  00FEB2  5001               	movf	?___awdiv,w,c
  2232  00FEB4  6E5E               	movwf	_segundo_d,c
  2233                           
  2234                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
  2235  00FEB6  505E               	movf	_segundo_d,w,c
  2236  00FEB8  0D0A               	mullw	10
  2237  00FEBA  50F3               	movf	prodl,w,c
  2238  00FEBC  0800               	sublw	0
  2239  00FEBE  2442               	addwf	_segundo,w,c
  2240  00FEC0  0100               	movlb	0	; () banked
  2241  00FEC2  6F9A               	movwf	_segundo_u& (0+255),b
  2242                           
  2243                           ; BSR set to: 0
  2244                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
  2245  00FEC4  505E               	movf	_segundo_d,w,c
  2246  00FEC6  0D10               	mullw	16
  2247  00FEC8  50F3               	movf	prodl,w,c
  2248  00FECA  0100               	movlb	0	; () banked
  2249  00FECC  259A               	addwf	_segundo_u& (0+255),w,b
  2250  00FECE  6E4A               	movwf	_RtccTime+1,c
  2251                           
  2252                           ; BSR set to: 0
  2253                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
  2254  00FED0  C057  F001         	movff	_minuto,___awdiv@dividend
  2255  00FED4  C058  F002         	movff	_minuto+1,___awdiv@dividend+1
  2256  00FED8  0E00               	movlw	0
  2257  00FEDA  6E04               	movwf	___awdiv@divisor+1,c
  2258  00FEDC  0E0A               	movlw	10
  2259  00FEDE  6E03               	movwf	___awdiv@divisor,c
  2260  00FEE0  EC26  F07C         	call	___awdiv	;wreg free
  2261  00FEE4  5001               	movf	?___awdiv,w,c
  2262  00FEE6  6E5D               	movwf	_minuto_d,c
  2263                           
  2264                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  2265  00FEE8  505D               	movf	_minuto_d,w,c
  2266  00FEEA  0D0A               	mullw	10
  2267  00FEEC  50F3               	movf	prodl,w,c
  2268  00FEEE  0800               	sublw	0
  2269  00FEF0  2457               	addwf	_minuto,w,c
  2270  00FEF2  0100               	movlb	0	; () banked
  2271  00FEF4  6F99               	movwf	_minuto_u& (0+255),b
  2272                           
  2273                           ; BSR set to: 0
  2274                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  2275  00FEF6  505D               	movf	_minuto_d,w,c
  2276  00FEF8  0D10               	mullw	16
  2277  00FEFA  50F3               	movf	prodl,w,c
  2278  00FEFC  0100               	movlb	0	; () banked
  2279  00FEFE  2599               	addwf	_minuto_u& (0+255),w,b
  2280  00FF00  6E4B               	movwf	_RtccTime+2,c
  2281                           
  2282                           ; BSR set to: 0
  2283                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  2284  00FF02  C053  F001         	movff	_hora,___awdiv@dividend
  2285  00FF06  C054  F002         	movff	_hora+1,___awdiv@dividend+1
  2286  00FF0A  0E00               	movlw	0
  2287  00FF0C  6E04               	movwf	___awdiv@divisor+1,c
  2288  00FF0E  0E0A               	movlw	10
  2289  00FF10  6E03               	movwf	___awdiv@divisor,c
  2290  00FF12  EC26  F07C         	call	___awdiv	;wreg free
  2291  00FF16  5001               	movf	?___awdiv,w,c
  2292  00FF18  6E5B               	movwf	_hora_d,c
  2293                           
  2294                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  2295  00FF1A  505B               	movf	_hora_d,w,c
  2296  00FF1C  0D0A               	mullw	10
  2297  00FF1E  50F3               	movf	prodl,w,c
  2298  00FF20  0800               	sublw	0
  2299  00FF22  2453               	addwf	_hora,w,c
  2300  00FF24  0100               	movlb	0	; () banked
  2301  00FF26  6F97               	movwf	_hora_u& (0+255),b
  2302                           
  2303                           ; BSR set to: 0
  2304                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  2305  00FF28  505B               	movf	_hora_d,w,c
  2306  00FF2A  0D10               	mullw	16
  2307  00FF2C  50F3               	movf	prodl,w,c
  2308  00FF2E  0100               	movlb	0	; () banked
  2309  00FF30  2597               	addwf	_hora_u& (0+255),w,b
  2310  00FF32  6E4C               	movwf	_RtccTime+3,c
  2311                           
  2312                           ; BSR set to: 0
  2313                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  2314  00FF34  C04D  F001         	movff	_anio,___awdiv@dividend
  2315  00FF38  C04E  F002         	movff	_anio+1,___awdiv@dividend+1
  2316  00FF3C  0E00               	movlw	0
  2317  00FF3E  6E04               	movwf	___awdiv@divisor+1,c
  2318  00FF40  0E0A               	movlw	10
  2319  00FF42  6E03               	movwf	___awdiv@divisor,c
  2320  00FF44  EC26  F07C         	call	___awdiv	;wreg free
  2321  00FF48  5001               	movf	?___awdiv,w,c
  2322  00FF4A  6E59               	movwf	_anio_d,c
  2323                           
  2324                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  2325  00FF4C  5059               	movf	_anio_d,w,c
  2326  00FF4E  0D0A               	mullw	10
  2327  00FF50  50F3               	movf	prodl,w,c
  2328  00FF52  0800               	sublw	0
  2329  00FF54  244D               	addwf	_anio,w,c
  2330  00FF56  0100               	movlb	0	; () banked
  2331  00FF58  6F94               	movwf	_anio_u& (0+255),b
  2332                           
  2333                           ; BSR set to: 0
  2334                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  2335  00FF5A  5059               	movf	_anio_d,w,c
  2336  00FF5C  0D10               	mullw	16
  2337  00FF5E  50F3               	movf	prodl,w,c
  2338  00FF60  0100               	movlb	0	; () banked
  2339  00FF62  2594               	addwf	_anio_u& (0+255),w,b
  2340  00FF64  6E48               	movwf	_RtccDate+3,c
  2341                           
  2342                           ; BSR set to: 0
  2343                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  2344  00FF66  C055  F001         	movff	_mes,___awdiv@dividend
  2345  00FF6A  C056  F002         	movff	_mes+1,___awdiv@dividend+1
  2346  00FF6E  0E00               	movlw	0
  2347  00FF70  6E04               	movwf	___awdiv@divisor+1,c
  2348  00FF72  0E0A               	movlw	10
  2349  00FF74  6E03               	movwf	___awdiv@divisor,c
  2350  00FF76  EC26  F07C         	call	___awdiv	;wreg free
  2351  00FF7A  5001               	movf	?___awdiv,w,c
  2352  00FF7C  6E5C               	movwf	_mes_d,c
  2353                           
  2354                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  2355  00FF7E  505C               	movf	_mes_d,w,c
  2356  00FF80  0D0A               	mullw	10
  2357  00FF82  50F3               	movf	prodl,w,c
  2358  00FF84  0800               	sublw	0
  2359  00FF86  2455               	addwf	_mes,w,c
  2360  00FF88  0100               	movlb	0	; () banked
  2361  00FF8A  6F98               	movwf	_mes_u& (0+255),b
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  2365  00FF8C  505C               	movf	_mes_d,w,c
  2366  00FF8E  0D10               	mullw	16
  2367  00FF90  50F3               	movf	prodl,w,c
  2368  00FF92  0100               	movlb	0	; () banked
  2369  00FF94  2598               	addwf	_mes_u& (0+255),w,b
  2370  00FF96  6E47               	movwf	_RtccDate+2,c
  2371                           
  2372                           ; BSR set to: 0
  2373                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  2374  00FF98  C04F  F001         	movff	_dia,___awdiv@dividend
  2375  00FF9C  C050  F002         	movff	_dia+1,___awdiv@dividend+1
  2376  00FFA0  0E00               	movlw	0
  2377  00FFA2  6E04               	movwf	___awdiv@divisor+1,c
  2378  00FFA4  0E0A               	movlw	10
  2379  00FFA6  6E03               	movwf	___awdiv@divisor,c
  2380  00FFA8  EC26  F07C         	call	___awdiv	;wreg free
  2381  00FFAC  5001               	movf	?___awdiv,w,c
  2382  00FFAE  6E5A               	movwf	_fecha_d,c
  2383                           
  2384                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  2385  00FFB0  505A               	movf	_fecha_d,w,c
  2386  00FFB2  0D0A               	mullw	10
  2387  00FFB4  50F3               	movf	prodl,w,c
  2388  00FFB6  0800               	sublw	0
  2389  00FFB8  244F               	addwf	_dia,w,c
  2390  00FFBA  0100               	movlb	0	; () banked
  2391  00FFBC  6F96               	movwf	_fecha_u& (0+255),b
  2392                           
  2393                           ; BSR set to: 0
  2394                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  2395  00FFBE  505A               	movf	_fecha_d,w,c
  2396  00FFC0  0D10               	mullw	16
  2397  00FFC2  50F3               	movf	prodl,w,c
  2398  00FFC4  0100               	movlb	0	; () banked
  2399  00FFC6  2596               	addwf	_fecha_u& (0+255),w,b
  2400  00FFC8  6E46               	movwf	_RtccDate+1,c
  2401                           
  2402                           ; BSR set to: 0
  2403                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  2404  00FFCA  C051  F095         	movff	_diasem,_dia_semana
  2405                           
  2406                           ; BSR set to: 0
  2407                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  2408  00FFCE  C051  F045         	movff	_diasem,_RtccDate
  2409                           
  2410                           ; BSR set to: 0
  2411                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  2412  00FFD2  0E49               	movlw	low _RtccTime
  2413  00FFD4  6E01               	movwf	RtccWriteTime@pTm,c
  2414  00FFD6  0E00               	movlw	high _RtccTime
  2415  00FFD8  6E02               	movwf	RtccWriteTime@pTm+1,c
  2416  00FFDA  0E01               	movlw	1
  2417  00FFDC  6E03               	movwf	RtccWriteTime@di,c
  2418  00FFDE  EC23  F07E         	call	_RtccWriteTime	;wreg free
  2419                           
  2420                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  2421  00FFE2  0E45               	movlw	low _RtccDate
  2422  00FFE4  6E01               	movwf	RtccWriteDate@pDt,c
  2423  00FFE6  0E00               	movlw	high _RtccDate
  2424  00FFE8  6E02               	movwf	RtccWriteDate@pDt+1,c
  2425  00FFEA  0E01               	movlw	1
  2426  00FFEC  6E03               	movwf	RtccWriteDate@di,c
  2427  00FFEE  ECA9  F07E         	call	_RtccWriteDate	;wreg free
  2428                           
  2429                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  2430  00FFF2  010F               	movlb	15	; () banked
  2431  00FFF4  8F3F               	bsf	63,7,b	;volatile
  2432                           
  2433                           ; BSR set to: 15
  2434  00FFF6  0012               	return		;funcret
  2435  00FFF8                     __end_of_Write_RTC:
  2436                           	opt stack 0
  2437                           tblptru	equ	0xFF8
  2438                           tblptrh	equ	0xFF7
  2439                           tblptrl	equ	0xFF6
  2440                           tablat	equ	0xFF5
  2441                           prodl	equ	0xFF3
  2442                           postinc0	equ	0xFEE
  2443                           wreg	equ	0xFE8
  2444                           postdec1	equ	0xFE5
  2445                           fsr1l	equ	0xFE1
  2446                           postinc2	equ	0xFDE
  2447                           postdec2	equ	0xFDD
  2448                           plusw2	equ	0xFDB
  2449                           fsr2h	equ	0xFDA
  2450                           fsr2l	equ	0xFD9
  2451                           status	equ	0xFD8
  2452                           
  2453 ;; *************** function ___awdiv *****************
  2454 ;; Defined at:
  2455 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  dividend        2    0[COMRAM] int 
  2458 ;;  divisor         2    2[COMRAM] int 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  quotient        2    6[COMRAM] int 
  2461 ;;  sign            1    5[COMRAM] unsigned char 
  2462 ;;  counter         1    4[COMRAM] unsigned char 
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  2    0[COMRAM] int 
  2465 ;; Registers used:
  2466 ;;		wreg, status,2, status,0
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2472 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2473 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2475 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2476 ;;Total ram usage:        8 bytes
  2477 ;; Hardware stack levels used:    1
  2478 ;; This function calls:
  2479 ;;		Nothing
  2480 ;; This function is called by:
  2481 ;;		_Write_RTC
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           
  2485                           	psect	text14
  2486  00F84C                     __ptext14:
  2487                           	opt stack 0
  2488  00F84C                     ___awdiv:
  2489                           	opt stack 28
  2490                           
  2491                           ; BSR set to: 15
  2492                           ;incstack = 0
  2493  00F84C  0E00               	movlw	0
  2494  00F84E  6E06               	movwf	___awdiv@sign,c
  2495  00F850  AE04               	btfss	___awdiv@divisor+1,7,c
  2496  00F852  D007               	goto	l1800
  2497  00F854  6C03               	negf	___awdiv@divisor,c
  2498  00F856  1E04               	comf	___awdiv@divisor+1,f,c
  2499  00F858  B0D8               	btfsc	status,0,c
  2500  00F85A  2A04               	incf	___awdiv@divisor+1,f,c
  2501  00F85C  0E01               	movlw	1
  2502  00F85E  6E06               	movwf	___awdiv@sign,c
  2503  00F860  D000               	goto	l1800
  2504  00F862                     l1800:
  2505  00F862  AE02               	btfss	___awdiv@dividend+1,7,c
  2506  00F864  D007               	goto	l1806
  2507  00F866  6C01               	negf	___awdiv@dividend,c
  2508  00F868  1E02               	comf	___awdiv@dividend+1,f,c
  2509  00F86A  B0D8               	btfsc	status,0,c
  2510  00F86C  2A02               	incf	___awdiv@dividend+1,f,c
  2511  00F86E  0E01               	movlw	1
  2512  00F870  1A06               	xorwf	___awdiv@sign,f,c
  2513  00F872  D000               	goto	l1806
  2514  00F874                     l1806:
  2515  00F874  0E00               	movlw	0
  2516  00F876  6E08               	movwf	___awdiv@quotient+1,c
  2517  00F878  0E00               	movlw	0
  2518  00F87A  6E07               	movwf	___awdiv@quotient,c
  2519  00F87C  5003               	movf	___awdiv@divisor,w,c
  2520  00F87E  1004               	iorwf	___awdiv@divisor+1,w,c
  2521  00F880  B4D8               	btfsc	status,2,c
  2522  00F882  D021               	goto	l1828
  2523  00F884  0E01               	movlw	1
  2524  00F886  6E05               	movwf	___awdiv@counter,c
  2525  00F888  D005               	goto	l1814
  2526  00F88A                     l1812:
  2527  00F88A  90D8               	bcf	status,0,c
  2528  00F88C  3603               	rlcf	___awdiv@divisor,f,c
  2529  00F88E  3604               	rlcf	___awdiv@divisor+1,f,c
  2530  00F890  2A05               	incf	___awdiv@counter,f,c
  2531  00F892  D000               	goto	l1814
  2532  00F894                     l1814:
  2533  00F894  BE04               	btfsc	___awdiv@divisor+1,7,c
  2534  00F896  D002               	goto	l1816
  2535  00F898  D7F8               	goto	l1812
  2536  00F89A  D000               	goto	l1816
  2537  00F89C                     l1816:
  2538  00F89C  90D8               	bcf	status,0,c
  2539  00F89E  3607               	rlcf	___awdiv@quotient,f,c
  2540  00F8A0  3608               	rlcf	___awdiv@quotient+1,f,c
  2541  00F8A2  5003               	movf	___awdiv@divisor,w,c
  2542  00F8A4  5C01               	subwf	___awdiv@dividend,w,c
  2543  00F8A6  5004               	movf	___awdiv@divisor+1,w,c
  2544  00F8A8  5802               	subwfb	___awdiv@dividend+1,w,c
  2545  00F8AA  A0D8               	btfss	status,0,c
  2546  00F8AC  D006               	goto	l1824
  2547  00F8AE  5003               	movf	___awdiv@divisor,w,c
  2548  00F8B0  5E01               	subwf	___awdiv@dividend,f,c
  2549  00F8B2  5004               	movf	___awdiv@divisor+1,w,c
  2550  00F8B4  5A02               	subwfb	___awdiv@dividend+1,f,c
  2551  00F8B6  8007               	bsf	___awdiv@quotient,0,c
  2552  00F8B8  D000               	goto	l1824
  2553  00F8BA                     l1824:
  2554  00F8BA  90D8               	bcf	status,0,c
  2555  00F8BC  3204               	rrcf	___awdiv@divisor+1,f,c
  2556  00F8BE  3203               	rrcf	___awdiv@divisor,f,c
  2557  00F8C0  2E05               	decfsz	___awdiv@counter,f,c
  2558  00F8C2  D7EC               	goto	l1816
  2559  00F8C4  D000               	goto	l1828
  2560  00F8C6                     l1828:
  2561  00F8C6  5006               	movf	___awdiv@sign,w,c
  2562  00F8C8  B4D8               	btfsc	status,2,c
  2563  00F8CA  D005               	goto	l1832
  2564  00F8CC  6C07               	negf	___awdiv@quotient,c
  2565  00F8CE  1E08               	comf	___awdiv@quotient+1,f,c
  2566  00F8D0  B0D8               	btfsc	status,0,c
  2567  00F8D2  2A08               	incf	___awdiv@quotient+1,f,c
  2568  00F8D4  D000               	goto	l1832
  2569  00F8D6                     l1832:
  2570  00F8D6  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2571  00F8DA  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2572  00F8DE  0012               	return	
  2573  00F8E0  0012               	return		;funcret
  2574  00F8E2                     __end_of___awdiv:
  2575                           	opt stack 0
  2576                           tblptru	equ	0xFF8
  2577                           tblptrh	equ	0xFF7
  2578                           tblptrl	equ	0xFF6
  2579                           tablat	equ	0xFF5
  2580                           prodl	equ	0xFF3
  2581                           postinc0	equ	0xFEE
  2582                           wreg	equ	0xFE8
  2583                           postdec1	equ	0xFE5
  2584                           fsr1l	equ	0xFE1
  2585                           postinc2	equ	0xFDE
  2586                           postdec2	equ	0xFDD
  2587                           plusw2	equ	0xFDB
  2588                           fsr2h	equ	0xFDA
  2589                           fsr2l	equ	0xFD9
  2590                           status	equ	0xFD8
  2591                           
  2592 ;; *************** function _RtccWriteTime *****************
  2593 ;; Defined at:
  2594 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteTime.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;  pTm             2    0[COMRAM] PTR const struct .
  2597 ;;		 -> RtccTime(4), 
  2598 ;;  di              1    2[COMRAM] enum E7121
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;  tempHourWDay    2    9[COMRAM] struct .
  2601 ;;  tempMinSec      2    7[COMRAM] struct .
  2602 ;;  wasWrEn         1    6[COMRAM] enum E7121
  2603 ;;  wasAlrm         1    5[COMRAM] enum E7121
  2604 ;;  wasOn           1    4[COMRAM] enum E7121
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  1    wreg      enum E7337
  2607 ;; Registers used:
  2608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2614 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2615 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2616 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2617 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2618 ;;Total ram usage:       11 bytes
  2619 ;; Hardware stack levels used:    1
  2620 ;; Hardware stack levels required when called:    1
  2621 ;; This function calls:
  2622 ;;		_RtccWrOn
  2623 ;; This function is called by:
  2624 ;;		_Write_RTC
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           	psect	text15
  2629  00FC46                     __ptext15:
  2630                           	opt stack 0
  2631  00FC46                     _RtccWriteTime:
  2632                           	opt stack 27
  2633                           
  2634                           ;incstack = 0
  2635  00FC46  0E00               	movlw	0
  2636  00FC48  6E06               	movwf	RtccWriteTime@wasAlrm,c
  2637  00FC4A  EE20 F002          	lfsr	2,2
  2638  00FC4E  5001               	movf	RtccWriteTime@pTm,w,c
  2639  00FC50  26D9               	addwf	fsr2l,f,c
  2640  00FC52  5002               	movf	RtccWriteTime@pTm+1,w,c
  2641  00FC54  22DA               	addwfc	fsr2h,f,c
  2642  00FC56  0E5A               	movlw	90
  2643  00FC58  60DF               	cpfslt	indf2,c
  2644  00FC5A  0012               	return	
  2645  00FC5C  EE20 F001          	lfsr	2,1
  2646  00FC60  5001               	movf	RtccWriteTime@pTm,w,c
  2647  00FC62  26D9               	addwf	fsr2l,f,c
  2648  00FC64  5002               	movf	RtccWriteTime@pTm+1,w,c
  2649  00FC66  22DA               	addwfc	fsr2h,f,c
  2650  00FC68  0E5A               	movlw	90
  2651  00FC6A  60DF               	cpfslt	indf2,c
  2652  00FC6C  0012               	return	
  2653  00FC6E  EE20 F003          	lfsr	2,3
  2654  00FC72  5001               	movf	RtccWriteTime@pTm,w,c
  2655  00FC74  26D9               	addwf	fsr2l,f,c
  2656  00FC76  5002               	movf	RtccWriteTime@pTm+1,w,c
  2657  00FC78  22DA               	addwfc	fsr2h,f,c
  2658  00FC7A  0E24               	movlw	36
  2659  00FC7C  64DF               	cpfsgt	indf2,c
  2660  00FC7E  D002               	goto	l1596
  2661  00FC80  0012               	return	
  2662                           
  2663                           ;	Return value of _RtccWriteTime is never used
  2664  00FC82  0012               	return	
  2665  00FC84                     l1596:
  2666  00FC84  EE20 F002          	lfsr	2,2
  2667  00FC88  5001               	movf	RtccWriteTime@pTm,w,c
  2668  00FC8A  26D9               	addwf	fsr2l,f,c
  2669  00FC8C  5002               	movf	RtccWriteTime@pTm+1,w,c
  2670  00FC8E  22DA               	addwfc	fsr2h,f,c
  2671  00FC90  50DF               	movf	indf2,w,c
  2672  00FC92  6E09               	movwf	RtccWriteTime@tempMinSec+1,c
  2673  00FC94  EE20 F001          	lfsr	2,1
  2674  00FC98  5001               	movf	RtccWriteTime@pTm,w,c
  2675  00FC9A  26D9               	addwf	fsr2l,f,c
  2676  00FC9C  5002               	movf	RtccWriteTime@pTm+1,w,c
  2677  00FC9E  22DA               	addwfc	fsr2h,f,c
  2678  00FCA0  50DF               	movf	indf2,w,c
  2679  00FCA2  6E08               	movwf	RtccWriteTime@tempMinSec,c
  2680  00FCA4  5003               	movf	RtccWriteTime@di,w,c
  2681  00FCA6  B4D8               	btfsc	status,2,c
  2682  00FCA8  D002               	goto	l1602
  2683  00FCAA  9CF2               	bcf	intcon,6,c	;volatile
  2684  00FCAC  D000               	goto	l1602
  2685  00FCAE                     l1602:
  2686  00FCAE  0E00               	movlw	0
  2687  00FCB0  BB3F               	btfsc	63,5,b	;volatile
  2688  00FCB2  0E01               	movlw	1
  2689  00FCB4  6E07               	movwf	RtccWriteTime@wasWrEn,c
  2690  00FCB6  5007               	movf	RtccWriteTime@wasWrEn,w,c
  2691  00FCB8  A4D8               	btfss	status,2,c
  2692  00FCBA  D003               	goto	l1606
  2693  00FCBC  EC7D  F07A         	call	_RtccWrOn	;wreg free
  2694  00FCC0  D000               	goto	l1606
  2695  00FCC2                     l1606:
  2696  00FCC2  0E00               	movlw	0
  2697  00FCC4  BF3F               	btfsc	63,7,b	;volatile
  2698  00FCC6  0E01               	movlw	1
  2699  00FCC8  6E05               	movwf	RtccWriteTime@wasOn,c
  2700  00FCCA  5005               	movf	RtccWriteTime@wasOn,w,c
  2701  00FCCC  B4D8               	btfsc	status,2,c
  2702  00FCCE  D007               	goto	l1612
  2703  00FCD0  0E00               	movlw	0
  2704  00FCD2  BE91               	btfsc	3985,7,c	;volatile
  2705  00FCD4  0E01               	movlw	1
  2706  00FCD6  6E06               	movwf	RtccWriteTime@wasAlrm,c
  2707  00FCD8  010F               	movlb	15	; () banked
  2708  00FCDA  9F3F               	bcf	63,7,b	;volatile
  2709  00FCDC  D000               	goto	l1612
  2710  00FCDE                     l1612:
  2711  00FCDE  0EFC               	movlw	252
  2712  00FCE0  010F               	movlb	15	; () banked
  2713  00FCE2  173F               	andwf	63,f,b	;volatile
  2714  00FCE4  010F               	movlb	15	; () banked
  2715  00FCE6  813F               	bsf	63,0,b	;volatile
  2716                           
  2717                           ; BSR set to: 15
  2718  00FCE8  CF98 F00A          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  2719                           
  2720                           ; BSR set to: 15
  2721  00FCEC  CF99 F00B          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  2722                           
  2723                           ; BSR set to: 15
  2724  00FCF0  EE20 F003          	lfsr	2,3
  2725  00FCF4  5001               	movf	RtccWriteTime@pTm,w,c
  2726  00FCF6  26D9               	addwf	fsr2l,f,c
  2727  00FCF8  5002               	movf	RtccWriteTime@pTm+1,w,c
  2728  00FCFA  22DA               	addwfc	fsr2h,f,c
  2729  00FCFC  50DF               	movf	indf2,w,c
  2730  00FCFE  6E0A               	movwf	RtccWriteTime@tempHourWDay,c
  2731                           
  2732                           ; BSR set to: 15
  2733  00FD00  0EFC               	movlw	252
  2734  00FD02  010F               	movlb	15	; () banked
  2735  00FD04  173F               	andwf	63,f,b	;volatile
  2736                           
  2737                           ; BSR set to: 15
  2738  00FD06  010F               	movlb	15	; () banked
  2739  00FD08  813F               	bsf	63,0,b	;volatile
  2740                           
  2741                           ; BSR set to: 15
  2742  00FD0A  C00A  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  2743                           
  2744                           ; BSR set to: 15
  2745  00FD0E  C00B  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  2746                           
  2747                           ; BSR set to: 15
  2748  00FD12  C008  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  2749                           
  2750                           ; BSR set to: 15
  2751  00FD16  C009  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  2752                           
  2753                           ; BSR set to: 15
  2754  00FD1A  5005               	movf	RtccWriteTime@wasOn,w,c
  2755  00FD1C  B4D8               	btfsc	status,2,c
  2756  00FD1E  D00D               	goto	l1644
  2757                           
  2758                           ; BSR set to: 15
  2759  00FD20  010F               	movlb	15	; () banked
  2760  00FD22  8F3F               	bsf	63,7,b	;volatile
  2761                           
  2762                           ; BSR set to: 15
  2763  00FD24  5006               	movf	RtccWriteTime@wasAlrm,w,c
  2764  00FD26  B4D8               	btfsc	status,2,c
  2765  00FD28  D002               	goto	l1640
  2766                           
  2767                           ; BSR set to: 15
  2768  00FD2A  8E91               	bsf	3985,7,c	;volatile
  2769  00FD2C  D000               	goto	l1640
  2770  00FD2E                     l1640:
  2771                           
  2772                           ; BSR set to: 15
  2773  00FD2E  5007               	movf	RtccWriteTime@wasWrEn,w,c
  2774  00FD30  B4D8               	btfsc	status,2,c
  2775  00FD32  D009               	goto	l1648
  2776                           
  2777                           ; BSR set to: 15
  2778  00FD34  EC7D  F07A         	call	_RtccWrOn	;wreg free
  2779  00FD38  D006               	goto	l1648
  2780  00FD3A                     l1644:
  2781  00FD3A  5007               	movf	RtccWriteTime@wasWrEn,w,c
  2782  00FD3C  A4D8               	btfss	status,2,c
  2783  00FD3E  D003               	goto	l1648
  2784  00FD40  010F               	movlb	15	; () banked
  2785  00FD42  9B3F               	bcf	63,5,b	;volatile
  2786                           
  2787                           ; BSR set to: 15
  2788  00FD44  D000               	goto	l1648
  2789  00FD46                     l1648:
  2790  00FD46  5003               	movf	RtccWriteTime@di,w,c
  2791  00FD48  B4D8               	btfsc	status,2,c
  2792  00FD4A  0012               	return	
  2793  00FD4C  8CF2               	bsf	intcon,6,c	;volatile
  2794  00FD4E  0012               	return	
  2795                           
  2796                           ;	Return value of _RtccWriteTime is never used
  2797  00FD50  0012               	return		;funcret
  2798  00FD52                     __end_of_RtccWriteTime:
  2799                           	opt stack 0
  2800                           tblptru	equ	0xFF8
  2801                           tblptrh	equ	0xFF7
  2802                           tblptrl	equ	0xFF6
  2803                           tablat	equ	0xFF5
  2804                           prodl	equ	0xFF3
  2805                           intcon	equ	0xFF2
  2806                           postinc0	equ	0xFEE
  2807                           wreg	equ	0xFE8
  2808                           postdec1	equ	0xFE5
  2809                           fsr1l	equ	0xFE1
  2810                           indf2	equ	0xFDF
  2811                           postinc2	equ	0xFDE
  2812                           postdec2	equ	0xFDD
  2813                           plusw2	equ	0xFDB
  2814                           fsr2h	equ	0xFDA
  2815                           fsr2l	equ	0xFD9
  2816                           status	equ	0xFD8
  2817                           
  2818 ;; *************** function _RtccWriteDate *****************
  2819 ;; Defined at:
  2820 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteDate.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  pDt             2    0[COMRAM] PTR const struct .
  2823 ;;		 -> RtccDate(4), 
  2824 ;;  di              1    2[COMRAM] enum E7121
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;  tempHourWDay    2   11[COMRAM] struct .
  2827 ;;  tempDayMonth    2    9[COMRAM] struct .
  2828 ;;  tempYear        2    6[COMRAM] struct .
  2829 ;;  wasWrEn         1    8[COMRAM] enum E7121
  2830 ;;  wasAlrm         1    5[COMRAM] enum E7121
  2831 ;;  wasOn           1    4[COMRAM] enum E7121
  2832 ;; Return value:  Size  Location     Type
  2833 ;;                  1    wreg      enum E7337
  2834 ;; Registers used:
  2835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2841 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2842 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2843 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2844 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2845 ;;Total ram usage:       13 bytes
  2846 ;; Hardware stack levels used:    1
  2847 ;; Hardware stack levels required when called:    1
  2848 ;; This function calls:
  2849 ;;		_RtccWrOn
  2850 ;; This function is called by:
  2851 ;;		_Write_RTC
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           	psect	text16
  2856  00FD52                     __ptext16:
  2857                           	opt stack 0
  2858  00FD52                     _RtccWriteDate:
  2859                           	opt stack 27
  2860                           
  2861                           ;incstack = 0
  2862  00FD52  0E00               	movlw	0
  2863  00FD54  6E06               	movwf	RtccWriteDate@wasAlrm,c
  2864  00FD56  EE20 F002          	lfsr	2,2
  2865  00FD5A  5001               	movf	RtccWriteDate@pDt,w,c
  2866  00FD5C  26D9               	addwf	fsr2l,f,c
  2867  00FD5E  5002               	movf	RtccWriteDate@pDt+1,w,c
  2868  00FD60  22DA               	addwfc	fsr2h,f,c
  2869  00FD62  0E13               	movlw	19
  2870  00FD64  60DF               	cpfslt	indf2,c
  2871  00FD66  0012               	return	
  2872  00FD68  EE20 F002          	lfsr	2,2
  2873  00FD6C  5001               	movf	RtccWriteDate@pDt,w,c
  2874  00FD6E  26D9               	addwf	fsr2l,f,c
  2875  00FD70  5002               	movf	RtccWriteDate@pDt+1,w,c
  2876  00FD72  22DA               	addwfc	fsr2h,f,c
  2877  00FD74  50DF               	movf	indf2,w,c
  2878  00FD76  B4D8               	btfsc	status,2,c
  2879  00FD78  0012               	return	
  2880  00FD7A  EE20 F001          	lfsr	2,1
  2881  00FD7E  5001               	movf	RtccWriteDate@pDt,w,c
  2882  00FD80  26D9               	addwf	fsr2l,f,c
  2883  00FD82  5002               	movf	RtccWriteDate@pDt+1,w,c
  2884  00FD84  22DA               	addwfc	fsr2h,f,c
  2885  00FD86  0E32               	movlw	50
  2886  00FD88  60DF               	cpfslt	indf2,c
  2887  00FD8A  0012               	return	
  2888  00FD8C  EE20 F001          	lfsr	2,1
  2889  00FD90  5001               	movf	RtccWriteDate@pDt,w,c
  2890  00FD92  26D9               	addwf	fsr2l,f,c
  2891  00FD94  5002               	movf	RtccWriteDate@pDt+1,w,c
  2892  00FD96  22DA               	addwfc	fsr2h,f,c
  2893  00FD98  50DF               	movf	indf2,w,c
  2894  00FD9A  B4D8               	btfsc	status,2,c
  2895  00FD9C  0012               	return	
  2896  00FD9E  EE20 F003          	lfsr	2,3
  2897  00FDA2  5001               	movf	RtccWriteDate@pDt,w,c
  2898  00FDA4  26D9               	addwf	fsr2l,f,c
  2899  00FDA6  5002               	movf	RtccWriteDate@pDt+1,w,c
  2900  00FDA8  22DA               	addwfc	fsr2h,f,c
  2901  00FDAA  0E99               	movlw	153
  2902  00FDAC  64DF               	cpfsgt	indf2,c
  2903  00FDAE  D002               	goto	l1664
  2904  00FDB0  0012               	return	
  2905                           
  2906                           ;	Return value of _RtccWriteDate is never used
  2907  00FDB2  0012               	return	
  2908  00FDB4                     l1664:
  2909  00FDB4  EE20 F003          	lfsr	2,3
  2910  00FDB8  5001               	movf	RtccWriteDate@pDt,w,c
  2911  00FDBA  26D9               	addwf	fsr2l,f,c
  2912  00FDBC  5002               	movf	RtccWriteDate@pDt+1,w,c
  2913  00FDBE  22DA               	addwfc	fsr2h,f,c
  2914  00FDC0  50DF               	movf	indf2,w,c
  2915  00FDC2  6E07               	movwf	RtccWriteDate@tempYear,c
  2916  00FDC4  EE20 F001          	lfsr	2,1
  2917  00FDC8  5001               	movf	RtccWriteDate@pDt,w,c
  2918  00FDCA  26D9               	addwf	fsr2l,f,c
  2919  00FDCC  5002               	movf	RtccWriteDate@pDt+1,w,c
  2920  00FDCE  22DA               	addwfc	fsr2h,f,c
  2921  00FDD0  50DF               	movf	indf2,w,c
  2922  00FDD2  6E0A               	movwf	RtccWriteDate@tempDayMonth,c
  2923  00FDD4  EE20 F002          	lfsr	2,2
  2924  00FDD8  5001               	movf	RtccWriteDate@pDt,w,c
  2925  00FDDA  26D9               	addwf	fsr2l,f,c
  2926  00FDDC  5002               	movf	RtccWriteDate@pDt+1,w,c
  2927  00FDDE  22DA               	addwfc	fsr2h,f,c
  2928  00FDE0  50DF               	movf	indf2,w,c
  2929  00FDE2  6E0B               	movwf	RtccWriteDate@tempDayMonth+1,c
  2930  00FDE4  5003               	movf	RtccWriteDate@di,w,c
  2931  00FDE6  B4D8               	btfsc	status,2,c
  2932  00FDE8  D002               	goto	l1670
  2933  00FDEA  9CF2               	bcf	intcon,6,c	;volatile
  2934  00FDEC  D000               	goto	l1670
  2935  00FDEE                     l1670:
  2936  00FDEE  0E00               	movlw	0
  2937  00FDF0  BB3F               	btfsc	63,5,b	;volatile
  2938  00FDF2  0E01               	movlw	1
  2939  00FDF4  6E09               	movwf	RtccWriteDate@wasWrEn,c
  2940  00FDF6  5009               	movf	RtccWriteDate@wasWrEn,w,c
  2941  00FDF8  A4D8               	btfss	status,2,c
  2942  00FDFA  D003               	goto	l1674
  2943  00FDFC  EC7D  F07A         	call	_RtccWrOn	;wreg free
  2944  00FE00  D000               	goto	l1674
  2945  00FE02                     l1674:
  2946  00FE02  0E00               	movlw	0
  2947  00FE04  BF3F               	btfsc	63,7,b	;volatile
  2948  00FE06  0E01               	movlw	1
  2949  00FE08  6E05               	movwf	RtccWriteDate@wasOn,c
  2950  00FE0A  5005               	movf	RtccWriteDate@wasOn,w,c
  2951  00FE0C  B4D8               	btfsc	status,2,c
  2952  00FE0E  D007               	goto	l1680
  2953  00FE10  0E00               	movlw	0
  2954  00FE12  BE91               	btfsc	3985,7,c	;volatile
  2955  00FE14  0E01               	movlw	1
  2956  00FE16  6E06               	movwf	RtccWriteDate@wasAlrm,c
  2957  00FE18  010F               	movlb	15	; () banked
  2958  00FE1A  9F3F               	bcf	63,7,b	;volatile
  2959  00FE1C  D000               	goto	l1680
  2960  00FE1E                     l1680:
  2961  00FE1E  0EFC               	movlw	252
  2962  00FE20  010F               	movlb	15	; () banked
  2963  00FE22  173F               	andwf	63,f,b	;volatile
  2964  00FE24  010F               	movlb	15	; () banked
  2965  00FE26  813F               	bsf	63,0,b	;volatile
  2966                           
  2967                           ; BSR set to: 15
  2968  00FE28  CF98 F00C          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  2969                           
  2970                           ; BSR set to: 15
  2971  00FE2C  CF99 F00D          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  2972                           
  2973                           ; BSR set to: 15
  2974  00FE30  C001  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  2975  00FE34  C002  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  2976  00FE38  50DF               	movf	indf2,w,c
  2977  00FE3A  6E0D               	movwf	RtccWriteDate@tempHourWDay+1,c
  2978                           
  2979                           ; BSR set to: 15
  2980  00FE3C  0EFC               	movlw	252
  2981  00FE3E  010F               	movlb	15	; () banked
  2982  00FE40  173F               	andwf	63,f,b	;volatile
  2983                           
  2984                           ; BSR set to: 15
  2985  00FE42  0E03               	movlw	3
  2986  00FE44  010F               	movlb	15	; () banked
  2987  00FE46  133F               	iorwf	63,f,b	;volatile
  2988                           
  2989                           ; BSR set to: 15
  2990  00FE48  C007  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  2991                           
  2992                           ; BSR set to: 15
  2993  00FE4C  C008  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  2994                           
  2995                           ; BSR set to: 15
  2996  00FE50  C00A  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  2997                           
  2998                           ; BSR set to: 15
  2999  00FE54  C00B  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  3000                           
  3001                           ; BSR set to: 15
  3002  00FE58  C00C  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  3003                           
  3004                           ; BSR set to: 15
  3005  00FE5C  C00D  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  3006                           
  3007                           ; BSR set to: 15
  3008  00FE60  5005               	movf	RtccWriteDate@wasOn,w,c
  3009  00FE62  B4D8               	btfsc	status,2,c
  3010  00FE64  D00D               	goto	l1716
  3011                           
  3012                           ; BSR set to: 15
  3013  00FE66  010F               	movlb	15	; () banked
  3014  00FE68  8F3F               	bsf	63,7,b	;volatile
  3015                           
  3016                           ; BSR set to: 15
  3017  00FE6A  5006               	movf	RtccWriteDate@wasAlrm,w,c
  3018  00FE6C  B4D8               	btfsc	status,2,c
  3019  00FE6E  D002               	goto	l1712
  3020                           
  3021                           ; BSR set to: 15
  3022  00FE70  8E91               	bsf	3985,7,c	;volatile
  3023  00FE72  D000               	goto	l1712
  3024  00FE74                     l1712:
  3025                           
  3026                           ; BSR set to: 15
  3027  00FE74  5009               	movf	RtccWriteDate@wasWrEn,w,c
  3028  00FE76  B4D8               	btfsc	status,2,c
  3029  00FE78  D009               	goto	l1720
  3030                           
  3031                           ; BSR set to: 15
  3032  00FE7A  EC7D  F07A         	call	_RtccWrOn	;wreg free
  3033  00FE7E  D006               	goto	l1720
  3034  00FE80                     l1716:
  3035  00FE80  5009               	movf	RtccWriteDate@wasWrEn,w,c
  3036  00FE82  A4D8               	btfss	status,2,c
  3037  00FE84  D003               	goto	l1720
  3038  00FE86  010F               	movlb	15	; () banked
  3039  00FE88  9B3F               	bcf	63,5,b	;volatile
  3040                           
  3041                           ; BSR set to: 15
  3042  00FE8A  D000               	goto	l1720
  3043  00FE8C                     l1720:
  3044  00FE8C  5003               	movf	RtccWriteDate@di,w,c
  3045  00FE8E  B4D8               	btfsc	status,2,c
  3046  00FE90  0012               	return	
  3047  00FE92  9CF2               	bcf	intcon,6,c	;volatile
  3048  00FE94  0012               	return	
  3049                           
  3050                           ;	Return value of _RtccWriteDate is never used
  3051  00FE96  0012               	return		;funcret
  3052  00FE98                     __end_of_RtccWriteDate:
  3053                           	opt stack 0
  3054                           tblptru	equ	0xFF8
  3055                           tblptrh	equ	0xFF7
  3056                           tblptrl	equ	0xFF6
  3057                           tablat	equ	0xFF5
  3058                           prodl	equ	0xFF3
  3059                           intcon	equ	0xFF2
  3060                           postinc0	equ	0xFEE
  3061                           wreg	equ	0xFE8
  3062                           postdec1	equ	0xFE5
  3063                           fsr1l	equ	0xFE1
  3064                           indf2	equ	0xFDF
  3065                           postinc2	equ	0xFDE
  3066                           postdec2	equ	0xFDD
  3067                           plusw2	equ	0xFDB
  3068                           fsr2h	equ	0xFDA
  3069                           fsr2l	equ	0xFD9
  3070                           status	equ	0xFD8
  3071                           
  3072 ;; *************** function _RtccWrOn *****************
  3073 ;; Defined at:
  3074 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWrOn.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;		None
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;  data            2    0        unsigned int 
  3079 ;; Return value:  Size  Location     Type
  3080 ;;		None               void
  3081 ;; Registers used:
  3082 ;;		wreg, status,2
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3092 ;;Total ram usage:        0 bytes
  3093 ;; Hardware stack levels used:    1
  3094 ;; This function calls:
  3095 ;;		Nothing
  3096 ;; This function is called by:
  3097 ;;		_Write_RTC
  3098 ;;		_RtccWriteDate
  3099 ;;		_RtccWriteTime
  3100 ;; This function uses a non-reentrant model
  3101 ;;
  3102                           
  3103                           	psect	text17
  3104  00F4FA                     __ptext17:
  3105                           	opt stack 0
  3106  00F4FA                     _RtccWrOn:
  3107                           	opt stack 27
  3108                           
  3109                           ;incstack = 0
  3110  00F4FA  9CF2               	bcf	intcon,6,c	;volatile
  3111  00F4FC  0E55               	movlw	85
  3112  00F4FE  6EA7               	movwf	4007,c	;volatile
  3113  00F500  0EAA               	movlw	170
  3114  00F502  6EA7               	movwf	4007,c	;volatile
  3115  00F504  010F               	movlb	15	; () banked
  3116  00F506  8B3F               	bsf	63,5,b	;volatile
  3117                           
  3118                           ; BSR set to: 15
  3119  00F508  8CF2               	bsf	intcon,6,c	;volatile
  3120                           
  3121                           ; BSR set to: 15
  3122  00F50A  0012               	return		;funcret
  3123  00F50C                     __end_of_RtccWrOn:
  3124                           	opt stack 0
  3125  0000                     tblptru	equ	0xFF8
  3126                           tblptrh	equ	0xFF7
  3127                           tblptrl	equ	0xFF6
  3128                           tablat	equ	0xFF5
  3129                           prodl	equ	0xFF3
  3130                           intcon	equ	0xFF2
  3131                           postinc0	equ	0xFEE
  3132                           wreg	equ	0xFE8
  3133                           postdec1	equ	0xFE5
  3134                           fsr1l	equ	0xFE1
  3135                           indf2	equ	0xFDF
  3136                           postinc2	equ	0xFDE
  3137                           postdec2	equ	0xFDD
  3138                           plusw2	equ	0xFDB
  3139                           fsr2h	equ	0xFDA
  3140                           fsr2l	equ	0xFD9
  3141                           status	equ	0xFD8
  3142                           tblptru	equ	0xFF8
  3143                           tblptrh	equ	0xFF7
  3144                           tblptrl	equ	0xFF6
  3145                           tablat	equ	0xFF5
  3146                           prodl	equ	0xFF3
  3147                           intcon	equ	0xFF2
  3148                           postinc0	equ	0xFEE
  3149                           wreg	equ	0xFE8
  3150                           postdec1	equ	0xFE5
  3151                           fsr1l	equ	0xFE1
  3152                           indf2	equ	0xFDF
  3153                           postinc2	equ	0xFDE
  3154                           postdec2	equ	0xFDD
  3155                           plusw2	equ	0xFDB
  3156                           fsr2h	equ	0xFDA
  3157                           fsr2l	equ	0xFD9
  3158                           status	equ	0xFD8
  3159                           
  3160                           	psect	rparam
  3161  0000                     tblptru	equ	0xFF8
  3162                           tblptrh	equ	0xFF7
  3163                           tblptrl	equ	0xFF6
  3164                           tablat	equ	0xFF5
  3165                           prodl	equ	0xFF3
  3166                           intcon	equ	0xFF2
  3167                           postinc0	equ	0xFEE
  3168                           wreg	equ	0xFE8
  3169                           postdec1	equ	0xFE5
  3170                           fsr1l	equ	0xFE1
  3171                           indf2	equ	0xFDF
  3172                           postinc2	equ	0xFDE
  3173                           postdec2	equ	0xFDD
  3174                           plusw2	equ	0xFDB
  3175                           fsr2h	equ	0xFDA
  3176                           fsr2l	equ	0xFD9
  3177                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         71
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      95
    BANK0           160      0      59
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    activar_led@id_led	PTR int  size(2) Largest target is 2
		 -> main@id_led(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_flash_leds
    _leer_intensidad->_calcular_intensidad
    _calcular_intensidad->___fttol
    ___fttol->___ftmul
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    _flash_leds->_leer_intensidad
    _activar_led->_intensidad_led
    _intensidad_led->_apagar_led
    _intensidad_led->_encender_led
    _Write_RTC->_RtccWriteDate

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   12236
                                             53 COMRAM     4     4      0
                              _Setup
                        _activar_led
                         _flash_leds
                    _leer_intensidad
 ---------------------------------------------------------------------------------
 (1) _leer_intensidad                                      5     3      2    5120
                                             44 COMRAM     5     3      2
                _calcular_intensidad
 ---------------------------------------------------------------------------------
 (2) _calcular_intensidad                                  2     0      2    5097
                                             42 COMRAM     2     0      2
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     316
                                             27 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    2548
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    2147
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1992
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _flash_leds                                           4     2      2    2316
                                             49 COMRAM     4     2      2
                         _apagar_led
                     _intensidad_led
                    _leer_intensidad (ARG)
 ---------------------------------------------------------------------------------
 (1) _activar_led                                          8     4      4    2447
                                             11 COMRAM     8     4      4
                         _apagar_led
                     _intensidad_led
 ---------------------------------------------------------------------------------
 (2) _intensidad_led                                       7     3      4    1820
                                              4 COMRAM     7     3      4
                         _apagar_led
                       _encender_led
 ---------------------------------------------------------------------------------
 (3) _encender_led                                         4     2      2      86
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _apagar_led                                           4     2      2     342
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0    2277
                          _Write_RTC
 ---------------------------------------------------------------------------------
 (2) _Write_RTC                                            0     0      0    2277
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1068
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (4) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
   _activar_led
     _apagar_led
     _intensidad_led
       _apagar_led
       _encender_led
   _flash_leds
     _apagar_led
     _intensidad_led
       _apagar_led
       _encender_led
     _leer_intensidad (ARG)
       _calcular_intensidad
         ___awtoft
           ___ftpack
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
   _leer_intensidad
     _calcular_intensidad
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      3B       5       36.9%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     39      5F       1      100.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9A       6        0.0%
DATA                 0      0      9A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Nov 01 19:19:32 2016

                           _a 003A                             _b 003C                             _c 0090  
                           _i 003E                             _j 0040                             _k 0092  
             ?_intensidad_led 0005                  ___awdiv@sign 0006                  __CFG_CP0$OFF 000000  
                         l141 F70E                           l150 F654                           l142 F716  
                         l143 F71E                           l152 F658                           l144 F722  
                         l153 F65C                           l145 F726                           l154 F660  
                         l155 F664                           l139 F706                           l156 F668  
                         l180 F84A                           l165 F702                           l193 F512  
                         l630 FA18                ??_encender_led 0003                           _dia 004F  
                         _key 0044                           _mes 0055                           wreg 000FE8  
                        l2000 F90E                          l2010 F966                          l2002 F922  
                        l1602 FCAE                          l1612 FCDE                          l1606 FCC2  
                        l1720 FE8C                          l1712 FE74                          l1640 FD2E  
                        l1800 F862                          l1560 F99C                          l1570 FA00  
                        l1562 F9A8                          l2194 F7AC                          l2186 F77A  
                        l1716 FE80                          l1644 FD3A                          l1812 F88A  
                        l1572 FA0C                          l1564 F9C8                          l1556 F98C  
                        l1670 FDEE                          l1814 F894                          l1806 F874  
                        l1750 FA6A                          l1680 FE1E                          l1664 FDB4  
                        l1648 FD46                          l1832 F8D6                          l1824 F8BA  
                        l1816 F89C                          l1728 F72A                          l1584 FA32  
                        l1568 F9E0                          l1674 FE02                          l1738 F66C  
                        l1578 FA20                          l1770 FAC6                          l1596 FC84  
                        l1828 F8C6                          l1844 F55A                          l1780 FAF4  
                        l1756 FA92                          l1950 F6D2                          l1774 FAD8  
                        l1854 FB70                          l1952 F6E0                          l1784 FB06  
                        l1872 FBD8                          l1946 F6B0                          l1778 FAEE  
                        l1890 FC32                          l1882 FC02                          l1956 F6EE  
                        l1788 FB1C                          l1884 FC10                          l1876 FBE8  
                        l1886 FC1A                          l1992 F836                          l1996 F8EC  
                        l1988 F7D0                          u1210 FB8E                          u1061 FA52  
                        u1310 F954                          u1215 FB86                          u1081 FA7A  
                        u1191 FB54                          u1507 F6E2                          u1480 F79A  
                        u1497 F51C                          _anio 004D                          _flag 02F8  
                        _main F764                          _hora 0053                  ___ftpack@arg 0001  
                ___ftpack@exp 0004                          fsr2h 000FDA                          fsr1l 000FE1  
                        indf2 000FDF                          fsr2l 000FD9                 __CFG_T1DIG$ON 000000  
                        prodl 000FF3                          start 0000                 __CFG_IESO$OFF 000000  
                ___ftmul@cntr 001A                  ___param_bank 000010                  ___ftmul@sign 001B  
                ___fttol@exp1 002A                  ___fttol@lval 0026                 __CFG_PLLDIV$1 000000  
                       ?_main 0001               __end_of___awdiv F8E2               __end_of___ftmul FB44  
             ___awdiv@divisor 0003               __end_of___fttol FC46               ___awdiv@counter 0005  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISC 000F94  
              __CFG_FCMEN$OFF 000000                         _Setup F608                 ___awtoft@sign 000C  
                       _mes_d 005C                         _mes_u 0098                 ___ftpack@sign 0005  
__size_of_calcular_intensidad 0044                __pbitbssCOMRAM 02F8                         tablat 000FF5  
        __size_of_activar_led 009A                         plusw2 000FDB                         status 000FD8  
    __size_of_leer_intensidad 0038       __CFG_DSWDTOSC$INTOSCREF 000000               __initialization F5C4  
                __end_of_main F7C6                        ??_main 0036                 ___fttol@sign1 0025  
               __activetblptr 000002              __end_of_RtccWrOn F50C                        ?_Setup 0001  
                      _ADCON0 000FC2                        _ADCON1 000FC1                        _ADRESH 000FC4  
                      _EECON2 000FA7                        _ANCON0 000F48                        _ANCON1 000F49  
            ___awdiv@dividend 0001              __end_of___awtoft F580              __end_of___ftpack FA42  
              __CFG_WDTEN$OFF 000000              RtccWriteDate@pDt 0001                        _RTCCFG 000F3F  
              __CFG_WPCFG$OFF 000000         activar_led@intensidad 000C                __CFG_WPDIS$OFF 000000  
        __end_of_encender_led F764                __CFG_XINST$OFF 000000                     ??___awdiv 0005  
              __CFG_STVREN$ON 000000                        _diasem 0051                     ??___ftmul 0013  
                      _anio_d 0059                     ??___fttol 0020                        _anio_u 0094  
                      _hora_d 005B                        _hora_u 0097                        clear_0 F5CA  
                      clear_1 F5D8              ___awdiv@quotient 0007                        _minuto 0057  
       __end_of_RtccWriteDate FE98         __end_of_RtccWriteTime FD52         ___ftmul@f3_as_product 0017  
            RtccWriteTime@pTm 0001                  __pdataCOMRAM 004D          flash_leds@intensidad 0032  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                  __accesstop 0060       __end_of__initialization F5FE            __size_of_Write_RTC 0160  
               ___rparam_used 000001              ??_intensidad_led 0009                    ___awtoft@c 0009  
                  ___ftmul@f1 000D                    ___ftmul@f2 0010                    ___fttol@f1 001C  
              __pcstackCOMRAM 0001                 __end_of_Setup F652             ??_leer_intensidad 002F  
             __CFG_DSWDTPS$G2 000000               __CFG_OSC$INTOSC 000000                       ??_Setup 000E  
                  __pbssBANK0 0060                    _dia_semana 0095     RtccWriteTime@tempHourWDay 000A  
                  __pnvCOMRAM 0059                    _apagar_led F652                     ?_RtccWrOn 0001  
         _calcular_intensidad F580                     ?___awtoft 0009                     ?___ftpack 0001  
  calcular_intensidad@voltage 002B             __end_of_Write_RTC FFF8         intensidad_led@num_led 0005  
                  _flash_leds F7C6                       _RTCVALH 000F99                       _RTCVALL 000F98  
        ?_calcular_intensidad 002B         __size_of_encender_led 0060                       __Hparam 0000  
              main@intensidad 0036                       __Lparam 0000                    ??_RtccWrOn 0001  
                     ___awdiv F84C                       ___ftmul FA42                       ___fttol FB44  
                 _RtccTimeVal 008C                       __pcinit F5C4                       _fecha_d 005A  
                     _fecha_u 0096                    ??___awtoft 000C                    ??___ftpack 0006  
                     __ramtop 0F00                       __ptext0 F764                       __ptext1 F50C  
                     __ptext2 F580                       __ptext3 FB44                       __ptext4 FA42  
                     __ptext5 F544                       __ptext6 F97C                       __ptext7 F7C6  
                     __ptext8 F8E2                       __ptext9 F6A6                       _buffer2 0060  
                   _T1CONbits 000FCD                  _encender_led F704                       _segundo 0042  
               ??_activar_led 0010         ??_calcular_intensidad 002D          end_of_initialization F5FE  
           activar_led@id_led 000E                 __Lmediumconst 0000                   ?_apagar_led 0001  
               apagar_led@led 0001                       postdec1 000FE5                       postdec2 000FDD  
                     postinc0 000FEE                       postinc2 000FDE                     _PORTAbits 000F80  
            __CFG_DSBOREN$OFF 000000                   ?_flash_leds 0032              __CFG_CPUDIV$OSC1 000000  
      leer_intensidad@voltage 0030               _leer_intensidad F50C                    main@id_led 0038  
            __CFG_IOL1WAY$OFF 000000           __end_of_activar_led F97C     RtccWriteDate@tempDayMonth 000A  
         __CFG_MSSP7B_EN$MSK7 000000                   ___ftmul@exp 0016            flash_leds@contador 0034  
               __pidataCOMRAM F4EE     RtccWriteDate@tempHourWDay 000C              __CFG_DSWDTEN$OFF 000000  
         __size_of_apagar_led 0054           start_initialization F5C4          RtccWriteTime@wasAlrm 0006  
        RtccWriteTime@wasWrEn 0007        __size_of_RtccWriteDate 0146               RtccWriteDate@di 0003  
      __size_of_RtccWriteTime 010C           __size_of_flash_leds 0086             __size_of_RtccWrOn 0012  
             RtccWriteTime@di 0003              __CFG_LPT1OSC$OFF 000000               intensidad_led@i 000A  
                 _ALRMCFGbits 000F91             __size_of___awtoft 003C             __size_of___ftpack 00C6  
                 __pbssCOMRAM 003A       __end_of_leer_intensidad F544                     _Write_RTC FE98  
                 _activar_led F8E2                     __pnvBANK0 0094                      ?___awdiv 0001  
                    ?___ftmul 000D                      ?___fttol 001C       RtccWriteTime@tempMinSec 0008  
     __size_of_intensidad_led 005E                 _RtccWriteDate FD52                 _RtccWriteTime FC46  
        __CFG_RTCOSC$T1OSCREF 000000                __size_of_Setup 004A                    ?_Write_RTC 0001  
            _RtccAlrmTimeDate 0074                      _LATAbits 000F89                      _LATBbits 000F8A  
                ??_apagar_led 0003                      _PIE3bits 000FA3                     _segundo_d 005E  
                   _segundo_u 009A              __CFG_WDTPS$32768 000000            RtccWriteDate@wasOn 0005  
          _Rtcc_read_TimeDate 0084                ?_RtccWriteDate 0001                    _ADCON0bits 000FC2  
              ?_RtccWriteTime 0001   __end_of_calcular_intensidad F5C4                  ??_flash_leds 0034  
          __end_of_apagar_led F6A6              ?_leer_intensidad 002D                     copy_data0 F5F2  
         activar_led@contador 0012                      __Hrparam 0000                      _RtccDate 0045  
                    __Lrparam 0000                      _RtccTime 0049                      _RtccWrOn F4FA  
          __end_of_flash_leds F84C              __size_of___awdiv 0096      intensidad_led@intensidad 0007  
            __size_of___ftmul 0102              __size_of___fttol 0102                      ___awtoft F544  
                    ___ftpack F97C                  _RtccTimeDate 007C                   ??_Write_RTC 000E  
                    __ptext10 F704                      __ptext11 F652                      __ptext12 F608  
                    __ptext13 FE98                      __ptext14 F84C                      __ptext15 FC46  
                    __ptext16 FD52                      __ptext17 F4FA                 __size_of_main 0062  
                    _minuto_d 005D                      _minuto_u 0099               ??_RtccWriteDate 0004  
             ??_RtccWriteTime 0004                _intensidad_led F6A6                   _OSCTUNEbits 000F9B  
                  _INTCONbits 000FF2            RtccWriteTime@wasOn 0005                  ?_activar_led 000C  
             encender_led@led 0001                    _OSCCONbits 000FD3         RtccWriteDate@tempYear 0007  
      __end_of_intensidad_led F704                    _RTCCFGbits 000F3F                 ?_encender_led 0001  
        RtccWriteDate@wasAlrm 0006          RtccWriteDate@wasWrEn 0009  
